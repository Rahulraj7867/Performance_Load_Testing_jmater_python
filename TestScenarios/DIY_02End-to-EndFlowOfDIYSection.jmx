<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="End-to-EndFlowOfDIYSection">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">https://idfc-diy3.zykrr.com/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="users" elementType="Argument">
            <stringProp name="Argument.name">users</stringProp>
            <stringProp name="Argument.value">500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults">
        <stringProp name="HTTPSampler.domain">https://idfc-diy3.zykrr.com/</stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <stringProp name="ThreadGroup.num_threads">${users}</stringProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">DiySectionAllFlow.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="644 - /api/login ()">
              <stringProp name="HTTPSampler.domain">idfc-auth.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/login</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-accounts.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-accounts.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="password" elementType="Header">
                    <stringProp name="Header.name">password</stringProp>
                    <stringProp name="Header.value">daad78bd</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="username" elementType="Header">
                    <stringProp name="Header.name">username</stringProp>
                    <stringProp name="Header.value">testing_aws@zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">token</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="675 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    selfPermissions\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    selfPermissions
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="676 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    questionnaire\n    name\n    updatedAt\n    metricConfig {\n      id\n      campaignId\n      rangeStart\n      rangeEnd\n      detractorUpperRange\n      promoterLowerRange\n      type\n      promoterLabel\n      detractorLabel\n      passiveLabel\n      metricLabel\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    questionnaire
    name
    updatedAt
    metricConfig {
      id
      campaignId
      rangeStart
      rangeEnd
      detractorUpperRange
      promoterLowerRange
      type
      promoterLabel
      detractorLabel
      passiveLabel
      metricLabel
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="678 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    questionnaire\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    questionnaire
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="679 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    questionnaire\n    organizationId\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    questionnaire
    organizationId
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="680 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;organizationId&quot;:&quot;05dba122-d253-4ef2-bebe-82b243549639&quot;},&quot;query&quot;:&quot;query ($organizationId: ID!) {\n  organization(organizationId: $organizationId) {\n    participantsFields {\n      type\n      fieldName\n      isUnique\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($organizationId: ID!) {
  organization(organizationId: $organizationId) {
    participantsFields {
      type
      fieldName
      isUnique
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;organizationId&quot;:&quot;05dba122-d253-4ef2-bebe-82b243549639&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="683 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{},&quot;query&quot;:&quot;{\n  organizations {\n    id\n    name\n    domainName\n    __typename\n  }\n}\n&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="684 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;campaigns&quot;,&quot;variables&quot;:{&quot;sortBy&quot;:&quot;CAMPAIGN_NAME&quot;,&quot;sortOrder&quot;:&quot;DESC&quot;},&quot;query&quot;:&quot;query campaigns($sortBy: String, $sortOrder: String, $orgFilterBy: String) {\n  campaigns(sortBy: $sortBy, sortOrder: $sortOrder, orgFilterBy: $orgFilterBy) {\n    id\n    name\n    createdAt\n    updatedAt\n    industry\n    organizationId\n    organizationname\n    status\n    type\n    selfPermissions\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.operationName">campaigns</stringProp>
              <stringProp name="GraphQLHTTPSampler.query">query campaigns($sortBy: String, $sortOrder: String, $orgFilterBy: String) {
  campaigns(sortBy: $sortBy, sortOrder: $sortOrder, orgFilterBy: $orgFilterBy) {
    id
    name
    createdAt
    updatedAt
    industry
    organizationId
    organizationname
    status
    type
    selfPermissions
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;sortBy&quot;:&quot;CAMPAIGN_NAME&quot;,&quot;sortOrder&quot;:&quot;DESC&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="711 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    selfPermissions\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    selfPermissions
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="710 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    questionnaire\n    name\n    updatedAt\n    metricConfig {\n      id\n      campaignId\n      rangeStart\n      rangeEnd\n      detractorUpperRange\n      promoterLowerRange\n      type\n      promoterLabel\n      detractorLabel\n      passiveLabel\n      metricLabel\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    questionnaire
    name
    updatedAt
    metricConfig {
      id
      campaignId
      rangeStart
      rangeEnd
      detractorUpperRange
      promoterLowerRange
      type
      promoterLabel
      detractorLabel
      passiveLabel
      metricLabel
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="712 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    name\n    questionnaire\n    translations\n    thankyouPageSettings\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    name
    questionnaire
    translations
    thankyouPageSettings
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="714 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;UpdateQuestionnaire&quot;,&quot;variables&quot;:{&quot;questionnairePreviouslyUpdateAt&quot;:&quot;2024-05-09T09:15:38.277Z&quot;,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;questionnaire&quot;:[{&quot;id&quot;:&quot;a6e8d6be-b7cd-4a9e-87b3-3ccc15656415&quot;,&quot;next&quot;:&quot;3ec401ca-46ff-4e02-a710-f9eeb81f1358&quot;,&quot;config&quot;:{&quot;conditions&quot;:[]},&quot;componentKind&quot;:&quot;NEW_PAGE&quot;},{&quot;id&quot;:&quot;3ec401ca-46ff-4e02-a710-f9eeb81f1358&quot;,&quot;next&quot;:&quot;b81df426-a535-4ea1-8d55-25f5f714e09b&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Phone&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Phone&quot;},&quot;previous&quot;:&quot;a6e8d6be-b7cd-4a9e-87b3-3ccc15656415&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;b81df426-a535-4ea1-8d55-25f5f714e09b&quot;,&quot;next&quot;:&quot;53338b2e-0abe-41ea-95b4-733db206f666&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;CDMS Response Id&quot;},&quot;previous&quot;:&quot;3ec401ca-46ff-4e02-a710-f9eeb81f1358&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;53338b2e-0abe-41ea-95b4-733db206f666&quot;,&quot;next&quot;:&quot;007eb910-e2fe-4fbd-8832-d00cb4fb6a55&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Customer Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Customer Name&quot;},&quot;previous&quot;:&quot;b81df426-a535-4ea1-8d55-25f5f714e09b&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;007eb910-e2fe-4fbd-8832-d00cb4fb6a55&quot;,&quot;next&quot;:&quot;fad810ea-517a-4d58-b397-f16225a64172&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;1&quot;,&quot;isClient&quot;:false,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ahmed ALnaqbi&quot;,&quot;value&quot;:&quot;ahmed ALnaqbi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ahmed ALnaqbi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Abdel Hamid&quot;,&quot;value&quot;:&quot;Ahmed Abdel Hamid&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Abdel Hamid&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;S BJ&quot;,&quot;value&quot;:&quot;S BJ&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;S BJ&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;???? ???????&quot;,&quot;value&quot;:&quot;???? ???????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;???? ???????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Osama Khairy&quot;,&quot;value&quot;:&quot;Osama Khairy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Osama Khairy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;musthafa dever parambil&quot;,&quot;value&quot;:&quot;musthafa dever parambil&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;musthafa dever parambil&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Tiger Noir&quot;,&quot;value&quot;:&quot;Tiger Noir&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Tiger Noir&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Salah Abu Yassin&quot;,&quot;value&quot;:&quot;Salah Abu Yassin&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Salah Abu Yassin&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rana AA&quot;,&quot;value&quot;:&quot;Rana AA&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rana AA&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Bahig Georgi&quot;,&quot;value&quot;:&quot;Bahig Georgi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Bahig Georgi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;AHMED ABOUELENIN&quot;,&quot;value&quot;:&quot;AHMED ABOUELENIN&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;AHMED ABOUELENIN&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;khalid al-aghbari&quot;,&quot;value&quot;:&quot;khalid al-aghbari&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;khalid al-aghbari&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ijaz Fuadh&quot;,&quot;value&quot;:&quot;Ijaz Fuadh&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ijaz Fuadh&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;vijayakumar Duraisamy&quot;,&quot;value&quot;:&quot;vijayakumar Duraisamy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;vijayakumar Duraisamy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;qw Q&quot;,&quot;value&quot;:&quot;qw Q&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;qw Q&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;????? ???&quot;,&quot;value&quot;:&quot;????? ???&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;????? ???&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ayoub LT&quot;,&quot;value&quot;:&quot;Ayoub LT&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ayoub LT&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;,&quot;value&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Akuamoah Boateng&quot;,&quot;value&quot;:&quot;Akuamoah Boateng&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Akuamoah Boateng&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sidhik M N&quot;,&quot;value&quot;:&quot;Sidhik M N&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sidhik M N&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nashid Kunookkara&quot;,&quot;value&quot;:&quot;Nashid Kunookkara&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nashid Kunookkara&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sudheesh Karikkad&quot;,&quot;value&quot;:&quot;Sudheesh Karikkad&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sudheesh Karikkad&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Ali&quot;,&quot;value&quot;:&quot;Ahmed Ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ziad Elbermawy&quot;,&quot;value&quot;:&quot;Ziad Elbermawy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ziad Elbermawy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Linda Wong&quot;,&quot;value&quot;:&quot;Linda Wong&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Linda Wong&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ferdous Alam Tohid&quot;,&quot;value&quot;:&quot;Ferdous Alam Tohid&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ferdous Alam Tohid&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Shiney Roberts&quot;,&quot;value&quot;:&quot;Shiney Roberts&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Shiney Roberts&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;kashif kora&quot;,&quot;value&quot;:&quot;kashif kora&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;kashif kora&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mukku Sisindri&quot;,&quot;value&quot;:&quot;Mukku Sisindri&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mukku Sisindri&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Avinash Padmashali&quot;,&quot;value&quot;:&quot;Avinash Padmashali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Avinash Padmashali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rashed Mood&quot;,&quot;value&quot;:&quot;Rashed Mood&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rashed Mood&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nahir Ahmed&quot;,&quot;value&quot;:&quot;Nahir Ahmed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nahir Ahmed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;???? ??????&quot;,&quot;value&quot;:&quot;???? ??????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;???? ??????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mo&apos;men Hussein&quot;,&quot;value&quot;:&quot;Mo&apos;men Hussein&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mo&apos;men Hussein&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Jalel Thebet&quot;,&quot;value&quot;:&quot;Jalel Thebet&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Jalel Thebet&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Abdullah Aldhabyani&quot;,&quot;value&quot;:&quot;Abdullah Aldhabyani&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Abdullah Aldhabyani&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Muhammad Ariyan Khan&quot;,&quot;value&quot;:&quot;Muhammad Ariyan Khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Muhammad Ariyan Khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;mostafa abdu&quot;,&quot;value&quot;:&quot;mostafa abdu&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;mostafa abdu&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Manoj Singh Rawat&quot;,&quot;value&quot;:&quot;Manoj Singh Rawat&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Manoj Singh Rawat&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;NEIL&quot;,&quot;value&quot;:&quot;NEIL&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;NEIL&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Deepak kumar&quot;,&quot;value&quot;:&quot;Deepak kumar&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Deepak kumar&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Roland Claudio&quot;,&quot;value&quot;:&quot;Roland Claudio&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Roland Claudio&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Simpow Gits&quot;,&quot;value&quot;:&quot;Simpow Gits&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Simpow Gits&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Brian Monteiro Takamori&quot;,&quot;value&quot;:&quot;Brian Monteiro Takamori&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Brian Monteiro Takamori&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;eecleonavarro&quot;,&quot;value&quot;:&quot;eecleonavarro&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;eecleonavarro&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Esraa Alshinnawy&quot;,&quot;value&quot;:&quot;Esraa Alshinnawy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Esraa Alshinnawy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;??? ??????&quot;,&quot;value&quot;:&quot;??? ??????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;??? ??????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;elhabbasi yassin&quot;,&quot;value&quot;:&quot;elhabbasi yassin&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;elhabbasi yassin&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ajran Zafar&quot;,&quot;value&quot;:&quot;Ajran Zafar&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ajran Zafar&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Inaleila Rambs&quot;,&quot;value&quot;:&quot;Inaleila Rambs&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Inaleila Rambs&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sean Trevin&quot;,&quot;value&quot;:&quot;Sean Trevin&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sean Trevin&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kutabala Lawrence&quot;,&quot;value&quot;:&quot;Kutabala Lawrence&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kutabala Lawrence&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;mohan patil&quot;,&quot;value&quot;:&quot;mohan patil&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;mohan patil&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;RedNinja Hussy&quot;,&quot;value&quot;:&quot;RedNinja Hussy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;RedNinja Hussy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;fire water&quot;,&quot;value&quot;:&quot;fire water&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;fire water&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Juliano Mitri&quot;,&quot;value&quot;:&quot;Juliano Mitri&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Juliano Mitri&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Yaser Abdalla&quot;,&quot;value&quot;:&quot;Yaser Abdalla&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Yaser Abdalla&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;?????? ??????? alrihab albarihuh&quot;,&quot;value&quot;:&quot;?????? ??????? alrihab albarihuh&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;?????? ??????? alrihab albarihuh&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;???? ????&quot;,&quot;value&quot;:&quot;???? ????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;???? ????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;md kaife&quot;,&quot;value&quot;:&quot;md kaife&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;md kaife&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;YOUSAF ALI&quot;,&quot;value&quot;:&quot;YOUSAF ALI&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;YOUSAF ALI&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sabin Katuwal&quot;,&quot;value&quot;:&quot;Sabin Katuwal&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sabin Katuwal&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mustafa khan&quot;,&quot;value&quot;:&quot;Mustafa khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mustafa khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Abdul Talim&quot;,&quot;value&quot;:&quot;Abdul Talim&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Abdul Talim&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Emad Ali&quot;,&quot;value&quot;:&quot;Emad Ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Emad Ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Hariram Sain&quot;,&quot;value&quot;:&quot;Hariram Sain&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Hariram Sain&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kevin Shyjo&quot;,&quot;value&quot;:&quot;Kevin Shyjo&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kevin Shyjo&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;??? ?????? ??????&quot;,&quot;value&quot;:&quot;??? ?????? ??????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;??? ?????? ??????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rowil Mg&quot;,&quot;value&quot;:&quot;Rowil Mg&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rowil Mg&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rashid ali khan&quot;,&quot;value&quot;:&quot;Rashid ali khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rashid ali khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Samoil Journalist&quot;,&quot;value&quot;:&quot;Samoil Journalist&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Samoil Journalist&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Hussam elshamy&quot;,&quot;value&quot;:&quot;Hussam elshamy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Hussam elshamy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Salahuddin Ahmed&quot;,&quot;value&quot;:&quot;Salahuddin Ahmed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Salahuddin Ahmed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;arun das&quot;,&quot;value&quot;:&quot;arun das&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;arun das&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kishan Pandit786&quot;,&quot;value&quot;:&quot;Kishan Pandit786&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kishan Pandit786&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;seif ahmed&quot;,&quot;value&quot;:&quot;seif ahmed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;seif ahmed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kei Takishima&quot;,&quot;value&quot;:&quot;Kei Takishima&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kei Takishima&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;awan saab&quot;,&quot;value&quot;:&quot;awan saab&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;awan saab&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;shiya maddy vlog&quot;,&quot;value&quot;:&quot;shiya maddy vlog&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;shiya maddy vlog&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mohammed Rifai&quot;,&quot;value&quot;:&quot;Mohammed Rifai&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mohammed Rifai&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ayesha s&quot;,&quot;value&quot;:&quot;ayesha s&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ayesha s&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Bahaa Q&quot;,&quot;value&quot;:&quot;Bahaa Q&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Bahaa Q&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sanil Stansilaus&quot;,&quot;value&quot;:&quot;Sanil Stansilaus&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sanil Stansilaus&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nishar Ali&quot;,&quot;value&quot;:&quot;Nishar Ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nishar Ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Hamdi&quot;,&quot;value&quot;:&quot;Ahmed Hamdi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Hamdi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Yassine Sarir&quot;,&quot;value&quot;:&quot;Yassine Sarir&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Yassine Sarir&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nikhil cm&quot;,&quot;value&quot;:&quot;Nikhil cm&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nikhil cm&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Khamees&quot;,&quot;value&quot;:&quot;Ahmed Khamees&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Khamees&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;vishnu devarajan&quot;,&quot;value&quot;:&quot;vishnu devarajan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;vishnu devarajan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rafael Jr Manuel&quot;,&quot;value&quot;:&quot;Rafael Jr Manuel&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rafael Jr Manuel&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Hammam&quot;,&quot;value&quot;:&quot;Hammam&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Hammam&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sabu Xaviour&quot;,&quot;value&quot;:&quot;Sabu Xaviour&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sabu Xaviour&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;arman ali ali&quot;,&quot;value&quot;:&quot;arman ali ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;arman ali ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;salah abdelraouf&quot;,&quot;value&quot;:&quot;salah abdelraouf&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;salah abdelraouf&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Soliman&quot;,&quot;value&quot;:&quot;Ahmed Soliman&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Soliman&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;??????? ??????? ??? ???????&quot;,&quot;value&quot;:&quot;??????? ??????? ??? ???????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;??????? ??????? ??? ???????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ayman Alatrash&quot;,&quot;value&quot;:&quot;Ayman Alatrash&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ayman Alatrash&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;mohamed ramadan&quot;,&quot;value&quot;:&quot;mohamed ramadan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;mohamed ramadan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;karim nada&quot;,&quot;value&quot;:&quot;karim nada&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;karim nada&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahamad Fadl ala 111&quot;,&quot;value&quot;:&quot;Ahamad Fadl ala 111&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahamad Fadl ala 111&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rida Elyaakkoubi&quot;,&quot;value&quot;:&quot;Rida Elyaakkoubi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rida Elyaakkoubi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;,&quot;value&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Quadeer Khan&quot;,&quot;value&quot;:&quot;Quadeer Khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Quadeer Khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;YASAR ARAFATH M.K&quot;,&quot;value&quot;:&quot;YASAR ARAFATH M.K&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;YASAR ARAFATH M.K&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ahmed zaki&quot;,&quot;value&quot;:&quot;ahmed zaki&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ahmed zaki&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mohammad Saeed&quot;,&quot;value&quot;:&quot;Mohammad Saeed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mohammad Saeed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ameer Thaj&quot;,&quot;value&quot;:&quot;Ameer Thaj&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ameer Thaj&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Jahangir Alam Alam&quot;,&quot;value&quot;:&quot;Jahangir Alam Alam&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Jahangir Alam Alam&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Shajahan hameed&quot;,&quot;value&quot;:&quot;Shajahan hameed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Shajahan hameed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Siraj Np&quot;,&quot;value&quot;:&quot;Siraj Np&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Siraj Np&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nausad Raza&quot;,&quot;value&quot;:&quot;Nausad Raza&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nausad Raza&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;O A&quot;,&quot;value&quot;:&quot;O A&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;O A&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Al Al&quot;,&quot;value&quot;:&quot;Al Al&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Al Al&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Tasnim Ur Rehman&quot;,&quot;value&quot;:&quot;Tasnim Ur Rehman&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Tasnim Ur Rehman&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;muhammed mujibur rahman&quot;,&quot;value&quot;:&quot;muhammed mujibur rahman&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;muhammed mujibur rahman&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Robin Kenyanya&quot;,&quot;value&quot;:&quot;Robin Kenyanya&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Robin Kenyanya&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user229&quot;,&quot;value&quot;:&quot;Test user229&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user229&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user227&quot;,&quot;value&quot;:&quot;Test user227&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user227&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user228&quot;,&quot;value&quot;:&quot;Test user228&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user228&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user225&quot;,&quot;value&quot;:&quot;Test user225&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user225&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user226&quot;,&quot;value&quot;:&quot;Test user226&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user226&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user230&quot;,&quot;value&quot;:&quot;Test user230&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user230&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user176&quot;,&quot;value&quot;:&quot;Test user176&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user176&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user194&quot;,&quot;value&quot;:&quot;Test user194&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user194&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user212&quot;,&quot;value&quot;:&quot;Test user212&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user212&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user205&quot;,&quot;value&quot;:&quot;Test user205&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user205&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user213&quot;,&quot;value&quot;:&quot;Test user213&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user213&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user207&quot;,&quot;value&quot;:&quot;Test user207&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user207&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user202&quot;,&quot;value&quot;:&quot;Test user202&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user202&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user191&quot;,&quot;value&quot;:&quot;Test user191&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user191&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user224&quot;,&quot;value&quot;:&quot;Test user224&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user224&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user208&quot;,&quot;value&quot;:&quot;Test user208&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user208&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user214&quot;,&quot;value&quot;:&quot;Test user214&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user214&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user198&quot;,&quot;value&quot;:&quot;Test user198&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user198&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user179&quot;,&quot;value&quot;:&quot;Test user179&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user179&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user177&quot;,&quot;value&quot;:&quot;Test user177&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user177&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user206&quot;,&quot;value&quot;:&quot;Test user206&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user206&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user220&quot;,&quot;value&quot;:&quot;Test user220&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user220&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user200&quot;,&quot;value&quot;:&quot;Test user200&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user200&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user216&quot;,&quot;value&quot;:&quot;Test user216&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user216&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user223&quot;,&quot;value&quot;:&quot;Test user223&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user223&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user210&quot;,&quot;value&quot;:&quot;Test user210&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user210&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user222&quot;,&quot;value&quot;:&quot;Test user222&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user222&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user189&quot;,&quot;value&quot;:&quot;Test user189&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user189&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user217&quot;,&quot;value&quot;:&quot;Test user217&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user217&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user193&quot;,&quot;value&quot;:&quot;Test user193&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user193&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user197&quot;,&quot;value&quot;:&quot;Test user197&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user197&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user221&quot;,&quot;value&quot;:&quot;Test user221&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user221&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user219&quot;,&quot;value&quot;:&quot;Test user219&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user219&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user183&quot;,&quot;value&quot;:&quot;Test user183&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user183&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user196&quot;,&quot;value&quot;:&quot;Test user196&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user196&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user195&quot;,&quot;value&quot;:&quot;Test user195&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user195&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user187&quot;,&quot;value&quot;:&quot;Test user187&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user187&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user203&quot;,&quot;value&quot;:&quot;Test user203&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user203&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user218&quot;,&quot;value&quot;:&quot;Test user218&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user218&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user215&quot;,&quot;value&quot;:&quot;Test user215&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user215&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user185&quot;,&quot;value&quot;:&quot;Test user185&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user185&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user192&quot;,&quot;value&quot;:&quot;Test user192&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user192&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user201&quot;,&quot;value&quot;:&quot;Test user201&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user201&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user209&quot;,&quot;value&quot;:&quot;Test user209&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user209&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user190&quot;,&quot;value&quot;:&quot;Test user190&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user190&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user180&quot;,&quot;value&quot;:&quot;Test user180&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user180&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user211&quot;,&quot;value&quot;:&quot;Test user211&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user211&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user199&quot;,&quot;value&quot;:&quot;Test user199&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user199&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user204&quot;,&quot;value&quot;:&quot;Test user204&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user204&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user188&quot;,&quot;value&quot;:&quot;Test user188&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user188&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user181&quot;,&quot;value&quot;:&quot;Test user181&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user181&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user182&quot;,&quot;value&quot;:&quot;Test user182&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user182&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user144&quot;,&quot;value&quot;:&quot;Test user144&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user144&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user145&quot;,&quot;value&quot;:&quot;Test user145&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user145&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user149&quot;,&quot;value&quot;:&quot;Test user149&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user149&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user143&quot;,&quot;value&quot;:&quot;Test user143&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user143&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user174&quot;,&quot;value&quot;:&quot;Test user174&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user174&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user153&quot;,&quot;value&quot;:&quot;Test user153&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user153&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user156&quot;,&quot;value&quot;:&quot;Test user156&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user156&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user162&quot;,&quot;value&quot;:&quot;Test user162&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user162&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user173&quot;,&quot;value&quot;:&quot;Test user173&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user173&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user160&quot;,&quot;value&quot;:&quot;Test user160&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user160&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user170&quot;,&quot;value&quot;:&quot;Test user170&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user170&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user167&quot;,&quot;value&quot;:&quot;Test user167&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user167&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user147&quot;,&quot;value&quot;:&quot;Test user147&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user147&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user175&quot;,&quot;value&quot;:&quot;Test user175&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user175&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user155&quot;,&quot;value&quot;:&quot;Test user155&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user155&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user141&quot;,&quot;value&quot;:&quot;Test user141&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user141&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user139&quot;,&quot;value&quot;:&quot;Test user139&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user139&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user138&quot;,&quot;value&quot;:&quot;Test user138&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user138&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user178&quot;,&quot;value&quot;:&quot;Test user178&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user178&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user171&quot;,&quot;value&quot;:&quot;Test user171&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user171&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user150&quot;,&quot;value&quot;:&quot;Test user150&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user150&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user158&quot;,&quot;value&quot;:&quot;Test user158&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user158&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user154&quot;,&quot;value&quot;:&quot;Test user154&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user154&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user184&quot;,&quot;value&quot;:&quot;Test user184&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user184&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user140&quot;,&quot;value&quot;:&quot;Test user140&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user140&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user146&quot;,&quot;value&quot;:&quot;Test user146&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user146&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user152&quot;,&quot;value&quot;:&quot;Test user152&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user152&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user165&quot;,&quot;value&quot;:&quot;Test user165&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user165&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user164&quot;,&quot;value&quot;:&quot;Test user164&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user164&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user159&quot;,&quot;value&quot;:&quot;Test user159&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user159&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user169&quot;,&quot;value&quot;:&quot;Test user169&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user169&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user161&quot;,&quot;value&quot;:&quot;Test user161&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user161&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user172&quot;,&quot;value&quot;:&quot;Test user172&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user172&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user168&quot;,&quot;value&quot;:&quot;Test user168&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user168&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user166&quot;,&quot;value&quot;:&quot;Test user166&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user166&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user148&quot;,&quot;value&quot;:&quot;Test user148&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user148&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user137&quot;,&quot;value&quot;:&quot;Test user137&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user137&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user157&quot;,&quot;value&quot;:&quot;Test user157&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user157&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user163&quot;,&quot;value&quot;:&quot;Test user163&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user163&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user186&quot;,&quot;value&quot;:&quot;Test user186&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user186&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user151&quot;,&quot;value&quot;:&quot;Test user151&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user151&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user130&quot;,&quot;value&quot;:&quot;Test user130&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user130&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user131&quot;,&quot;value&quot;:&quot;Test user131&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user131&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user134&quot;,&quot;value&quot;:&quot;Test user134&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user134&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user126&quot;,&quot;value&quot;:&quot;Test user126&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user126&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user127&quot;,&quot;value&quot;:&quot;Test user127&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user127&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user136&quot;,&quot;value&quot;:&quot;Test user136&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user136&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user142&quot;,&quot;value&quot;:&quot;Test user142&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user142&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Aayush Sharma&quot;,&quot;value&quot;:&quot;Aayush Sharma&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Aayush Sharma&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Aayush&quot;,&quot;value&quot;:&quot;Aayush&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Aayush&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;garima Sethi&quot;,&quot;value&quot;:&quot;garima Sethi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;garima Sethi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;hrushikesh Kulkarni&quot;,&quot;value&quot;:&quot;hrushikesh Kulkarni&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;hrushikesh Kulkarni&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Diwakar Singh Maurya&quot;,&quot;value&quot;:&quot;Diwakar Singh Maurya&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Diwakar Singh Maurya&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ashish Sharma&quot;,&quot;value&quot;:&quot;ashish Sharma&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ashish Sharma&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;subhanker Sarker&quot;,&quot;value&quot;:&quot;subhanker Sarker&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;subhanker Sarker&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;samridhi Srivastava&quot;,&quot;value&quot;:&quot;samridhi Srivastava&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;samridhi Srivastava&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Noor Siddiqui&quot;,&quot;value&quot;:&quot;Noor Siddiqui&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Noor Siddiqui&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Deepak Rana&quot;,&quot;value&quot;:&quot;Deepak Rana&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Deepak Rana&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Daryl Fernandes&quot;,&quot;value&quot;:&quot;Daryl Fernandes&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Daryl Fernandes&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rohit Dubey&quot;,&quot;value&quot;:&quot;Rohit Dubey&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rohit Dubey&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Faraz Khan&quot;,&quot;value&quot;:&quot;Faraz Khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Faraz Khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Vijay Ramachandran&quot;,&quot;value&quot;:&quot;Vijay Ramachandran&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Vijay Ramachandran&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Dealer Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Dealer Name&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Dealer Name&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;isACompetitorQuestion&quot;:false,&quot;multipleSelectionText&quot;:&quot; {{0}} &quot;,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false,&quot;shouldFillParticipantDataInOptions&quot;:false},&quot;previous&quot;:&quot;53338b2e-0abe-41ea-95b4-733db206f666&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;fad810ea-517a-4d58-b397-f16225a64172&quot;,&quot;next&quot;:&quot;a96e0e45-7d10-43c5-bee0-25794784ce00&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Outlet Location&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Outlet Location&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Outlet Location&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;007eb910-e2fe-4fbd-8832-d00cb4fb6a55&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;a96e0e45-7d10-43c5-bee0-25794784ce00&quot;,&quot;next&quot;:&quot;470fe5cc-723a-41d0-837c-b10402b93121&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Hello  ${qID://50a65a07-4cd2-496b-9239-b057b5f10bd9}, based on you recent experience with ${qID://e908a6e2-52a0-4efa-b07f-44d23a33220a/1}  situated at  ${qID://ab8d31bc-6716-41fd-8f63-4b8c5e4eb18d/1}&quot;,&quot;isRichTextEditorEnabled&quot;:false},&quot;previous&quot;:&quot;fad810ea-517a-4d58-b397-f16225a64172&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;},{&quot;id&quot;:&quot;470fe5cc-723a-41d0-837c-b10402b93121&quot;,&quot;next&quot;:&quot;2d610ddc-4c5b-46a0-9624-0b79e997ebba&quot;,&quot;config&quot;:{&quot;shortCode&quot;:&quot;NPS&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:true,&quot;ratingPoints&quot;:[{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;0&quot;,&quot;value&quot;:0,&quot;helpText&quot;:&quot;Not at all likely 👎&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;1&quot;,&quot;value&quot;:1,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;2&quot;,&quot;value&quot;:2,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;3&quot;,&quot;value&quot;:3,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;4&quot;,&quot;value&quot;:4,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;5&quot;,&quot;value&quot;:5,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;6&quot;,&quot;value&quot;:6,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#cacfd5&quot;,&quot;label&quot;:&quot;7&quot;,&quot;value&quot;:7,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#cacfd5&quot;,&quot;label&quot;:&quot;8&quot;,&quot;value&quot;:8,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#008000&quot;,&quot;label&quot;:&quot;9&quot;,&quot;value&quot;:9,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#008000&quot;,&quot;label&quot;:&quot;10&quot;,&quot;value&quot;:10,&quot;helpText&quot;:&quot;👍 Extremely likely&quot;}],&quot;isNPSQuestion&quot;:true,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Based on your recent showroom visit experience and interaction, how likely are you to recommend Bajaj Motorcycles to a friend or colleague?&quot;,&quot;notApplicableOption&quot;:{&quot;color&quot;:&quot;#6E6E6E&quot;,&quot;label&quot;:&quot;NA&quot;,&quot;value&quot;:&quot;NA&quot;,&quot;helpText&quot;:&quot;&quot;},&quot;enableNotApplicableOption&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;a96e0e45-7d10-43c5-bee0-25794784ce00&quot;,&quot;componentKind&quot;:&quot;RATING&quot;},{&quot;id&quot;:&quot;2d610ddc-4c5b-46a0-9624-0b79e997ebba&quot;,&quot;next&quot;:&quot;36669627-3000-4b75-999b-e0ffc2cc610b&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Based on your showroom visit experience, could you please tell us which of the following would you not recommend? 👎&quot;,&quot;isRichTextEditorEnabled&quot;:false},&quot;previous&quot;:&quot;470fe5cc-723a-41d0-837c-b10402b93121&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;},{&quot;id&quot;:&quot;36669627-3000-4b75-999b-e0ffc2cc610b&quot;,&quot;next&quot;:&quot;a19d7322-d86d-4517-8208-551e4c3f36e4&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Based on your showroom visit experience, could you please tell us which of the following would you recommend?  👍&quot;,&quot;isRichTextEditorEnabled&quot;:false},&quot;previous&quot;:&quot;2d610ddc-4c5b-46a0-9624-0b79e997ebba&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;},{&quot;id&quot;:&quot;a19d7322-d86d-4517-8208-551e4c3f36e4&quot;,&quot;next&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;config&quot;:{&quot;override&quot;:false,&quot;shortCode&quot;:&quot;__MCQ_DrilldownQu__Like/dislike&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:true,&quot;questionId&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;&quot;,&quot;drilldownQuestions&quot;:[{&quot;label&quot;:&quot;Products&quot;,&quot;value&quot;:&quot;1&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Products available on display or purchase&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Availability of different colors&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Range of products under company brand&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Product performance actual v/s promised&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;isRequired&quot;:false,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/bike-black.svg&quot;,&quot;questionId&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:false,&quot;questionShortCode&quot;:&quot;Products&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Accessibility of showrooms&quot;,&quot;value&quot;:&quot;2&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Distance to showroom&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Connectivity to location (Ease of Access)&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of identifying showrooms&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;isRequired&quot;:false,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/maps-black.svg&quot;,&quot;questionId&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:false,&quot;questionShortCode&quot;:&quot;Accessibility of showrooms&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Showroom infrastructure&quot;,&quot;value&quot;:&quot;3&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Quality of product display/demos&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Availability of parking&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Provision of seating area&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Provision for refreshments&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Cleanliness of showroom&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;isRequired&quot;:false,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/showroom-black.svg&quot;,&quot;questionId&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:false,&quot;questionShortCode&quot;:&quot;Showroom infrastructure&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Sales team interactions&quot;,&quot;value&quot;:&quot;4&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Waiting time&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Product knowledge of sales staff&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Accuracy of information provided&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Friendliness and Professionalism of sales team / Behaviour of Sales Team&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Availability of brochures with product information; use of digital media to showcase products&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Product demonstration&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Call backs with offers (in case visit did not lead to purchase)&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Fluency of sales team in the local language&quot;,&quot;value&quot;:&quot;8&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Prior awareness of sales team about customer preferences&quot;,&quot;value&quot;:&quot;9&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/person-black.svg&quot;,&quot;questionId&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Sales team interactions&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Test ride experience&quot;,&quot;value&quot;:&quot;5&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of slots for test ride&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of testride booking.&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Quality of route for test ride / Quaility of Test Ride Route&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Length of test ride&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Quality of bike used for the test ride&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/bike-black.svg&quot;,&quot;questionId&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Test ride experience&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Purchase formalities&quot;,&quot;value&quot;:&quot;6&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Provision for allocation of specific chassis/ Vehicle based on preference&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of payment and billing; time taken to invoice&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of registration procedure; time for RTO approval&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of tracking RTO / HSRP process&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of Insurance procedure (ease of purchase, price etc.)&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Vehicle Delivery promised Vs actual / Time to road actual v/s estimated&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;One time collection of data / document&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/purchase-black.svg&quot;,&quot;questionId&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Purchase formalities&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Exchange experience&quot;,&quot;value&quot;:&quot;7&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of different broker options for exchange&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Number of documents required&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Exchange value&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Experience with exchange related services (pick up of vehicle, document transfer, etc.,)&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/exchange-black.svg&quot;,&quot;questionId&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Exchange experience&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;value&quot;:&quot;8&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Ex-showroom price / Pricing (Ex Shpowroom &amp; On Road Price)&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Dealer handling charges&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Registration fee&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Charges for additional services&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;On road price&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Attractiveness of discounts and schemes&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Freebies&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/price-black.svg&quot;,&quot;questionId&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;questionStatement&quot;:&quot;&quot;}],&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;36669627-3000-4b75-999b-e0ffc2cc610b&quot;,&quot;componentKind&quot;:&quot;MCQ_DRILLDOWN&quot;},{&quot;id&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;next&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Products&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Accessibility of showrooms&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Showroom infrastructure&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sales team interactions&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test ride experience&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Purchase formalities&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Exchange experience&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;value&quot;:&quot;8&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Like/dislike&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:true,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;a19d7322-d86d-4517-8208-551e4c3f36e4&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;next&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Products available on display or purchase&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Availability of different colors&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Range of products under company brand&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Product performance actual v/s promised&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Products&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Products&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;next&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Distance to showroom&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Connectivity to location (Ease of Access)&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of identifying showrooms&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Accessibility of showrooms&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Accessibility of showrooms&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;next&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Quality of product display/demos&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Availability of parking&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Provision of seating area&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Provision for refreshments&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Cleanliness of showroom&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Showroom infrastructure&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Showroom infrastructure&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;next&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Waiting time&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Product knowledge of sales staff&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Accuracy of information provided&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Friendliness and Professionalism of sales team / Behaviour of Sales Team&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Availability of brochures with product information; use of digital media to showcase products&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Product demonstration&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Call backs with offers (in case visit did not lead to purchase)&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Fluency of sales team in the local language&quot;,&quot;value&quot;:&quot;8&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Prior awareness of sales team about customer preferences&quot;,&quot;value&quot;:&quot;9&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Sales team interactions&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Sales team interactions&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;next&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of slots for test ride&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of testride booking.&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Quality of route for test ride / Quaility of Test Ride Route&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Length of test ride&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Quality of bike used for the test ride&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Test ride experience&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Test ride experience&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;next&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Provision for allocation of specific chassis/ Vehicle based on preference&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of payment and billing; time taken to invoice&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of registration procedure; time for RTO approval&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of tracking RTO / HSRP process&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of Insurance procedure (ease of purchase, price etc.)&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Vehicle Delivery promised Vs actual / Time to road actual v/s estimated&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;One time collection of data / document&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Purchase formalities&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Purchase formalities&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;next&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of different broker options for exchange&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Number of documents required&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Exchange value&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Experience with exchange related services (pick up of vehicle, document transfer, etc.,)&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Exchange experience&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Exchange experience&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;next&quot;:&quot;5f4380eb-06ad-4dcf-ab54-69e056eaefb1&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Ex-showroom price / Pricing (Ex Shpowroom &amp; On Road Price)&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Dealer handling charges&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Registration fee&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Charges for additional services&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;On road price&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Attractiveness of discounts and schemes&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Freebies&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Prices, discounts and promotional schemes&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;5f4380eb-06ad-4dcf-ab54-69e056eaefb1&quot;,&quot;next&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;config&quot;:{&quot;maxWords&quot;:300,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Open_End&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:true,&quot;showAsReadOnly&quot;:false,&quot;placeHolderText&quot;:&quot;Your feedback will help us improve.&quot;,&quot;questionStatement&quot;:&quot;Do you have any other suggestions for us to improve your experience?&quot;},&quot;previous&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;next&quot;:&quot;3e34b168-e083-4b8a-b565-e56baf18f72f&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;Would you be willing to participate in a call-back?&quot;,&quot;value&quot;:&quot;Yes&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Call-back&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;CHECKBOXES&quot;,&quot;defaultAnswer&quot;:[&quot;Yes&quot;],&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Would you be willing to participate in a call-back?&quot;,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;5f4380eb-06ad-4dcf-ab54-69e056eaefb1&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;3e34b168-e083-4b8a-b565-e56baf18f72f&quot;,&quot;next&quot;:&quot;77d8bff6-9506-4974-bab1-0a42a5043476&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Doc Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Doc Name&quot;},&quot;previous&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;77d8bff6-9506-4974-bab1-0a42a5043476&quot;,&quot;next&quot;:&quot;75e8a0df-6195-4f8c-96b1-83fa0d6b70bb&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Doc ID&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Doc ID&quot;},&quot;previous&quot;:&quot;3e34b168-e083-4b8a-b565-e56baf18f72f&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;75e8a0df-6195-4f8c-96b1-83fa0d6b70bb&quot;,&quot;next&quot;:&quot;7fcc0f6d-eeb8-4f18-83f6-95b68e196240&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Enquiry Creation Date&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Enquiry Creation Date&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Enquiry Creation Date&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;77d8bff6-9506-4974-bab1-0a42a5043476&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;7fcc0f6d-eeb8-4f18-83f6-95b68e196240&quot;,&quot;next&quot;:&quot;dc36b778-3dde-455f-b9c1-9f7c0b089dc1&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Enquiry Type&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Enquiry Type&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Enquiry Type&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;75e8a0df-6195-4f8c-96b1-83fa0d6b70bb&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;dc36b778-3dde-455f-b9c1-9f7c0b089dc1&quot;,&quot;next&quot;:&quot;6c1593c7-8ae4-4b85-a5b4-2e793c18317c&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Sales Advisor&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Sales Advisor&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Sales Advisor&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;7fcc0f6d-eeb8-4f18-83f6-95b68e196240&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;6c1593c7-8ae4-4b85-a5b4-2e793c18317c&quot;,&quot;next&quot;:&quot;34a7f45b-de2c-490d-b730-019989e39ad0&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Customer Mobile number&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Customer Mobile number&quot;},&quot;previous&quot;:&quot;dc36b778-3dde-455f-b9c1-9f7c0b089dc1&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;34a7f45b-de2c-490d-b730-019989e39ad0&quot;,&quot;next&quot;:&quot;6c782dc2-8336-4872-94a1-8d2e49e18845&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Customer ID&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Customer ID&quot;},&quot;previous&quot;:&quot;6c1593c7-8ae4-4b85-a5b4-2e793c18317c&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;6c782dc2-8336-4872-94a1-8d2e49e18845&quot;,&quot;next&quot;:&quot;8a24f8f1-a2ac-4053-904f-8c1e5787aa02&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Preferred language&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Preferred language&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Preferred language&quot;,&quot;isLanguageController&quot;:true,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;34a7f45b-de2c-490d-b730-019989e39ad0&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;8a24f8f1-a2ac-4053-904f-8c1e5787aa02&quot;,&quot;next&quot;:&quot;2beb434c-97d2-4166-863a-c95162b89ce1&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Dealer Code&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Dealer Code&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Dealer Code&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;6c782dc2-8336-4872-94a1-8d2e49e18845&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;2beb434c-97d2-4166-863a-c95162b89ce1&quot;,&quot;next&quot;:&quot;df23f48f-97ae-4972-80e5-f677693b311a&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Branch Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Branch Name&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Branch Name&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;8a24f8f1-a2ac-4053-904f-8c1e5787aa02&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;df23f48f-97ae-4972-80e5-f677693b311a&quot;,&quot;next&quot;:&quot;4c719cc3-be5b-4083-aa0a-d8ff6c8fa84a&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Branch Code&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Branch Code&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Branch Code&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;2beb434c-97d2-4166-863a-c95162b89ce1&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;4c719cc3-be5b-4083-aa0a-d8ff6c8fa84a&quot;,&quot;next&quot;:&quot;4050fca4-d989-41cd-860d-6442936c7868&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Branch Location&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Branch Location&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Branch Location&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;df23f48f-97ae-4972-80e5-f677693b311a&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;4050fca4-d989-41cd-860d-6442936c7868&quot;,&quot;next&quot;:&quot;3f2b9635-4c1e-4e30-8793-071b6a281320&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Episode&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Episode&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Episode&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;4c719cc3-be5b-4083-aa0a-d8ff6c8fa84a&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;3f2b9635-4c1e-4e30-8793-071b6a281320&quot;,&quot;next&quot;:&quot;fe22f26a-95a5-46fe-85c8-5334a48c35cf&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Business Unit&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Business Unit&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Business Unit&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;4050fca4-d989-41cd-860d-6442936c7868&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;fe22f26a-95a5-46fe-85c8-5334a48c35cf&quot;,&quot;next&quot;:&quot;4cf70b6c-e8d8-4085-ad51-8a2a76ea8d2e&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;OTP Verification Trend&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;OTP Verification Trend&quot;,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;3f2b9635-4c1e-4e30-8793-071b6a281320&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;4cf70b6c-e8d8-4085-ad51-8a2a76ea8d2e&quot;,&quot;next&quot;:&quot;670c10e0-280b-451e-ae16-d6fccae52bf7&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Circle&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Circle&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Circle&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;fe22f26a-95a5-46fe-85c8-5334a48c35cf&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;670c10e0-280b-451e-ae16-d6fccae52bf7&quot;,&quot;next&quot;:&quot;dfc430b6-2512-4420-91b6-0dd2e47ff736&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Region&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Region&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Region&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;4cf70b6c-e8d8-4085-ad51-8a2a76ea8d2e&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;dfc430b6-2512-4420-91b6-0dd2e47ff736&quot;,&quot;next&quot;:&quot;f1c5310d-4547-4633-9b80-54fbe9f03183&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;ASM&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;ASM&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;ASM&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;670c10e0-280b-451e-ae16-d6fccae52bf7&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;f1c5310d-4547-4633-9b80-54fbe9f03183&quot;,&quot;next&quot;:&quot;f59f7ca8-5321-4b63-83b9-616dc7f51dee&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;City&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;City&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;City&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;dfc430b6-2512-4420-91b6-0dd2e47ff736&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;f59f7ca8-5321-4b63-83b9-616dc7f51dee&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Terms  | Disclaimer  | Privacy Policy \u0001Copyright © 2021 Bajaj Auto Ltd. All rights reserved&quot;,&quot;isRichTextEditorEnabled&quot;:true,&quot;questionStatementRichText&quot;:{&quot;blocks&quot;:[{&quot;key&quot;:&quot;djaps&quot;,&quot;data&quot;:{&quot;text-align&quot;:&quot;center&quot;},&quot;text&quot;:&quot;Terms  | Disclaimer  | Privacy Policy &quot;,&quot;type&quot;:&quot;unstyled&quot;,&quot;depth&quot;:0,&quot;entityRanges&quot;:[{&quot;key&quot;:0,&quot;length&quot;:5,&quot;offset&quot;:0},{&quot;key&quot;:1,&quot;length&quot;:10,&quot;offset&quot;:9},{&quot;key&quot;:2,&quot;length&quot;:14,&quot;offset&quot;:23}],&quot;inlineStyleRanges&quot;:[]},{&quot;key&quot;:&quot;40mpr&quot;,&quot;data&quot;:{&quot;text-align&quot;:&quot;center&quot;},&quot;text&quot;:&quot;Copyright © 2021 Bajaj Auto Ltd. All rights reserved&quot;,&quot;type&quot;:&quot;unstyled&quot;,&quot;depth&quot;:0,&quot;entityRanges&quot;:[],&quot;inlineStyleRanges&quot;:[]}],&quot;entityMap&quot;:{&quot;0&quot;:{&quot;data&quot;:{&quot;url&quot;:&quot;${scheme}://www.bajajauto.com/onlinebooking-tnc&quot;,&quot;targetOption&quot;:&quot;_blank&quot;},&quot;type&quot;:&quot;LINK&quot;,&quot;mutability&quot;:&quot;MUTABLE&quot;},&quot;1&quot;:{&quot;data&quot;:{&quot;url&quot;:&quot;${scheme}://www.bajajauto.com/disclaimer&quot;,&quot;targetOption&quot;:&quot;_blank&quot;},&quot;type&quot;:&quot;LINK&quot;,&quot;mutability&quot;:&quot;MUTABLE&quot;},&quot;2&quot;:{&quot;data&quot;:{&quot;url&quot;:&quot;${scheme}://www.bajajauto.com/privacy-policy&quot;,&quot;targetOption&quot;:&quot;_blank&quot;},&quot;type&quot;:&quot;LINK&quot;,&quot;mutability&quot;:&quot;MUTABLE&quot;}}}},&quot;previous&quot;:&quot;f1c5310d-4547-4633-9b80-54fbe9f03183&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;}]},&quot;query&quot;:&quot;mutation UpdateQuestionnaire($campaignId: ID!, $questionnaire: [JSONObject!]!, $questionnairePreviouslyUpdateAt: Date!) {\n  updateQuestionnaire(campaignId: $campaignId, questionnaire: $questionnaire, questionnairePreviouslyUpdateAt: $questionnairePreviouslyUpdateAt)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.operationName">UpdateQuestionnaire</stringProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation UpdateQuestionnaire($campaignId: ID!, $questionnaire: [JSONObject!]!, $questionnairePreviouslyUpdateAt: Date!) {
  updateQuestionnaire(campaignId: $campaignId, questionnaire: $questionnaire, questionnairePreviouslyUpdateAt: $questionnairePreviouslyUpdateAt)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;questionnairePreviouslyUpdateAt&quot;:&quot;2024-05-09T09:15:38.277Z&quot;,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;questionnaire&quot;:[{&quot;id&quot;:&quot;a6e8d6be-b7cd-4a9e-87b3-3ccc15656415&quot;,&quot;next&quot;:&quot;3ec401ca-46ff-4e02-a710-f9eeb81f1358&quot;,&quot;config&quot;:{&quot;conditions&quot;:[]},&quot;componentKind&quot;:&quot;NEW_PAGE&quot;},{&quot;id&quot;:&quot;3ec401ca-46ff-4e02-a710-f9eeb81f1358&quot;,&quot;next&quot;:&quot;b81df426-a535-4ea1-8d55-25f5f714e09b&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Phone&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Phone&quot;},&quot;previous&quot;:&quot;a6e8d6be-b7cd-4a9e-87b3-3ccc15656415&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;b81df426-a535-4ea1-8d55-25f5f714e09b&quot;,&quot;next&quot;:&quot;53338b2e-0abe-41ea-95b4-733db206f666&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;CDMS Response Id&quot;},&quot;previous&quot;:&quot;3ec401ca-46ff-4e02-a710-f9eeb81f1358&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;53338b2e-0abe-41ea-95b4-733db206f666&quot;,&quot;next&quot;:&quot;007eb910-e2fe-4fbd-8832-d00cb4fb6a55&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Customer Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Customer Name&quot;},&quot;previous&quot;:&quot;b81df426-a535-4ea1-8d55-25f5f714e09b&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;007eb910-e2fe-4fbd-8832-d00cb4fb6a55&quot;,&quot;next&quot;:&quot;fad810ea-517a-4d58-b397-f16225a64172&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;1&quot;,&quot;isClient&quot;:false,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ahmed ALnaqbi&quot;,&quot;value&quot;:&quot;ahmed ALnaqbi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ahmed ALnaqbi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Abdel Hamid&quot;,&quot;value&quot;:&quot;Ahmed Abdel Hamid&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Abdel Hamid&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;S BJ&quot;,&quot;value&quot;:&quot;S BJ&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;S BJ&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;???? ???????&quot;,&quot;value&quot;:&quot;???? ???????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;???? ???????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Osama Khairy&quot;,&quot;value&quot;:&quot;Osama Khairy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Osama Khairy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;musthafa dever parambil&quot;,&quot;value&quot;:&quot;musthafa dever parambil&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;musthafa dever parambil&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Tiger Noir&quot;,&quot;value&quot;:&quot;Tiger Noir&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Tiger Noir&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Salah Abu Yassin&quot;,&quot;value&quot;:&quot;Salah Abu Yassin&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Salah Abu Yassin&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rana AA&quot;,&quot;value&quot;:&quot;Rana AA&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rana AA&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Bahig Georgi&quot;,&quot;value&quot;:&quot;Bahig Georgi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Bahig Georgi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;AHMED ABOUELENIN&quot;,&quot;value&quot;:&quot;AHMED ABOUELENIN&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;AHMED ABOUELENIN&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;khalid al-aghbari&quot;,&quot;value&quot;:&quot;khalid al-aghbari&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;khalid al-aghbari&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ijaz Fuadh&quot;,&quot;value&quot;:&quot;Ijaz Fuadh&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ijaz Fuadh&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;vijayakumar Duraisamy&quot;,&quot;value&quot;:&quot;vijayakumar Duraisamy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;vijayakumar Duraisamy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;qw Q&quot;,&quot;value&quot;:&quot;qw Q&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;qw Q&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;????? ???&quot;,&quot;value&quot;:&quot;????? ???&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;????? ???&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ayoub LT&quot;,&quot;value&quot;:&quot;Ayoub LT&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ayoub LT&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;,&quot;value&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Akuamoah Boateng&quot;,&quot;value&quot;:&quot;Akuamoah Boateng&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Akuamoah Boateng&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sidhik M N&quot;,&quot;value&quot;:&quot;Sidhik M N&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sidhik M N&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nashid Kunookkara&quot;,&quot;value&quot;:&quot;Nashid Kunookkara&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nashid Kunookkara&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sudheesh Karikkad&quot;,&quot;value&quot;:&quot;Sudheesh Karikkad&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sudheesh Karikkad&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Ali&quot;,&quot;value&quot;:&quot;Ahmed Ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ziad Elbermawy&quot;,&quot;value&quot;:&quot;Ziad Elbermawy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ziad Elbermawy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Linda Wong&quot;,&quot;value&quot;:&quot;Linda Wong&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Linda Wong&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ferdous Alam Tohid&quot;,&quot;value&quot;:&quot;Ferdous Alam Tohid&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ferdous Alam Tohid&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Shiney Roberts&quot;,&quot;value&quot;:&quot;Shiney Roberts&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Shiney Roberts&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;kashif kora&quot;,&quot;value&quot;:&quot;kashif kora&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;kashif kora&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mukku Sisindri&quot;,&quot;value&quot;:&quot;Mukku Sisindri&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mukku Sisindri&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Avinash Padmashali&quot;,&quot;value&quot;:&quot;Avinash Padmashali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Avinash Padmashali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rashed Mood&quot;,&quot;value&quot;:&quot;Rashed Mood&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rashed Mood&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nahir Ahmed&quot;,&quot;value&quot;:&quot;Nahir Ahmed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nahir Ahmed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;???? ??????&quot;,&quot;value&quot;:&quot;???? ??????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;???? ??????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mo&apos;men Hussein&quot;,&quot;value&quot;:&quot;Mo&apos;men Hussein&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mo&apos;men Hussein&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Jalel Thebet&quot;,&quot;value&quot;:&quot;Jalel Thebet&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Jalel Thebet&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Abdullah Aldhabyani&quot;,&quot;value&quot;:&quot;Abdullah Aldhabyani&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Abdullah Aldhabyani&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Muhammad Ariyan Khan&quot;,&quot;value&quot;:&quot;Muhammad Ariyan Khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Muhammad Ariyan Khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;mostafa abdu&quot;,&quot;value&quot;:&quot;mostafa abdu&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;mostafa abdu&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Manoj Singh Rawat&quot;,&quot;value&quot;:&quot;Manoj Singh Rawat&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Manoj Singh Rawat&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;NEIL&quot;,&quot;value&quot;:&quot;NEIL&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;NEIL&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Deepak kumar&quot;,&quot;value&quot;:&quot;Deepak kumar&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Deepak kumar&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Roland Claudio&quot;,&quot;value&quot;:&quot;Roland Claudio&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Roland Claudio&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Simpow Gits&quot;,&quot;value&quot;:&quot;Simpow Gits&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Simpow Gits&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Brian Monteiro Takamori&quot;,&quot;value&quot;:&quot;Brian Monteiro Takamori&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Brian Monteiro Takamori&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;eecleonavarro&quot;,&quot;value&quot;:&quot;eecleonavarro&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;eecleonavarro&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Esraa Alshinnawy&quot;,&quot;value&quot;:&quot;Esraa Alshinnawy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Esraa Alshinnawy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;??? ??????&quot;,&quot;value&quot;:&quot;??? ??????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;??? ??????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;elhabbasi yassin&quot;,&quot;value&quot;:&quot;elhabbasi yassin&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;elhabbasi yassin&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ajran Zafar&quot;,&quot;value&quot;:&quot;Ajran Zafar&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ajran Zafar&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Inaleila Rambs&quot;,&quot;value&quot;:&quot;Inaleila Rambs&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Inaleila Rambs&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sean Trevin&quot;,&quot;value&quot;:&quot;Sean Trevin&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sean Trevin&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kutabala Lawrence&quot;,&quot;value&quot;:&quot;Kutabala Lawrence&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kutabala Lawrence&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;mohan patil&quot;,&quot;value&quot;:&quot;mohan patil&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;mohan patil&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;RedNinja Hussy&quot;,&quot;value&quot;:&quot;RedNinja Hussy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;RedNinja Hussy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;fire water&quot;,&quot;value&quot;:&quot;fire water&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;fire water&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Juliano Mitri&quot;,&quot;value&quot;:&quot;Juliano Mitri&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Juliano Mitri&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Yaser Abdalla&quot;,&quot;value&quot;:&quot;Yaser Abdalla&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Yaser Abdalla&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;?????? ??????? alrihab albarihuh&quot;,&quot;value&quot;:&quot;?????? ??????? alrihab albarihuh&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;?????? ??????? alrihab albarihuh&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;???? ????&quot;,&quot;value&quot;:&quot;???? ????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;???? ????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;md kaife&quot;,&quot;value&quot;:&quot;md kaife&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;md kaife&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;YOUSAF ALI&quot;,&quot;value&quot;:&quot;YOUSAF ALI&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;YOUSAF ALI&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sabin Katuwal&quot;,&quot;value&quot;:&quot;Sabin Katuwal&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sabin Katuwal&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mustafa khan&quot;,&quot;value&quot;:&quot;Mustafa khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mustafa khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Abdul Talim&quot;,&quot;value&quot;:&quot;Abdul Talim&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Abdul Talim&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Emad Ali&quot;,&quot;value&quot;:&quot;Emad Ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Emad Ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Hariram Sain&quot;,&quot;value&quot;:&quot;Hariram Sain&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Hariram Sain&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kevin Shyjo&quot;,&quot;value&quot;:&quot;Kevin Shyjo&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kevin Shyjo&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;??? ?????? ??????&quot;,&quot;value&quot;:&quot;??? ?????? ??????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;??? ?????? ??????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rowil Mg&quot;,&quot;value&quot;:&quot;Rowil Mg&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rowil Mg&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rashid ali khan&quot;,&quot;value&quot;:&quot;Rashid ali khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rashid ali khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Samoil Journalist&quot;,&quot;value&quot;:&quot;Samoil Journalist&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Samoil Journalist&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Hussam elshamy&quot;,&quot;value&quot;:&quot;Hussam elshamy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Hussam elshamy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Salahuddin Ahmed&quot;,&quot;value&quot;:&quot;Salahuddin Ahmed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Salahuddin Ahmed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;arun das&quot;,&quot;value&quot;:&quot;arun das&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;arun das&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kishan Pandit786&quot;,&quot;value&quot;:&quot;Kishan Pandit786&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kishan Pandit786&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;seif ahmed&quot;,&quot;value&quot;:&quot;seif ahmed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;seif ahmed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kei Takishima&quot;,&quot;value&quot;:&quot;Kei Takishima&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kei Takishima&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;awan saab&quot;,&quot;value&quot;:&quot;awan saab&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;awan saab&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;shiya maddy vlog&quot;,&quot;value&quot;:&quot;shiya maddy vlog&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;shiya maddy vlog&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mohammed Rifai&quot;,&quot;value&quot;:&quot;Mohammed Rifai&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mohammed Rifai&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ayesha s&quot;,&quot;value&quot;:&quot;ayesha s&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ayesha s&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Bahaa Q&quot;,&quot;value&quot;:&quot;Bahaa Q&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Bahaa Q&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sanil Stansilaus&quot;,&quot;value&quot;:&quot;Sanil Stansilaus&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sanil Stansilaus&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nishar Ali&quot;,&quot;value&quot;:&quot;Nishar Ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nishar Ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Hamdi&quot;,&quot;value&quot;:&quot;Ahmed Hamdi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Hamdi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Yassine Sarir&quot;,&quot;value&quot;:&quot;Yassine Sarir&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Yassine Sarir&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nikhil cm&quot;,&quot;value&quot;:&quot;Nikhil cm&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nikhil cm&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Khamees&quot;,&quot;value&quot;:&quot;Ahmed Khamees&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Khamees&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;vishnu devarajan&quot;,&quot;value&quot;:&quot;vishnu devarajan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;vishnu devarajan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rafael Jr Manuel&quot;,&quot;value&quot;:&quot;Rafael Jr Manuel&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rafael Jr Manuel&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Hammam&quot;,&quot;value&quot;:&quot;Hammam&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Hammam&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sabu Xaviour&quot;,&quot;value&quot;:&quot;Sabu Xaviour&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sabu Xaviour&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;arman ali ali&quot;,&quot;value&quot;:&quot;arman ali ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;arman ali ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;salah abdelraouf&quot;,&quot;value&quot;:&quot;salah abdelraouf&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;salah abdelraouf&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Soliman&quot;,&quot;value&quot;:&quot;Ahmed Soliman&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Soliman&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;??????? ??????? ??? ???????&quot;,&quot;value&quot;:&quot;??????? ??????? ??? ???????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;??????? ??????? ??? ???????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ayman Alatrash&quot;,&quot;value&quot;:&quot;Ayman Alatrash&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ayman Alatrash&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;mohamed ramadan&quot;,&quot;value&quot;:&quot;mohamed ramadan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;mohamed ramadan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;karim nada&quot;,&quot;value&quot;:&quot;karim nada&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;karim nada&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahamad Fadl ala 111&quot;,&quot;value&quot;:&quot;Ahamad Fadl ala 111&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahamad Fadl ala 111&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rida Elyaakkoubi&quot;,&quot;value&quot;:&quot;Rida Elyaakkoubi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rida Elyaakkoubi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;,&quot;value&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Quadeer Khan&quot;,&quot;value&quot;:&quot;Quadeer Khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Quadeer Khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;YASAR ARAFATH M.K&quot;,&quot;value&quot;:&quot;YASAR ARAFATH M.K&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;YASAR ARAFATH M.K&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ahmed zaki&quot;,&quot;value&quot;:&quot;ahmed zaki&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ahmed zaki&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mohammad Saeed&quot;,&quot;value&quot;:&quot;Mohammad Saeed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mohammad Saeed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ameer Thaj&quot;,&quot;value&quot;:&quot;Ameer Thaj&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ameer Thaj&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Jahangir Alam Alam&quot;,&quot;value&quot;:&quot;Jahangir Alam Alam&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Jahangir Alam Alam&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Shajahan hameed&quot;,&quot;value&quot;:&quot;Shajahan hameed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Shajahan hameed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Siraj Np&quot;,&quot;value&quot;:&quot;Siraj Np&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Siraj Np&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nausad Raza&quot;,&quot;value&quot;:&quot;Nausad Raza&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nausad Raza&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;O A&quot;,&quot;value&quot;:&quot;O A&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;O A&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Al Al&quot;,&quot;value&quot;:&quot;Al Al&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Al Al&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Tasnim Ur Rehman&quot;,&quot;value&quot;:&quot;Tasnim Ur Rehman&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Tasnim Ur Rehman&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;muhammed mujibur rahman&quot;,&quot;value&quot;:&quot;muhammed mujibur rahman&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;muhammed mujibur rahman&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Robin Kenyanya&quot;,&quot;value&quot;:&quot;Robin Kenyanya&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Robin Kenyanya&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user229&quot;,&quot;value&quot;:&quot;Test user229&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user229&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user227&quot;,&quot;value&quot;:&quot;Test user227&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user227&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user228&quot;,&quot;value&quot;:&quot;Test user228&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user228&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user225&quot;,&quot;value&quot;:&quot;Test user225&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user225&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user226&quot;,&quot;value&quot;:&quot;Test user226&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user226&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user230&quot;,&quot;value&quot;:&quot;Test user230&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user230&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user176&quot;,&quot;value&quot;:&quot;Test user176&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user176&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user194&quot;,&quot;value&quot;:&quot;Test user194&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user194&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user212&quot;,&quot;value&quot;:&quot;Test user212&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user212&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user205&quot;,&quot;value&quot;:&quot;Test user205&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user205&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user213&quot;,&quot;value&quot;:&quot;Test user213&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user213&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user207&quot;,&quot;value&quot;:&quot;Test user207&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user207&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user202&quot;,&quot;value&quot;:&quot;Test user202&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user202&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user191&quot;,&quot;value&quot;:&quot;Test user191&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user191&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user224&quot;,&quot;value&quot;:&quot;Test user224&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user224&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user208&quot;,&quot;value&quot;:&quot;Test user208&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user208&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user214&quot;,&quot;value&quot;:&quot;Test user214&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user214&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user198&quot;,&quot;value&quot;:&quot;Test user198&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user198&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user179&quot;,&quot;value&quot;:&quot;Test user179&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user179&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user177&quot;,&quot;value&quot;:&quot;Test user177&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user177&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user206&quot;,&quot;value&quot;:&quot;Test user206&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user206&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user220&quot;,&quot;value&quot;:&quot;Test user220&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user220&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user200&quot;,&quot;value&quot;:&quot;Test user200&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user200&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user216&quot;,&quot;value&quot;:&quot;Test user216&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user216&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user223&quot;,&quot;value&quot;:&quot;Test user223&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user223&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user210&quot;,&quot;value&quot;:&quot;Test user210&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user210&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user222&quot;,&quot;value&quot;:&quot;Test user222&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user222&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user189&quot;,&quot;value&quot;:&quot;Test user189&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user189&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user217&quot;,&quot;value&quot;:&quot;Test user217&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user217&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user193&quot;,&quot;value&quot;:&quot;Test user193&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user193&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user197&quot;,&quot;value&quot;:&quot;Test user197&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user197&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user221&quot;,&quot;value&quot;:&quot;Test user221&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user221&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user219&quot;,&quot;value&quot;:&quot;Test user219&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user219&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user183&quot;,&quot;value&quot;:&quot;Test user183&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user183&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user196&quot;,&quot;value&quot;:&quot;Test user196&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user196&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user195&quot;,&quot;value&quot;:&quot;Test user195&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user195&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user187&quot;,&quot;value&quot;:&quot;Test user187&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user187&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user203&quot;,&quot;value&quot;:&quot;Test user203&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user203&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user218&quot;,&quot;value&quot;:&quot;Test user218&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user218&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user215&quot;,&quot;value&quot;:&quot;Test user215&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user215&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user185&quot;,&quot;value&quot;:&quot;Test user185&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user185&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user192&quot;,&quot;value&quot;:&quot;Test user192&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user192&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user201&quot;,&quot;value&quot;:&quot;Test user201&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user201&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user209&quot;,&quot;value&quot;:&quot;Test user209&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user209&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user190&quot;,&quot;value&quot;:&quot;Test user190&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user190&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user180&quot;,&quot;value&quot;:&quot;Test user180&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user180&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user211&quot;,&quot;value&quot;:&quot;Test user211&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user211&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user199&quot;,&quot;value&quot;:&quot;Test user199&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user199&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user204&quot;,&quot;value&quot;:&quot;Test user204&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user204&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user188&quot;,&quot;value&quot;:&quot;Test user188&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user188&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user181&quot;,&quot;value&quot;:&quot;Test user181&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user181&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user182&quot;,&quot;value&quot;:&quot;Test user182&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user182&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user144&quot;,&quot;value&quot;:&quot;Test user144&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user144&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user145&quot;,&quot;value&quot;:&quot;Test user145&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user145&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user149&quot;,&quot;value&quot;:&quot;Test user149&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user149&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user143&quot;,&quot;value&quot;:&quot;Test user143&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user143&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user174&quot;,&quot;value&quot;:&quot;Test user174&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user174&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user153&quot;,&quot;value&quot;:&quot;Test user153&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user153&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user156&quot;,&quot;value&quot;:&quot;Test user156&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user156&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user162&quot;,&quot;value&quot;:&quot;Test user162&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user162&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user173&quot;,&quot;value&quot;:&quot;Test user173&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user173&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user160&quot;,&quot;value&quot;:&quot;Test user160&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user160&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user170&quot;,&quot;value&quot;:&quot;Test user170&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user170&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user167&quot;,&quot;value&quot;:&quot;Test user167&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user167&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user147&quot;,&quot;value&quot;:&quot;Test user147&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user147&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user175&quot;,&quot;value&quot;:&quot;Test user175&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user175&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user155&quot;,&quot;value&quot;:&quot;Test user155&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user155&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user141&quot;,&quot;value&quot;:&quot;Test user141&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user141&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user139&quot;,&quot;value&quot;:&quot;Test user139&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user139&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user138&quot;,&quot;value&quot;:&quot;Test user138&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user138&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user178&quot;,&quot;value&quot;:&quot;Test user178&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user178&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user171&quot;,&quot;value&quot;:&quot;Test user171&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user171&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user150&quot;,&quot;value&quot;:&quot;Test user150&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user150&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user158&quot;,&quot;value&quot;:&quot;Test user158&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user158&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user154&quot;,&quot;value&quot;:&quot;Test user154&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user154&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user184&quot;,&quot;value&quot;:&quot;Test user184&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user184&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user140&quot;,&quot;value&quot;:&quot;Test user140&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user140&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user146&quot;,&quot;value&quot;:&quot;Test user146&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user146&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user152&quot;,&quot;value&quot;:&quot;Test user152&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user152&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user165&quot;,&quot;value&quot;:&quot;Test user165&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user165&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user164&quot;,&quot;value&quot;:&quot;Test user164&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user164&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user159&quot;,&quot;value&quot;:&quot;Test user159&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user159&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user169&quot;,&quot;value&quot;:&quot;Test user169&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user169&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user161&quot;,&quot;value&quot;:&quot;Test user161&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user161&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user172&quot;,&quot;value&quot;:&quot;Test user172&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user172&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user168&quot;,&quot;value&quot;:&quot;Test user168&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user168&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user166&quot;,&quot;value&quot;:&quot;Test user166&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user166&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user148&quot;,&quot;value&quot;:&quot;Test user148&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user148&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user137&quot;,&quot;value&quot;:&quot;Test user137&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user137&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user157&quot;,&quot;value&quot;:&quot;Test user157&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user157&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user163&quot;,&quot;value&quot;:&quot;Test user163&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user163&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user186&quot;,&quot;value&quot;:&quot;Test user186&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user186&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user151&quot;,&quot;value&quot;:&quot;Test user151&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user151&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user130&quot;,&quot;value&quot;:&quot;Test user130&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user130&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user131&quot;,&quot;value&quot;:&quot;Test user131&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user131&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user134&quot;,&quot;value&quot;:&quot;Test user134&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user134&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user126&quot;,&quot;value&quot;:&quot;Test user126&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user126&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user127&quot;,&quot;value&quot;:&quot;Test user127&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user127&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user136&quot;,&quot;value&quot;:&quot;Test user136&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user136&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user142&quot;,&quot;value&quot;:&quot;Test user142&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user142&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Aayush Sharma&quot;,&quot;value&quot;:&quot;Aayush Sharma&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Aayush Sharma&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Aayush&quot;,&quot;value&quot;:&quot;Aayush&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Aayush&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;garima Sethi&quot;,&quot;value&quot;:&quot;garima Sethi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;garima Sethi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;hrushikesh Kulkarni&quot;,&quot;value&quot;:&quot;hrushikesh Kulkarni&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;hrushikesh Kulkarni&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Diwakar Singh Maurya&quot;,&quot;value&quot;:&quot;Diwakar Singh Maurya&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Diwakar Singh Maurya&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ashish Sharma&quot;,&quot;value&quot;:&quot;ashish Sharma&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ashish Sharma&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;subhanker Sarker&quot;,&quot;value&quot;:&quot;subhanker Sarker&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;subhanker Sarker&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;samridhi Srivastava&quot;,&quot;value&quot;:&quot;samridhi Srivastava&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;samridhi Srivastava&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Noor Siddiqui&quot;,&quot;value&quot;:&quot;Noor Siddiqui&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Noor Siddiqui&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Deepak Rana&quot;,&quot;value&quot;:&quot;Deepak Rana&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Deepak Rana&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Daryl Fernandes&quot;,&quot;value&quot;:&quot;Daryl Fernandes&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Daryl Fernandes&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rohit Dubey&quot;,&quot;value&quot;:&quot;Rohit Dubey&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rohit Dubey&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Faraz Khan&quot;,&quot;value&quot;:&quot;Faraz Khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Faraz Khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Vijay Ramachandran&quot;,&quot;value&quot;:&quot;Vijay Ramachandran&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Vijay Ramachandran&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Dealer Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Dealer Name&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Dealer Name&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;isACompetitorQuestion&quot;:false,&quot;multipleSelectionText&quot;:&quot; {{0}} &quot;,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false,&quot;shouldFillParticipantDataInOptions&quot;:false},&quot;previous&quot;:&quot;53338b2e-0abe-41ea-95b4-733db206f666&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;fad810ea-517a-4d58-b397-f16225a64172&quot;,&quot;next&quot;:&quot;a96e0e45-7d10-43c5-bee0-25794784ce00&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Outlet Location&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Outlet Location&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Outlet Location&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;007eb910-e2fe-4fbd-8832-d00cb4fb6a55&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;a96e0e45-7d10-43c5-bee0-25794784ce00&quot;,&quot;next&quot;:&quot;470fe5cc-723a-41d0-837c-b10402b93121&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Hello  ${qID://50a65a07-4cd2-496b-9239-b057b5f10bd9}, based on you recent experience with ${qID://e908a6e2-52a0-4efa-b07f-44d23a33220a/1}  situated at  ${qID://ab8d31bc-6716-41fd-8f63-4b8c5e4eb18d/1}&quot;,&quot;isRichTextEditorEnabled&quot;:false},&quot;previous&quot;:&quot;fad810ea-517a-4d58-b397-f16225a64172&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;},{&quot;id&quot;:&quot;470fe5cc-723a-41d0-837c-b10402b93121&quot;,&quot;next&quot;:&quot;2d610ddc-4c5b-46a0-9624-0b79e997ebba&quot;,&quot;config&quot;:{&quot;shortCode&quot;:&quot;NPS&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:true,&quot;ratingPoints&quot;:[{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;0&quot;,&quot;value&quot;:0,&quot;helpText&quot;:&quot;Not at all likely 👎&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;1&quot;,&quot;value&quot;:1,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;2&quot;,&quot;value&quot;:2,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;3&quot;,&quot;value&quot;:3,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;4&quot;,&quot;value&quot;:4,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;5&quot;,&quot;value&quot;:5,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;6&quot;,&quot;value&quot;:6,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#cacfd5&quot;,&quot;label&quot;:&quot;7&quot;,&quot;value&quot;:7,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#cacfd5&quot;,&quot;label&quot;:&quot;8&quot;,&quot;value&quot;:8,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#008000&quot;,&quot;label&quot;:&quot;9&quot;,&quot;value&quot;:9,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#008000&quot;,&quot;label&quot;:&quot;10&quot;,&quot;value&quot;:10,&quot;helpText&quot;:&quot;👍 Extremely likely&quot;}],&quot;isNPSQuestion&quot;:true,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Based on your recent showroom visit experience and interaction, how likely are you to recommend Bajaj Motorcycles to a friend or colleague?&quot;,&quot;notApplicableOption&quot;:{&quot;color&quot;:&quot;#6E6E6E&quot;,&quot;label&quot;:&quot;NA&quot;,&quot;value&quot;:&quot;NA&quot;,&quot;helpText&quot;:&quot;&quot;},&quot;enableNotApplicableOption&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;a96e0e45-7d10-43c5-bee0-25794784ce00&quot;,&quot;componentKind&quot;:&quot;RATING&quot;},{&quot;id&quot;:&quot;2d610ddc-4c5b-46a0-9624-0b79e997ebba&quot;,&quot;next&quot;:&quot;36669627-3000-4b75-999b-e0ffc2cc610b&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Based on your showroom visit experience, could you please tell us which of the following would you not recommend? 👎&quot;,&quot;isRichTextEditorEnabled&quot;:false},&quot;previous&quot;:&quot;470fe5cc-723a-41d0-837c-b10402b93121&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;},{&quot;id&quot;:&quot;36669627-3000-4b75-999b-e0ffc2cc610b&quot;,&quot;next&quot;:&quot;a19d7322-d86d-4517-8208-551e4c3f36e4&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Based on your showroom visit experience, could you please tell us which of the following would you recommend?  👍&quot;,&quot;isRichTextEditorEnabled&quot;:false},&quot;previous&quot;:&quot;2d610ddc-4c5b-46a0-9624-0b79e997ebba&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;},{&quot;id&quot;:&quot;a19d7322-d86d-4517-8208-551e4c3f36e4&quot;,&quot;next&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;config&quot;:{&quot;override&quot;:false,&quot;shortCode&quot;:&quot;__MCQ_DrilldownQu__Like/dislike&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:true,&quot;questionId&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;&quot;,&quot;drilldownQuestions&quot;:[{&quot;label&quot;:&quot;Products&quot;,&quot;value&quot;:&quot;1&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Products available on display or purchase&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Availability of different colors&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Range of products under company brand&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Product performance actual v/s promised&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;isRequired&quot;:false,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/bike-black.svg&quot;,&quot;questionId&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:false,&quot;questionShortCode&quot;:&quot;Products&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Accessibility of showrooms&quot;,&quot;value&quot;:&quot;2&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Distance to showroom&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Connectivity to location (Ease of Access)&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of identifying showrooms&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;isRequired&quot;:false,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/maps-black.svg&quot;,&quot;questionId&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:false,&quot;questionShortCode&quot;:&quot;Accessibility of showrooms&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Showroom infrastructure&quot;,&quot;value&quot;:&quot;3&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Quality of product display/demos&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Availability of parking&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Provision of seating area&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Provision for refreshments&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Cleanliness of showroom&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;isRequired&quot;:false,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/showroom-black.svg&quot;,&quot;questionId&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:false,&quot;questionShortCode&quot;:&quot;Showroom infrastructure&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Sales team interactions&quot;,&quot;value&quot;:&quot;4&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Waiting time&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Product knowledge of sales staff&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Accuracy of information provided&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Friendliness and Professionalism of sales team / Behaviour of Sales Team&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Availability of brochures with product information; use of digital media to showcase products&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Product demonstration&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Call backs with offers (in case visit did not lead to purchase)&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Fluency of sales team in the local language&quot;,&quot;value&quot;:&quot;8&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Prior awareness of sales team about customer preferences&quot;,&quot;value&quot;:&quot;9&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/person-black.svg&quot;,&quot;questionId&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Sales team interactions&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Test ride experience&quot;,&quot;value&quot;:&quot;5&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of slots for test ride&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of testride booking.&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Quality of route for test ride / Quaility of Test Ride Route&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Length of test ride&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Quality of bike used for the test ride&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/bike-black.svg&quot;,&quot;questionId&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Test ride experience&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Purchase formalities&quot;,&quot;value&quot;:&quot;6&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Provision for allocation of specific chassis/ Vehicle based on preference&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of payment and billing; time taken to invoice&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of registration procedure; time for RTO approval&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of tracking RTO / HSRP process&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of Insurance procedure (ease of purchase, price etc.)&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Vehicle Delivery promised Vs actual / Time to road actual v/s estimated&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;One time collection of data / document&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/purchase-black.svg&quot;,&quot;questionId&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Purchase formalities&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Exchange experience&quot;,&quot;value&quot;:&quot;7&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of different broker options for exchange&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Number of documents required&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Exchange value&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Experience with exchange related services (pick up of vehicle, document transfer, etc.,)&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/exchange-black.svg&quot;,&quot;questionId&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Exchange experience&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;value&quot;:&quot;8&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Ex-showroom price / Pricing (Ex Shpowroom &amp; On Road Price)&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Dealer handling charges&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Registration fee&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Charges for additional services&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;On road price&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Attractiveness of discounts and schemes&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Freebies&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/price-black.svg&quot;,&quot;questionId&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;questionStatement&quot;:&quot;&quot;}],&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;36669627-3000-4b75-999b-e0ffc2cc610b&quot;,&quot;componentKind&quot;:&quot;MCQ_DRILLDOWN&quot;},{&quot;id&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;next&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Products&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Accessibility of showrooms&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Showroom infrastructure&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sales team interactions&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test ride experience&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Purchase formalities&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Exchange experience&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;value&quot;:&quot;8&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Like/dislike&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:true,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;a19d7322-d86d-4517-8208-551e4c3f36e4&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;next&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Products available on display or purchase&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Availability of different colors&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Range of products under company brand&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Product performance actual v/s promised&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Products&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Products&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;next&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Distance to showroom&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Connectivity to location (Ease of Access)&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of identifying showrooms&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Accessibility of showrooms&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Accessibility of showrooms&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;next&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Quality of product display/demos&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Availability of parking&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Provision of seating area&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Provision for refreshments&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Cleanliness of showroom&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Showroom infrastructure&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Showroom infrastructure&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;next&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Waiting time&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Product knowledge of sales staff&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Accuracy of information provided&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Friendliness and Professionalism of sales team / Behaviour of Sales Team&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Availability of brochures with product information; use of digital media to showcase products&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Product demonstration&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Call backs with offers (in case visit did not lead to purchase)&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Fluency of sales team in the local language&quot;,&quot;value&quot;:&quot;8&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Prior awareness of sales team about customer preferences&quot;,&quot;value&quot;:&quot;9&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Sales team interactions&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Sales team interactions&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;next&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of slots for test ride&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of testride booking.&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Quality of route for test ride / Quaility of Test Ride Route&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Length of test ride&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Quality of bike used for the test ride&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Test ride experience&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Test ride experience&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;next&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Provision for allocation of specific chassis/ Vehicle based on preference&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of payment and billing; time taken to invoice&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of registration procedure; time for RTO approval&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of tracking RTO / HSRP process&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of Insurance procedure (ease of purchase, price etc.)&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Vehicle Delivery promised Vs actual / Time to road actual v/s estimated&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;One time collection of data / document&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Purchase formalities&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Purchase formalities&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;next&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of different broker options for exchange&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Number of documents required&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Exchange value&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Experience with exchange related services (pick up of vehicle, document transfer, etc.,)&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Exchange experience&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Exchange experience&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;next&quot;:&quot;5f4380eb-06ad-4dcf-ab54-69e056eaefb1&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Ex-showroom price / Pricing (Ex Shpowroom &amp; On Road Price)&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Dealer handling charges&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Registration fee&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Charges for additional services&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;On road price&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Attractiveness of discounts and schemes&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Freebies&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Prices, discounts and promotional schemes&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;5f4380eb-06ad-4dcf-ab54-69e056eaefb1&quot;,&quot;next&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;config&quot;:{&quot;maxWords&quot;:300,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Open_End&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:true,&quot;showAsReadOnly&quot;:false,&quot;placeHolderText&quot;:&quot;Your feedback will help us improve.&quot;,&quot;questionStatement&quot;:&quot;Do you have any other suggestions for us to improve your experience?&quot;},&quot;previous&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;next&quot;:&quot;3e34b168-e083-4b8a-b565-e56baf18f72f&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;Would you be willing to participate in a call-back?&quot;,&quot;value&quot;:&quot;Yes&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Call-back&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;CHECKBOXES&quot;,&quot;defaultAnswer&quot;:[&quot;Yes&quot;],&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Would you be willing to participate in a call-back?&quot;,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;5f4380eb-06ad-4dcf-ab54-69e056eaefb1&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;3e34b168-e083-4b8a-b565-e56baf18f72f&quot;,&quot;next&quot;:&quot;77d8bff6-9506-4974-bab1-0a42a5043476&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Doc Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Doc Name&quot;},&quot;previous&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;77d8bff6-9506-4974-bab1-0a42a5043476&quot;,&quot;next&quot;:&quot;75e8a0df-6195-4f8c-96b1-83fa0d6b70bb&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Doc ID&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Doc ID&quot;},&quot;previous&quot;:&quot;3e34b168-e083-4b8a-b565-e56baf18f72f&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;75e8a0df-6195-4f8c-96b1-83fa0d6b70bb&quot;,&quot;next&quot;:&quot;7fcc0f6d-eeb8-4f18-83f6-95b68e196240&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Enquiry Creation Date&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Enquiry Creation Date&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Enquiry Creation Date&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;77d8bff6-9506-4974-bab1-0a42a5043476&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;7fcc0f6d-eeb8-4f18-83f6-95b68e196240&quot;,&quot;next&quot;:&quot;dc36b778-3dde-455f-b9c1-9f7c0b089dc1&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Enquiry Type&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Enquiry Type&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Enquiry Type&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;75e8a0df-6195-4f8c-96b1-83fa0d6b70bb&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;dc36b778-3dde-455f-b9c1-9f7c0b089dc1&quot;,&quot;next&quot;:&quot;6c1593c7-8ae4-4b85-a5b4-2e793c18317c&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Sales Advisor&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Sales Advisor&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Sales Advisor&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;7fcc0f6d-eeb8-4f18-83f6-95b68e196240&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;6c1593c7-8ae4-4b85-a5b4-2e793c18317c&quot;,&quot;next&quot;:&quot;34a7f45b-de2c-490d-b730-019989e39ad0&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Customer Mobile number&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Customer Mobile number&quot;},&quot;previous&quot;:&quot;dc36b778-3dde-455f-b9c1-9f7c0b089dc1&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;34a7f45b-de2c-490d-b730-019989e39ad0&quot;,&quot;next&quot;:&quot;6c782dc2-8336-4872-94a1-8d2e49e18845&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Customer ID&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Customer ID&quot;},&quot;previous&quot;:&quot;6c1593c7-8ae4-4b85-a5b4-2e793c18317c&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;6c782dc2-8336-4872-94a1-8d2e49e18845&quot;,&quot;next&quot;:&quot;8a24f8f1-a2ac-4053-904f-8c1e5787aa02&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Preferred language&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Preferred language&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Preferred language&quot;,&quot;isLanguageController&quot;:true,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;34a7f45b-de2c-490d-b730-019989e39ad0&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;8a24f8f1-a2ac-4053-904f-8c1e5787aa02&quot;,&quot;next&quot;:&quot;2beb434c-97d2-4166-863a-c95162b89ce1&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Dealer Code&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Dealer Code&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Dealer Code&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;6c782dc2-8336-4872-94a1-8d2e49e18845&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;2beb434c-97d2-4166-863a-c95162b89ce1&quot;,&quot;next&quot;:&quot;df23f48f-97ae-4972-80e5-f677693b311a&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Branch Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Branch Name&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Branch Name&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;8a24f8f1-a2ac-4053-904f-8c1e5787aa02&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;df23f48f-97ae-4972-80e5-f677693b311a&quot;,&quot;next&quot;:&quot;4c719cc3-be5b-4083-aa0a-d8ff6c8fa84a&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Branch Code&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Branch Code&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Branch Code&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;2beb434c-97d2-4166-863a-c95162b89ce1&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;4c719cc3-be5b-4083-aa0a-d8ff6c8fa84a&quot;,&quot;next&quot;:&quot;4050fca4-d989-41cd-860d-6442936c7868&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Branch Location&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Branch Location&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Branch Location&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;df23f48f-97ae-4972-80e5-f677693b311a&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;4050fca4-d989-41cd-860d-6442936c7868&quot;,&quot;next&quot;:&quot;3f2b9635-4c1e-4e30-8793-071b6a281320&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Episode&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Episode&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Episode&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;4c719cc3-be5b-4083-aa0a-d8ff6c8fa84a&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;3f2b9635-4c1e-4e30-8793-071b6a281320&quot;,&quot;next&quot;:&quot;fe22f26a-95a5-46fe-85c8-5334a48c35cf&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Business Unit&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Business Unit&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Business Unit&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;4050fca4-d989-41cd-860d-6442936c7868&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;fe22f26a-95a5-46fe-85c8-5334a48c35cf&quot;,&quot;next&quot;:&quot;4cf70b6c-e8d8-4085-ad51-8a2a76ea8d2e&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;OTP Verification Trend&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;OTP Verification Trend&quot;,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;3f2b9635-4c1e-4e30-8793-071b6a281320&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;4cf70b6c-e8d8-4085-ad51-8a2a76ea8d2e&quot;,&quot;next&quot;:&quot;670c10e0-280b-451e-ae16-d6fccae52bf7&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Circle&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Circle&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Circle&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;fe22f26a-95a5-46fe-85c8-5334a48c35cf&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;670c10e0-280b-451e-ae16-d6fccae52bf7&quot;,&quot;next&quot;:&quot;dfc430b6-2512-4420-91b6-0dd2e47ff736&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Region&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Region&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Region&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;4cf70b6c-e8d8-4085-ad51-8a2a76ea8d2e&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;dfc430b6-2512-4420-91b6-0dd2e47ff736&quot;,&quot;next&quot;:&quot;f1c5310d-4547-4633-9b80-54fbe9f03183&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;ASM&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;ASM&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;ASM&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;670c10e0-280b-451e-ae16-d6fccae52bf7&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;f1c5310d-4547-4633-9b80-54fbe9f03183&quot;,&quot;next&quot;:&quot;f59f7ca8-5321-4b63-83b9-616dc7f51dee&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;City&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;City&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;City&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;dfc430b6-2512-4420-91b6-0dd2e47ff736&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;f59f7ca8-5321-4b63-83b9-616dc7f51dee&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Terms  | Disclaimer  | Privacy Policy \u0001Copyright © 2021 Bajaj Auto Ltd. All rights reserved&quot;,&quot;isRichTextEditorEnabled&quot;:true,&quot;questionStatementRichText&quot;:{&quot;blocks&quot;:[{&quot;key&quot;:&quot;djaps&quot;,&quot;data&quot;:{&quot;text-align&quot;:&quot;center&quot;},&quot;text&quot;:&quot;Terms  | Disclaimer  | Privacy Policy &quot;,&quot;type&quot;:&quot;unstyled&quot;,&quot;depth&quot;:0,&quot;entityRanges&quot;:[{&quot;key&quot;:0,&quot;length&quot;:5,&quot;offset&quot;:0},{&quot;key&quot;:1,&quot;length&quot;:10,&quot;offset&quot;:9},{&quot;key&quot;:2,&quot;length&quot;:14,&quot;offset&quot;:23}],&quot;inlineStyleRanges&quot;:[]},{&quot;key&quot;:&quot;40mpr&quot;,&quot;data&quot;:{&quot;text-align&quot;:&quot;center&quot;},&quot;text&quot;:&quot;Copyright © 2021 Bajaj Auto Ltd. All rights reserved&quot;,&quot;type&quot;:&quot;unstyled&quot;,&quot;depth&quot;:0,&quot;entityRanges&quot;:[],&quot;inlineStyleRanges&quot;:[]}],&quot;entityMap&quot;:{&quot;0&quot;:{&quot;data&quot;:{&quot;url&quot;:&quot;${scheme}://www.bajajauto.com/onlinebooking-tnc&quot;,&quot;targetOption&quot;:&quot;_blank&quot;},&quot;type&quot;:&quot;LINK&quot;,&quot;mutability&quot;:&quot;MUTABLE&quot;},&quot;1&quot;:{&quot;data&quot;:{&quot;url&quot;:&quot;${scheme}://www.bajajauto.com/disclaimer&quot;,&quot;targetOption&quot;:&quot;_blank&quot;},&quot;type&quot;:&quot;LINK&quot;,&quot;mutability&quot;:&quot;MUTABLE&quot;},&quot;2&quot;:{&quot;data&quot;:{&quot;url&quot;:&quot;${scheme}://www.bajajauto.com/privacy-policy&quot;,&quot;targetOption&quot;:&quot;_blank&quot;},&quot;type&quot;:&quot;LINK&quot;,&quot;mutability&quot;:&quot;MUTABLE&quot;}}}},&quot;previous&quot;:&quot;f1c5310d-4547-4633-9b80-54fbe9f03183&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;}]}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="715 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;UpdateTranslations&quot;,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;translations&quot;:{&quot;0&quot;:{&quot;English&quot;:&quot;0&quot;},&quot;1&quot;:{&quot;English&quot;:&quot;1&quot;},&quot;2&quot;:{&quot;English&quot;:&quot;2&quot;},&quot;3&quot;:{&quot;English&quot;:&quot;3&quot;},&quot;4&quot;:{&quot;English&quot;:&quot;4&quot;},&quot;5&quot;:{&quot;English&quot;:&quot;5&quot;},&quot;6&quot;:{&quot;English&quot;:&quot;6&quot;},&quot;7&quot;:{&quot;English&quot;:&quot;7&quot;},&quot;8&quot;:{&quot;English&quot;:&quot;8&quot;},&quot;9&quot;:{&quot;English&quot;:&quot;9&quot;},&quot;10&quot;:{&quot;English&quot;:&quot;10&quot;},&quot;Phone&quot;:{&quot;English&quot;:&quot;Phone&quot;},&quot;CDMS Response Id&quot;:{&quot;English&quot;:&quot;CDMS Response Id&quot;},&quot;Customer Name&quot;:{&quot;English&quot;:&quot;Customer Name&quot;},&quot;Dealer Name&quot;:{&quot;English&quot;:&quot;Dealer Name&quot;},&quot;TBD&quot;:{&quot;English&quot;:&quot;TBD&quot;},&quot;ahmed ALnaqbi&quot;:{&quot;English&quot;:&quot;ahmed ALnaqbi&quot;},&quot;Ahmed Abdel Hamid&quot;:{&quot;English&quot;:&quot;Ahmed Abdel Hamid&quot;},&quot;S BJ&quot;:{&quot;English&quot;:&quot;S BJ&quot;},&quot;???? ???????&quot;:{&quot;English&quot;:&quot;???? ???????&quot;},&quot;Osama Khairy&quot;:{&quot;English&quot;:&quot;Osama Khairy&quot;},&quot;musthafa dever parambil&quot;:{&quot;English&quot;:&quot;musthafa dever parambil&quot;},&quot;Tiger Noir&quot;:{&quot;English&quot;:&quot;Tiger Noir&quot;},&quot;Salah Abu Yassin&quot;:{&quot;English&quot;:&quot;Salah Abu Yassin&quot;},&quot;Rana AA&quot;:{&quot;English&quot;:&quot;Rana AA&quot;},&quot;Bahig Georgi&quot;:{&quot;English&quot;:&quot;Bahig Georgi&quot;},&quot;AHMED ABOUELENIN&quot;:{&quot;English&quot;:&quot;AHMED ABOUELENIN&quot;},&quot;khalid al-aghbari&quot;:{&quot;English&quot;:&quot;khalid al-aghbari&quot;},&quot;Ijaz Fuadh&quot;:{&quot;English&quot;:&quot;Ijaz Fuadh&quot;},&quot;vijayakumar Duraisamy&quot;:{&quot;English&quot;:&quot;vijayakumar Duraisamy&quot;},&quot;qw Q&quot;:{&quot;English&quot;:&quot;qw Q&quot;},&quot;????? ???&quot;:{&quot;English&quot;:&quot;????? ???&quot;},&quot;Ayoub LT&quot;:{&quot;English&quot;:&quot;Ayoub LT&quot;},&quot;Ranjith Chemmad CHEMMADAN&quot;:{&quot;English&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;},&quot;Akuamoah Boateng&quot;:{&quot;English&quot;:&quot;Akuamoah Boateng&quot;},&quot;Sidhik M N&quot;:{&quot;English&quot;:&quot;Sidhik M N&quot;},&quot;Nashid Kunookkara&quot;:{&quot;English&quot;:&quot;Nashid Kunookkara&quot;},&quot;Sudheesh Karikkad&quot;:{&quot;English&quot;:&quot;Sudheesh Karikkad&quot;},&quot;Ahmed Ali&quot;:{&quot;English&quot;:&quot;Ahmed Ali&quot;},&quot;Ziad Elbermawy&quot;:{&quot;English&quot;:&quot;Ziad Elbermawy&quot;},&quot;Linda Wong&quot;:{&quot;English&quot;:&quot;Linda Wong&quot;},&quot;Ferdous Alam Tohid&quot;:{&quot;English&quot;:&quot;Ferdous Alam Tohid&quot;},&quot;Shiney Roberts&quot;:{&quot;English&quot;:&quot;Shiney Roberts&quot;},&quot;kashif kora&quot;:{&quot;English&quot;:&quot;kashif kora&quot;},&quot;Mukku Sisindri&quot;:{&quot;English&quot;:&quot;Mukku Sisindri&quot;},&quot;Avinash Padmashali&quot;:{&quot;English&quot;:&quot;Avinash Padmashali&quot;},&quot;Rashed Mood&quot;:{&quot;English&quot;:&quot;Rashed Mood&quot;},&quot;Nahir Ahmed&quot;:{&quot;English&quot;:&quot;Nahir Ahmed&quot;},&quot;???? ??????&quot;:{&quot;English&quot;:&quot;???? ??????&quot;},&quot;Mo&apos;men Hussein&quot;:{&quot;English&quot;:&quot;Mo&apos;men Hussein&quot;},&quot;Jalel Thebet&quot;:{&quot;English&quot;:&quot;Jalel Thebet&quot;},&quot;Abdullah Aldhabyani&quot;:{&quot;English&quot;:&quot;Abdullah Aldhabyani&quot;},&quot;Muhammad Ariyan Khan&quot;:{&quot;English&quot;:&quot;Muhammad Ariyan Khan&quot;},&quot;mostafa abdu&quot;:{&quot;English&quot;:&quot;mostafa abdu&quot;},&quot;Manoj Singh Rawat&quot;:{&quot;English&quot;:&quot;Manoj Singh Rawat&quot;},&quot;NEIL&quot;:{&quot;English&quot;:&quot;NEIL&quot;},&quot;Deepak kumar&quot;:{&quot;English&quot;:&quot;Deepak kumar&quot;},&quot;Roland Claudio&quot;:{&quot;English&quot;:&quot;Roland Claudio&quot;},&quot;Simpow Gits&quot;:{&quot;English&quot;:&quot;Simpow Gits&quot;},&quot;Brian Monteiro Takamori&quot;:{&quot;English&quot;:&quot;Brian Monteiro Takamori&quot;},&quot;eecleonavarro&quot;:{&quot;English&quot;:&quot;eecleonavarro&quot;},&quot;Esraa Alshinnawy&quot;:{&quot;English&quot;:&quot;Esraa Alshinnawy&quot;},&quot;??? ??????&quot;:{&quot;English&quot;:&quot;??? ??????&quot;},&quot;elhabbasi yassin&quot;:{&quot;English&quot;:&quot;elhabbasi yassin&quot;},&quot;Ajran Zafar&quot;:{&quot;English&quot;:&quot;Ajran Zafar&quot;},&quot;Inaleila Rambs&quot;:{&quot;English&quot;:&quot;Inaleila Rambs&quot;},&quot;Sean Trevin&quot;:{&quot;English&quot;:&quot;Sean Trevin&quot;},&quot;Kutabala Lawrence&quot;:{&quot;English&quot;:&quot;Kutabala Lawrence&quot;},&quot;mohan patil&quot;:{&quot;English&quot;:&quot;mohan patil&quot;},&quot;RedNinja Hussy&quot;:{&quot;English&quot;:&quot;RedNinja Hussy&quot;},&quot;fire water&quot;:{&quot;English&quot;:&quot;fire water&quot;},&quot;Juliano Mitri&quot;:{&quot;English&quot;:&quot;Juliano Mitri&quot;},&quot;Yaser Abdalla&quot;:{&quot;English&quot;:&quot;Yaser Abdalla&quot;},&quot;?????? ??????? alrihab albarihuh&quot;:{&quot;English&quot;:&quot;?????? ??????? alrihab albarihuh&quot;},&quot;???? ????&quot;:{&quot;English&quot;:&quot;???? ????&quot;},&quot;md kaife&quot;:{&quot;English&quot;:&quot;md kaife&quot;},&quot;YOUSAF ALI&quot;:{&quot;English&quot;:&quot;YOUSAF ALI&quot;},&quot;Sabin Katuwal&quot;:{&quot;English&quot;:&quot;Sabin Katuwal&quot;},&quot;Mustafa khan&quot;:{&quot;English&quot;:&quot;Mustafa khan&quot;},&quot;Abdul Talim&quot;:{&quot;English&quot;:&quot;Abdul Talim&quot;},&quot;Emad Ali&quot;:{&quot;English&quot;:&quot;Emad Ali&quot;},&quot;Hariram Sain&quot;:{&quot;English&quot;:&quot;Hariram Sain&quot;},&quot;Kevin Shyjo&quot;:{&quot;English&quot;:&quot;Kevin Shyjo&quot;},&quot;??? ?????? ??????&quot;:{&quot;English&quot;:&quot;??? ?????? ??????&quot;},&quot;Rowil Mg&quot;:{&quot;English&quot;:&quot;Rowil Mg&quot;},&quot;Rashid ali khan&quot;:{&quot;English&quot;:&quot;Rashid ali khan&quot;},&quot;Samoil Journalist&quot;:{&quot;English&quot;:&quot;Samoil Journalist&quot;},&quot;Hussam elshamy&quot;:{&quot;English&quot;:&quot;Hussam elshamy&quot;},&quot;Salahuddin Ahmed&quot;:{&quot;English&quot;:&quot;Salahuddin Ahmed&quot;},&quot;arun das&quot;:{&quot;English&quot;:&quot;arun das&quot;},&quot;Kishan Pandit786&quot;:{&quot;English&quot;:&quot;Kishan Pandit786&quot;},&quot;seif ahmed&quot;:{&quot;English&quot;:&quot;seif ahmed&quot;},&quot;Kei Takishima&quot;:{&quot;English&quot;:&quot;Kei Takishima&quot;},&quot;awan saab&quot;:{&quot;English&quot;:&quot;awan saab&quot;},&quot;shiya maddy vlog&quot;:{&quot;English&quot;:&quot;shiya maddy vlog&quot;},&quot;Mohammed Rifai&quot;:{&quot;English&quot;:&quot;Mohammed Rifai&quot;},&quot;ayesha s&quot;:{&quot;English&quot;:&quot;ayesha s&quot;},&quot;Bahaa Q&quot;:{&quot;English&quot;:&quot;Bahaa Q&quot;},&quot;Sanil Stansilaus&quot;:{&quot;English&quot;:&quot;Sanil Stansilaus&quot;},&quot;Nishar Ali&quot;:{&quot;English&quot;:&quot;Nishar Ali&quot;},&quot;Ahmed Hamdi&quot;:{&quot;English&quot;:&quot;Ahmed Hamdi&quot;},&quot;Yassine Sarir&quot;:{&quot;English&quot;:&quot;Yassine Sarir&quot;},&quot;Nikhil cm&quot;:{&quot;English&quot;:&quot;Nikhil cm&quot;},&quot;Ahmed Khamees&quot;:{&quot;English&quot;:&quot;Ahmed Khamees&quot;},&quot;vishnu devarajan&quot;:{&quot;English&quot;:&quot;vishnu devarajan&quot;},&quot;Rafael Jr Manuel&quot;:{&quot;English&quot;:&quot;Rafael Jr Manuel&quot;},&quot;Hammam&quot;:{&quot;English&quot;:&quot;Hammam&quot;},&quot;Sabu Xaviour&quot;:{&quot;English&quot;:&quot;Sabu Xaviour&quot;},&quot;arman ali ali&quot;:{&quot;English&quot;:&quot;arman ali ali&quot;},&quot;salah abdelraouf&quot;:{&quot;English&quot;:&quot;salah abdelraouf&quot;},&quot;Ahmed Soliman&quot;:{&quot;English&quot;:&quot;Ahmed Soliman&quot;},&quot;??????? ??????? ??? ???????&quot;:{&quot;English&quot;:&quot;??????? ??????? ??? ???????&quot;},&quot;Ayman Alatrash&quot;:{&quot;English&quot;:&quot;Ayman Alatrash&quot;},&quot;mohamed ramadan&quot;:{&quot;English&quot;:&quot;mohamed ramadan&quot;},&quot;karim nada&quot;:{&quot;English&quot;:&quot;karim nada&quot;},&quot;Ahamad Fadl ala 111&quot;:{&quot;English&quot;:&quot;Ahamad Fadl ala 111&quot;},&quot;Rida Elyaakkoubi&quot;:{&quot;English&quot;:&quot;Rida Elyaakkoubi&quot;},&quot;scymark palmerahyï¿½hjdhffah b b&quot;:{&quot;English&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;},&quot;Quadeer Khan&quot;:{&quot;English&quot;:&quot;Quadeer Khan&quot;},&quot;YASAR ARAFATH M.K&quot;:{&quot;English&quot;:&quot;YASAR ARAFATH M.K&quot;},&quot;ahmed zaki&quot;:{&quot;English&quot;:&quot;ahmed zaki&quot;},&quot;Mohammad Saeed&quot;:{&quot;English&quot;:&quot;Mohammad Saeed&quot;},&quot;Ameer Thaj&quot;:{&quot;English&quot;:&quot;Ameer Thaj&quot;},&quot;Jahangir Alam Alam&quot;:{&quot;English&quot;:&quot;Jahangir Alam Alam&quot;},&quot;Shajahan hameed&quot;:{&quot;English&quot;:&quot;Shajahan hameed&quot;},&quot;Siraj Np&quot;:{&quot;English&quot;:&quot;Siraj Np&quot;},&quot;Nausad Raza&quot;:{&quot;English&quot;:&quot;Nausad Raza&quot;},&quot;O A&quot;:{&quot;English&quot;:&quot;O A&quot;},&quot;Al Al&quot;:{&quot;English&quot;:&quot;Al Al&quot;},&quot;Tasnim Ur Rehman&quot;:{&quot;English&quot;:&quot;Tasnim Ur Rehman&quot;},&quot;muhammed mujibur rahman&quot;:{&quot;English&quot;:&quot;muhammed mujibur rahman&quot;},&quot;Robin Kenyanya&quot;:{&quot;English&quot;:&quot;Robin Kenyanya&quot;},&quot;Test user229&quot;:{&quot;English&quot;:&quot;Test user229&quot;},&quot;Test user227&quot;:{&quot;English&quot;:&quot;Test user227&quot;},&quot;Test user228&quot;:{&quot;English&quot;:&quot;Test user228&quot;},&quot;Test user225&quot;:{&quot;English&quot;:&quot;Test user225&quot;},&quot;Test user226&quot;:{&quot;English&quot;:&quot;Test user226&quot;},&quot;Test user230&quot;:{&quot;English&quot;:&quot;Test user230&quot;},&quot;Test user176&quot;:{&quot;English&quot;:&quot;Test user176&quot;},&quot;Test user194&quot;:{&quot;English&quot;:&quot;Test user194&quot;},&quot;Test user212&quot;:{&quot;English&quot;:&quot;Test user212&quot;},&quot;Test user205&quot;:{&quot;English&quot;:&quot;Test user205&quot;},&quot;Test user213&quot;:{&quot;English&quot;:&quot;Test user213&quot;},&quot;Test user207&quot;:{&quot;English&quot;:&quot;Test user207&quot;},&quot;Test user202&quot;:{&quot;English&quot;:&quot;Test user202&quot;},&quot;Test user191&quot;:{&quot;English&quot;:&quot;Test user191&quot;},&quot;Test user224&quot;:{&quot;English&quot;:&quot;Test user224&quot;},&quot;Test user208&quot;:{&quot;English&quot;:&quot;Test user208&quot;},&quot;Test user214&quot;:{&quot;English&quot;:&quot;Test user214&quot;},&quot;Test user198&quot;:{&quot;English&quot;:&quot;Test user198&quot;},&quot;Test user179&quot;:{&quot;English&quot;:&quot;Test user179&quot;},&quot;Test user177&quot;:{&quot;English&quot;:&quot;Test user177&quot;},&quot;Test user206&quot;:{&quot;English&quot;:&quot;Test user206&quot;},&quot;Test user220&quot;:{&quot;English&quot;:&quot;Test user220&quot;},&quot;Test user200&quot;:{&quot;English&quot;:&quot;Test user200&quot;},&quot;Test user216&quot;:{&quot;English&quot;:&quot;Test user216&quot;},&quot;Test user223&quot;:{&quot;English&quot;:&quot;Test user223&quot;},&quot;Test user210&quot;:{&quot;English&quot;:&quot;Test user210&quot;},&quot;Test user222&quot;:{&quot;English&quot;:&quot;Test user222&quot;},&quot;Test user189&quot;:{&quot;English&quot;:&quot;Test user189&quot;},&quot;Test user217&quot;:{&quot;English&quot;:&quot;Test user217&quot;},&quot;Test user193&quot;:{&quot;English&quot;:&quot;Test user193&quot;},&quot;Test user197&quot;:{&quot;English&quot;:&quot;Test user197&quot;},&quot;Test user221&quot;:{&quot;English&quot;:&quot;Test user221&quot;},&quot;Test user219&quot;:{&quot;English&quot;:&quot;Test user219&quot;},&quot;Test user183&quot;:{&quot;English&quot;:&quot;Test user183&quot;},&quot;Test user196&quot;:{&quot;English&quot;:&quot;Test user196&quot;},&quot;Test user195&quot;:{&quot;English&quot;:&quot;Test user195&quot;},&quot;Test user187&quot;:{&quot;English&quot;:&quot;Test user187&quot;},&quot;Test user203&quot;:{&quot;English&quot;:&quot;Test user203&quot;},&quot;Test user218&quot;:{&quot;English&quot;:&quot;Test user218&quot;},&quot;Test user215&quot;:{&quot;English&quot;:&quot;Test user215&quot;},&quot;Test user185&quot;:{&quot;English&quot;:&quot;Test user185&quot;},&quot;Test user192&quot;:{&quot;English&quot;:&quot;Test user192&quot;},&quot;Test user201&quot;:{&quot;English&quot;:&quot;Test user201&quot;},&quot;Test user209&quot;:{&quot;English&quot;:&quot;Test user209&quot;},&quot;Test user190&quot;:{&quot;English&quot;:&quot;Test user190&quot;},&quot;Test user180&quot;:{&quot;English&quot;:&quot;Test user180&quot;},&quot;Test user211&quot;:{&quot;English&quot;:&quot;Test user211&quot;},&quot;Test user199&quot;:{&quot;English&quot;:&quot;Test user199&quot;},&quot;Test user204&quot;:{&quot;English&quot;:&quot;Test user204&quot;},&quot;Test user188&quot;:{&quot;English&quot;:&quot;Test user188&quot;},&quot;Test user181&quot;:{&quot;English&quot;:&quot;Test user181&quot;},&quot;Test user182&quot;:{&quot;English&quot;:&quot;Test user182&quot;},&quot;Test user144&quot;:{&quot;English&quot;:&quot;Test user144&quot;},&quot;Test user145&quot;:{&quot;English&quot;:&quot;Test user145&quot;},&quot;Test user149&quot;:{&quot;English&quot;:&quot;Test user149&quot;},&quot;Test user143&quot;:{&quot;English&quot;:&quot;Test user143&quot;},&quot;Test user174&quot;:{&quot;English&quot;:&quot;Test user174&quot;},&quot;Test user153&quot;:{&quot;English&quot;:&quot;Test user153&quot;},&quot;Test user156&quot;:{&quot;English&quot;:&quot;Test user156&quot;},&quot;Test user162&quot;:{&quot;English&quot;:&quot;Test user162&quot;},&quot;Test user173&quot;:{&quot;English&quot;:&quot;Test user173&quot;},&quot;Test user160&quot;:{&quot;English&quot;:&quot;Test user160&quot;},&quot;Test user170&quot;:{&quot;English&quot;:&quot;Test user170&quot;},&quot;Test user167&quot;:{&quot;English&quot;:&quot;Test user167&quot;},&quot;Test user147&quot;:{&quot;English&quot;:&quot;Test user147&quot;},&quot;Test user175&quot;:{&quot;English&quot;:&quot;Test user175&quot;},&quot;Test user155&quot;:{&quot;English&quot;:&quot;Test user155&quot;},&quot;Test user141&quot;:{&quot;English&quot;:&quot;Test user141&quot;},&quot;Test user139&quot;:{&quot;English&quot;:&quot;Test user139&quot;},&quot;Test user138&quot;:{&quot;English&quot;:&quot;Test user138&quot;},&quot;Test user178&quot;:{&quot;English&quot;:&quot;Test user178&quot;},&quot;Test user171&quot;:{&quot;English&quot;:&quot;Test user171&quot;},&quot;Test user150&quot;:{&quot;English&quot;:&quot;Test user150&quot;},&quot;Test user158&quot;:{&quot;English&quot;:&quot;Test user158&quot;},&quot;Test user154&quot;:{&quot;English&quot;:&quot;Test user154&quot;},&quot;Test user184&quot;:{&quot;English&quot;:&quot;Test user184&quot;},&quot;Test user140&quot;:{&quot;English&quot;:&quot;Test user140&quot;},&quot;Test user146&quot;:{&quot;English&quot;:&quot;Test user146&quot;},&quot;Test user152&quot;:{&quot;English&quot;:&quot;Test user152&quot;},&quot;Test user165&quot;:{&quot;English&quot;:&quot;Test user165&quot;},&quot;Test user164&quot;:{&quot;English&quot;:&quot;Test user164&quot;},&quot;Test user159&quot;:{&quot;English&quot;:&quot;Test user159&quot;},&quot;Test user169&quot;:{&quot;English&quot;:&quot;Test user169&quot;},&quot;Test user161&quot;:{&quot;English&quot;:&quot;Test user161&quot;},&quot;Test user172&quot;:{&quot;English&quot;:&quot;Test user172&quot;},&quot;Test user168&quot;:{&quot;English&quot;:&quot;Test user168&quot;},&quot;Test user166&quot;:{&quot;English&quot;:&quot;Test user166&quot;},&quot;Test user148&quot;:{&quot;English&quot;:&quot;Test user148&quot;},&quot;Test user137&quot;:{&quot;English&quot;:&quot;Test user137&quot;},&quot;Test user157&quot;:{&quot;English&quot;:&quot;Test user157&quot;},&quot;Test user163&quot;:{&quot;English&quot;:&quot;Test user163&quot;},&quot;Test user186&quot;:{&quot;English&quot;:&quot;Test user186&quot;},&quot;Test user151&quot;:{&quot;English&quot;:&quot;Test user151&quot;},&quot;Test user130&quot;:{&quot;English&quot;:&quot;Test user130&quot;},&quot;Test user131&quot;:{&quot;English&quot;:&quot;Test user131&quot;},&quot;Test user134&quot;:{&quot;English&quot;:&quot;Test user134&quot;},&quot;Test user126&quot;:{&quot;English&quot;:&quot;Test user126&quot;},&quot;Test user127&quot;:{&quot;English&quot;:&quot;Test user127&quot;},&quot;Test user136&quot;:{&quot;English&quot;:&quot;Test user136&quot;},&quot;Test user142&quot;:{&quot;English&quot;:&quot;Test user142&quot;},&quot;Aayush Sharma&quot;:{&quot;English&quot;:&quot;Aayush Sharma&quot;},&quot;Aayush&quot;:{&quot;English&quot;:&quot;Aayush&quot;},&quot;garima Sethi&quot;:{&quot;English&quot;:&quot;garima Sethi&quot;},&quot;hrushikesh Kulkarni&quot;:{&quot;English&quot;:&quot;hrushikesh Kulkarni&quot;},&quot;Diwakar Singh Maurya&quot;:{&quot;English&quot;:&quot;Diwakar Singh Maurya&quot;},&quot;ashish Sharma&quot;:{&quot;English&quot;:&quot;ashish Sharma&quot;},&quot;subhanker Sarker&quot;:{&quot;English&quot;:&quot;subhanker Sarker&quot;},&quot;samridhi Srivastava&quot;:{&quot;English&quot;:&quot;samridhi Srivastava&quot;},&quot;Noor Siddiqui&quot;:{&quot;English&quot;:&quot;Noor Siddiqui&quot;},&quot;Deepak Rana&quot;:{&quot;English&quot;:&quot;Deepak Rana&quot;},&quot;Daryl Fernandes&quot;:{&quot;English&quot;:&quot;Daryl Fernandes&quot;},&quot;Rohit Dubey&quot;:{&quot;English&quot;:&quot;Rohit Dubey&quot;},&quot;Faraz Khan&quot;:{&quot;English&quot;:&quot;Faraz Khan&quot;},&quot;Vijay Ramachandran&quot;:{&quot;English&quot;:&quot;Vijay Ramachandran&quot;},&quot;Outlet Location&quot;:{&quot;English&quot;:&quot;Outlet Location&quot;},&quot;Hello  ${qID://50a65a07-4cd2-496b-9239-b057b5f10bd9}, based on you recent experience with ${qID://e908a6e2-52a0-4efa-b07f-44d23a33220a/1}  situated at  ${qID://ab8d31bc-6716-41fd-8f63-4b8c5e4eb18d/1}&quot;:{&quot;English&quot;:&quot;Hello  ${qID://50a65a07-4cd2-496b-9239-b057b5f10bd9}, based on you recent experience with ${qID://e908a6e2-52a0-4efa-b07f-44d23a33220a/1}  situated at  ${qID://ab8d31bc-6716-41fd-8f63-4b8c5e4eb18d/1}&quot;},&quot;Based on your recent showroom visit experience and interaction, how likely are you to recommend Bajaj Motorcycles to a friend or colleague?&quot;:{&quot;English&quot;:&quot;Based on your recent showroom visit experience and interaction, how likely are you to recommend Bajaj Motorcycles to a friend or colleague?&quot;},&quot;Not at all likely 👎&quot;:{&quot;English&quot;:&quot;Not at all likely 👎&quot;},&quot;👍 Extremely likely&quot;:{&quot;English&quot;:&quot;👍 Extremely likely&quot;},&quot;NA&quot;:{&quot;English&quot;:&quot;NA&quot;},&quot;Based on your showroom visit experience, could you please tell us which of the following would you not recommend? 👎&quot;:{&quot;English&quot;:&quot;Based on your showroom visit experience, could you please tell us which of the following would you not recommend? 👎&quot;},&quot;Based on your showroom visit experience, could you please tell us which of the following would you recommend?  👍&quot;:{&quot;English&quot;:&quot;Based on your showroom visit experience, could you please tell us which of the following would you recommend?  👍&quot;},&quot;Products&quot;:{&quot;English&quot;:&quot;Products&quot;},&quot;Accessibility of showrooms&quot;:{&quot;English&quot;:&quot;Accessibility of showrooms&quot;},&quot;Showroom infrastructure&quot;:{&quot;English&quot;:&quot;Showroom infrastructure&quot;},&quot;Sales team interactions&quot;:{&quot;English&quot;:&quot;Sales team interactions&quot;},&quot;Test ride experience&quot;:{&quot;English&quot;:&quot;Test ride experience&quot;},&quot;Purchase formalities&quot;:{&quot;English&quot;:&quot;Purchase formalities&quot;},&quot;Exchange experience&quot;:{&quot;English&quot;:&quot;Exchange experience&quot;},&quot;Prices, discounts and promotional schemes&quot;:{&quot;English&quot;:&quot;Prices, discounts and promotional schemes&quot;},&quot; : Products&quot;:{&quot;English&quot;:&quot; : Products&quot;},&quot;Products available on display or purchase&quot;:{&quot;English&quot;:&quot;Products available on display or purchase&quot;},&quot;Availability of different colors&quot;:{&quot;English&quot;:&quot;Availability of different colors&quot;},&quot;Range of products under company brand&quot;:{&quot;English&quot;:&quot;Range of products under company brand&quot;},&quot;Product performance actual v/s promised&quot;:{&quot;English&quot;:&quot;Product performance actual v/s promised&quot;},&quot; : Accessibility of showrooms&quot;:{&quot;English&quot;:&quot; : Accessibility of showrooms&quot;},&quot;Distance to showroom&quot;:{&quot;English&quot;:&quot;Distance to showroom&quot;},&quot;Connectivity to location (Ease of Access)&quot;:{&quot;English&quot;:&quot;Connectivity to location (Ease of Access)&quot;},&quot;Ease of identifying showrooms&quot;:{&quot;English&quot;:&quot;Ease of identifying showrooms&quot;},&quot; : Showroom infrastructure&quot;:{&quot;English&quot;:&quot; : Showroom infrastructure&quot;},&quot;Quality of product display/demos&quot;:{&quot;English&quot;:&quot;Quality of product display/demos&quot;},&quot;Availability of parking&quot;:{&quot;English&quot;:&quot;Availability of parking&quot;},&quot;Provision of seating area&quot;:{&quot;English&quot;:&quot;Provision of seating area&quot;},&quot;Provision for refreshments&quot;:{&quot;English&quot;:&quot;Provision for refreshments&quot;},&quot;Cleanliness of showroom&quot;:{&quot;English&quot;:&quot;Cleanliness of showroom&quot;},&quot; : Sales team interactions&quot;:{&quot;English&quot;:&quot; : Sales team interactions&quot;},&quot;Waiting time&quot;:{&quot;English&quot;:&quot;Waiting time&quot;},&quot;Product knowledge of sales staff&quot;:{&quot;English&quot;:&quot;Product knowledge of sales staff&quot;},&quot;Accuracy of information provided&quot;:{&quot;English&quot;:&quot;Accuracy of information provided&quot;},&quot;Friendliness and Professionalism of sales team / Behaviour of Sales Team&quot;:{&quot;English&quot;:&quot;Friendliness and Professionalism of sales team / Behaviour of Sales Team&quot;},&quot;Availability of brochures with product information; use of digital media to showcase products&quot;:{&quot;English&quot;:&quot;Availability of brochures with product information; use of digital media to showcase products&quot;},&quot;Product demonstration&quot;:{&quot;English&quot;:&quot;Product demonstration&quot;},&quot;Call backs with offers (in case visit did not lead to purchase)&quot;:{&quot;English&quot;:&quot;Call backs with offers (in case visit did not lead to purchase)&quot;},&quot;Fluency of sales team in the local language&quot;:{&quot;English&quot;:&quot;Fluency of sales team in the local language&quot;},&quot;Prior awareness of sales team about customer preferences&quot;:{&quot;English&quot;:&quot;Prior awareness of sales team about customer preferences&quot;},&quot; : Test ride experience&quot;:{&quot;English&quot;:&quot; : Test ride experience&quot;},&quot;Availability of slots for test ride&quot;:{&quot;English&quot;:&quot;Availability of slots for test ride&quot;},&quot;Ease of testride booking.&quot;:{&quot;English&quot;:&quot;Ease of testride booking.&quot;},&quot;Quality of route for test ride / Quaility of Test Ride Route&quot;:{&quot;English&quot;:&quot;Quality of route for test ride / Quaility of Test Ride Route&quot;},&quot;Length of test ride&quot;:{&quot;English&quot;:&quot;Length of test ride&quot;},&quot;Quality of bike used for the test ride&quot;:{&quot;English&quot;:&quot;Quality of bike used for the test ride&quot;},&quot; : Purchase formalities&quot;:{&quot;English&quot;:&quot; : Purchase formalities&quot;},&quot;Provision for allocation of specific chassis/ Vehicle based on preference&quot;:{&quot;English&quot;:&quot;Provision for allocation of specific chassis/ Vehicle based on preference&quot;},&quot;Ease of payment and billing; time taken to invoice&quot;:{&quot;English&quot;:&quot;Ease of payment and billing; time taken to invoice&quot;},&quot;Ease of registration procedure; time for RTO approval&quot;:{&quot;English&quot;:&quot;Ease of registration procedure; time for RTO approval&quot;},&quot;Ease of tracking RTO / HSRP process&quot;:{&quot;English&quot;:&quot;Ease of tracking RTO / HSRP process&quot;},&quot;Ease of Insurance procedure (ease of purchase, price etc.)&quot;:{&quot;English&quot;:&quot;Ease of Insurance procedure (ease of purchase, price etc.)&quot;},&quot;Vehicle Delivery promised Vs actual / Time to road actual v/s estimated&quot;:{&quot;English&quot;:&quot;Vehicle Delivery promised Vs actual / Time to road actual v/s estimated&quot;},&quot;One time collection of data / document&quot;:{&quot;English&quot;:&quot;One time collection of data / document&quot;},&quot; : Exchange experience&quot;:{&quot;English&quot;:&quot; : Exchange experience&quot;},&quot;Availability of different broker options for exchange&quot;:{&quot;English&quot;:&quot;Availability of different broker options for exchange&quot;},&quot;Number of documents required&quot;:{&quot;English&quot;:&quot;Number of documents required&quot;},&quot;Exchange value&quot;:{&quot;English&quot;:&quot;Exchange value&quot;},&quot;Experience with exchange related services (pick up of vehicle, document transfer, etc.,)&quot;:{&quot;English&quot;:&quot;Experience with exchange related services (pick up of vehicle, document transfer, etc.,)&quot;},&quot; : Prices, discounts and promotional schemes&quot;:{&quot;English&quot;:&quot; : Prices, discounts and promotional schemes&quot;},&quot;Ex-showroom price / Pricing (Ex Shpowroom &amp; On Road Price)&quot;:{&quot;English&quot;:&quot;Ex-showroom price / Pricing (Ex Shpowroom &amp; On Road Price)&quot;},&quot;Dealer handling charges&quot;:{&quot;English&quot;:&quot;Dealer handling charges&quot;},&quot;Registration fee&quot;:{&quot;English&quot;:&quot;Registration fee&quot;},&quot;Charges for additional services&quot;:{&quot;English&quot;:&quot;Charges for additional services&quot;},&quot;On road price&quot;:{&quot;English&quot;:&quot;On road price&quot;},&quot;Attractiveness of discounts and schemes&quot;:{&quot;English&quot;:&quot;Attractiveness of discounts and schemes&quot;},&quot;Freebies&quot;:{&quot;English&quot;:&quot;Freebies&quot;},&quot;Do you have any other suggestions for us to improve your experience?&quot;:{&quot;English&quot;:&quot;Do you have any other suggestions for us to improve your experience?&quot;},&quot;Would you be willing to participate in a call-back?&quot;:{&quot;English&quot;:&quot;Would you be willing to participate in a call-back?&quot;},&quot;Doc Name&quot;:{&quot;English&quot;:&quot;Doc Name&quot;},&quot;Doc ID&quot;:{&quot;English&quot;:&quot;Doc ID&quot;},&quot;Enquiry Creation Date&quot;:{&quot;English&quot;:&quot;Enquiry Creation Date&quot;},&quot;Enquiry Type&quot;:{&quot;English&quot;:&quot;Enquiry Type&quot;},&quot;Sales Advisor&quot;:{&quot;English&quot;:&quot;Sales Advisor&quot;},&quot;Customer Mobile number&quot;:{&quot;English&quot;:&quot;Customer Mobile number&quot;},&quot;Customer ID&quot;:{&quot;English&quot;:&quot;Customer ID&quot;},&quot;Preferred language&quot;:{&quot;English&quot;:&quot;Preferred language&quot;},&quot;Dealer Code&quot;:{&quot;English&quot;:&quot;Dealer Code&quot;},&quot;Branch Name&quot;:{&quot;English&quot;:&quot;Branch Name&quot;},&quot;Branch Code&quot;:{&quot;English&quot;:&quot;Branch Code&quot;},&quot;Branch Location&quot;:{&quot;English&quot;:&quot;Branch Location&quot;},&quot;Episode&quot;:{&quot;English&quot;:&quot;Episode&quot;},&quot;Business Unit&quot;:{&quot;English&quot;:&quot;Business Unit&quot;},&quot;OTP Verification Trend&quot;:{&quot;English&quot;:&quot;OTP Verification Trend&quot;},&quot;Circle&quot;:{&quot;English&quot;:&quot;Circle&quot;},&quot;Region&quot;:{&quot;English&quot;:&quot;Region&quot;},&quot;ASM&quot;:{&quot;English&quot;:&quot;ASM&quot;},&quot;City&quot;:{&quot;English&quot;:&quot;City&quot;},&quot;Terms  | Disclaimer  | Privacy Policy \u0001Copyright © 2021 Bajaj Auto Ltd. All rights reserved&quot;:{&quot;English&quot;:&quot;Terms  | Disclaimer  | Privacy Policy \u0001Copyright © 2021 Bajaj Auto Ltd. All rights reserved&quot;},&quot;Submit&quot;:{&quot;English&quot;:&quot;Submit&quot;},&quot;Next&quot;:{&quot;English&quot;:&quot;Next&quot;},&quot;Back&quot;:{&quot;English&quot;:&quot;Back&quot;},&quot;Thank You&quot;:{&quot;English&quot;:&quot;Thank You&quot;},&quot;Thank you for your feedback&quot;:{&quot;English&quot;:&quot;Thank you for your feedback&quot;},&quot;Type your answer&quot;:{&quot;English&quot;:&quot;Type your answer&quot;},&quot;Testing&quot;:{&quot;English&quot;:&quot;Testing&quot;},&quot;Thanks for your feedback rahul&quot;:{&quot;English&quot;:&quot;Thanks for your feedback rahul&quot;}}},&quot;query&quot;:&quot;mutation UpdateTranslations($campaignId: ID!, $translations: JSONObject!) {\n  updateTranslations(campaignId: $campaignId, translations: $translations)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.operationName">UpdateTranslations</stringProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation UpdateTranslations($campaignId: ID!, $translations: JSONObject!) {
  updateTranslations(campaignId: $campaignId, translations: $translations)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;translations&quot;:{&quot;0&quot;:{&quot;English&quot;:&quot;0&quot;},&quot;1&quot;:{&quot;English&quot;:&quot;1&quot;},&quot;2&quot;:{&quot;English&quot;:&quot;2&quot;},&quot;3&quot;:{&quot;English&quot;:&quot;3&quot;},&quot;4&quot;:{&quot;English&quot;:&quot;4&quot;},&quot;5&quot;:{&quot;English&quot;:&quot;5&quot;},&quot;6&quot;:{&quot;English&quot;:&quot;6&quot;},&quot;7&quot;:{&quot;English&quot;:&quot;7&quot;},&quot;8&quot;:{&quot;English&quot;:&quot;8&quot;},&quot;9&quot;:{&quot;English&quot;:&quot;9&quot;},&quot;10&quot;:{&quot;English&quot;:&quot;10&quot;},&quot;Phone&quot;:{&quot;English&quot;:&quot;Phone&quot;},&quot;CDMS Response Id&quot;:{&quot;English&quot;:&quot;CDMS Response Id&quot;},&quot;Customer Name&quot;:{&quot;English&quot;:&quot;Customer Name&quot;},&quot;Dealer Name&quot;:{&quot;English&quot;:&quot;Dealer Name&quot;},&quot;TBD&quot;:{&quot;English&quot;:&quot;TBD&quot;},&quot;ahmed ALnaqbi&quot;:{&quot;English&quot;:&quot;ahmed ALnaqbi&quot;},&quot;Ahmed Abdel Hamid&quot;:{&quot;English&quot;:&quot;Ahmed Abdel Hamid&quot;},&quot;S BJ&quot;:{&quot;English&quot;:&quot;S BJ&quot;},&quot;???? ???????&quot;:{&quot;English&quot;:&quot;???? ???????&quot;},&quot;Osama Khairy&quot;:{&quot;English&quot;:&quot;Osama Khairy&quot;},&quot;musthafa dever parambil&quot;:{&quot;English&quot;:&quot;musthafa dever parambil&quot;},&quot;Tiger Noir&quot;:{&quot;English&quot;:&quot;Tiger Noir&quot;},&quot;Salah Abu Yassin&quot;:{&quot;English&quot;:&quot;Salah Abu Yassin&quot;},&quot;Rana AA&quot;:{&quot;English&quot;:&quot;Rana AA&quot;},&quot;Bahig Georgi&quot;:{&quot;English&quot;:&quot;Bahig Georgi&quot;},&quot;AHMED ABOUELENIN&quot;:{&quot;English&quot;:&quot;AHMED ABOUELENIN&quot;},&quot;khalid al-aghbari&quot;:{&quot;English&quot;:&quot;khalid al-aghbari&quot;},&quot;Ijaz Fuadh&quot;:{&quot;English&quot;:&quot;Ijaz Fuadh&quot;},&quot;vijayakumar Duraisamy&quot;:{&quot;English&quot;:&quot;vijayakumar Duraisamy&quot;},&quot;qw Q&quot;:{&quot;English&quot;:&quot;qw Q&quot;},&quot;????? ???&quot;:{&quot;English&quot;:&quot;????? ???&quot;},&quot;Ayoub LT&quot;:{&quot;English&quot;:&quot;Ayoub LT&quot;},&quot;Ranjith Chemmad CHEMMADAN&quot;:{&quot;English&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;},&quot;Akuamoah Boateng&quot;:{&quot;English&quot;:&quot;Akuamoah Boateng&quot;},&quot;Sidhik M N&quot;:{&quot;English&quot;:&quot;Sidhik M N&quot;},&quot;Nashid Kunookkara&quot;:{&quot;English&quot;:&quot;Nashid Kunookkara&quot;},&quot;Sudheesh Karikkad&quot;:{&quot;English&quot;:&quot;Sudheesh Karikkad&quot;},&quot;Ahmed Ali&quot;:{&quot;English&quot;:&quot;Ahmed Ali&quot;},&quot;Ziad Elbermawy&quot;:{&quot;English&quot;:&quot;Ziad Elbermawy&quot;},&quot;Linda Wong&quot;:{&quot;English&quot;:&quot;Linda Wong&quot;},&quot;Ferdous Alam Tohid&quot;:{&quot;English&quot;:&quot;Ferdous Alam Tohid&quot;},&quot;Shiney Roberts&quot;:{&quot;English&quot;:&quot;Shiney Roberts&quot;},&quot;kashif kora&quot;:{&quot;English&quot;:&quot;kashif kora&quot;},&quot;Mukku Sisindri&quot;:{&quot;English&quot;:&quot;Mukku Sisindri&quot;},&quot;Avinash Padmashali&quot;:{&quot;English&quot;:&quot;Avinash Padmashali&quot;},&quot;Rashed Mood&quot;:{&quot;English&quot;:&quot;Rashed Mood&quot;},&quot;Nahir Ahmed&quot;:{&quot;English&quot;:&quot;Nahir Ahmed&quot;},&quot;???? ??????&quot;:{&quot;English&quot;:&quot;???? ??????&quot;},&quot;Mo&apos;men Hussein&quot;:{&quot;English&quot;:&quot;Mo&apos;men Hussein&quot;},&quot;Jalel Thebet&quot;:{&quot;English&quot;:&quot;Jalel Thebet&quot;},&quot;Abdullah Aldhabyani&quot;:{&quot;English&quot;:&quot;Abdullah Aldhabyani&quot;},&quot;Muhammad Ariyan Khan&quot;:{&quot;English&quot;:&quot;Muhammad Ariyan Khan&quot;},&quot;mostafa abdu&quot;:{&quot;English&quot;:&quot;mostafa abdu&quot;},&quot;Manoj Singh Rawat&quot;:{&quot;English&quot;:&quot;Manoj Singh Rawat&quot;},&quot;NEIL&quot;:{&quot;English&quot;:&quot;NEIL&quot;},&quot;Deepak kumar&quot;:{&quot;English&quot;:&quot;Deepak kumar&quot;},&quot;Roland Claudio&quot;:{&quot;English&quot;:&quot;Roland Claudio&quot;},&quot;Simpow Gits&quot;:{&quot;English&quot;:&quot;Simpow Gits&quot;},&quot;Brian Monteiro Takamori&quot;:{&quot;English&quot;:&quot;Brian Monteiro Takamori&quot;},&quot;eecleonavarro&quot;:{&quot;English&quot;:&quot;eecleonavarro&quot;},&quot;Esraa Alshinnawy&quot;:{&quot;English&quot;:&quot;Esraa Alshinnawy&quot;},&quot;??? ??????&quot;:{&quot;English&quot;:&quot;??? ??????&quot;},&quot;elhabbasi yassin&quot;:{&quot;English&quot;:&quot;elhabbasi yassin&quot;},&quot;Ajran Zafar&quot;:{&quot;English&quot;:&quot;Ajran Zafar&quot;},&quot;Inaleila Rambs&quot;:{&quot;English&quot;:&quot;Inaleila Rambs&quot;},&quot;Sean Trevin&quot;:{&quot;English&quot;:&quot;Sean Trevin&quot;},&quot;Kutabala Lawrence&quot;:{&quot;English&quot;:&quot;Kutabala Lawrence&quot;},&quot;mohan patil&quot;:{&quot;English&quot;:&quot;mohan patil&quot;},&quot;RedNinja Hussy&quot;:{&quot;English&quot;:&quot;RedNinja Hussy&quot;},&quot;fire water&quot;:{&quot;English&quot;:&quot;fire water&quot;},&quot;Juliano Mitri&quot;:{&quot;English&quot;:&quot;Juliano Mitri&quot;},&quot;Yaser Abdalla&quot;:{&quot;English&quot;:&quot;Yaser Abdalla&quot;},&quot;?????? ??????? alrihab albarihuh&quot;:{&quot;English&quot;:&quot;?????? ??????? alrihab albarihuh&quot;},&quot;???? ????&quot;:{&quot;English&quot;:&quot;???? ????&quot;},&quot;md kaife&quot;:{&quot;English&quot;:&quot;md kaife&quot;},&quot;YOUSAF ALI&quot;:{&quot;English&quot;:&quot;YOUSAF ALI&quot;},&quot;Sabin Katuwal&quot;:{&quot;English&quot;:&quot;Sabin Katuwal&quot;},&quot;Mustafa khan&quot;:{&quot;English&quot;:&quot;Mustafa khan&quot;},&quot;Abdul Talim&quot;:{&quot;English&quot;:&quot;Abdul Talim&quot;},&quot;Emad Ali&quot;:{&quot;English&quot;:&quot;Emad Ali&quot;},&quot;Hariram Sain&quot;:{&quot;English&quot;:&quot;Hariram Sain&quot;},&quot;Kevin Shyjo&quot;:{&quot;English&quot;:&quot;Kevin Shyjo&quot;},&quot;??? ?????? ??????&quot;:{&quot;English&quot;:&quot;??? ?????? ??????&quot;},&quot;Rowil Mg&quot;:{&quot;English&quot;:&quot;Rowil Mg&quot;},&quot;Rashid ali khan&quot;:{&quot;English&quot;:&quot;Rashid ali khan&quot;},&quot;Samoil Journalist&quot;:{&quot;English&quot;:&quot;Samoil Journalist&quot;},&quot;Hussam elshamy&quot;:{&quot;English&quot;:&quot;Hussam elshamy&quot;},&quot;Salahuddin Ahmed&quot;:{&quot;English&quot;:&quot;Salahuddin Ahmed&quot;},&quot;arun das&quot;:{&quot;English&quot;:&quot;arun das&quot;},&quot;Kishan Pandit786&quot;:{&quot;English&quot;:&quot;Kishan Pandit786&quot;},&quot;seif ahmed&quot;:{&quot;English&quot;:&quot;seif ahmed&quot;},&quot;Kei Takishima&quot;:{&quot;English&quot;:&quot;Kei Takishima&quot;},&quot;awan saab&quot;:{&quot;English&quot;:&quot;awan saab&quot;},&quot;shiya maddy vlog&quot;:{&quot;English&quot;:&quot;shiya maddy vlog&quot;},&quot;Mohammed Rifai&quot;:{&quot;English&quot;:&quot;Mohammed Rifai&quot;},&quot;ayesha s&quot;:{&quot;English&quot;:&quot;ayesha s&quot;},&quot;Bahaa Q&quot;:{&quot;English&quot;:&quot;Bahaa Q&quot;},&quot;Sanil Stansilaus&quot;:{&quot;English&quot;:&quot;Sanil Stansilaus&quot;},&quot;Nishar Ali&quot;:{&quot;English&quot;:&quot;Nishar Ali&quot;},&quot;Ahmed Hamdi&quot;:{&quot;English&quot;:&quot;Ahmed Hamdi&quot;},&quot;Yassine Sarir&quot;:{&quot;English&quot;:&quot;Yassine Sarir&quot;},&quot;Nikhil cm&quot;:{&quot;English&quot;:&quot;Nikhil cm&quot;},&quot;Ahmed Khamees&quot;:{&quot;English&quot;:&quot;Ahmed Khamees&quot;},&quot;vishnu devarajan&quot;:{&quot;English&quot;:&quot;vishnu devarajan&quot;},&quot;Rafael Jr Manuel&quot;:{&quot;English&quot;:&quot;Rafael Jr Manuel&quot;},&quot;Hammam&quot;:{&quot;English&quot;:&quot;Hammam&quot;},&quot;Sabu Xaviour&quot;:{&quot;English&quot;:&quot;Sabu Xaviour&quot;},&quot;arman ali ali&quot;:{&quot;English&quot;:&quot;arman ali ali&quot;},&quot;salah abdelraouf&quot;:{&quot;English&quot;:&quot;salah abdelraouf&quot;},&quot;Ahmed Soliman&quot;:{&quot;English&quot;:&quot;Ahmed Soliman&quot;},&quot;??????? ??????? ??? ???????&quot;:{&quot;English&quot;:&quot;??????? ??????? ??? ???????&quot;},&quot;Ayman Alatrash&quot;:{&quot;English&quot;:&quot;Ayman Alatrash&quot;},&quot;mohamed ramadan&quot;:{&quot;English&quot;:&quot;mohamed ramadan&quot;},&quot;karim nada&quot;:{&quot;English&quot;:&quot;karim nada&quot;},&quot;Ahamad Fadl ala 111&quot;:{&quot;English&quot;:&quot;Ahamad Fadl ala 111&quot;},&quot;Rida Elyaakkoubi&quot;:{&quot;English&quot;:&quot;Rida Elyaakkoubi&quot;},&quot;scymark palmerahyï¿½hjdhffah b b&quot;:{&quot;English&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;},&quot;Quadeer Khan&quot;:{&quot;English&quot;:&quot;Quadeer Khan&quot;},&quot;YASAR ARAFATH M.K&quot;:{&quot;English&quot;:&quot;YASAR ARAFATH M.K&quot;},&quot;ahmed zaki&quot;:{&quot;English&quot;:&quot;ahmed zaki&quot;},&quot;Mohammad Saeed&quot;:{&quot;English&quot;:&quot;Mohammad Saeed&quot;},&quot;Ameer Thaj&quot;:{&quot;English&quot;:&quot;Ameer Thaj&quot;},&quot;Jahangir Alam Alam&quot;:{&quot;English&quot;:&quot;Jahangir Alam Alam&quot;},&quot;Shajahan hameed&quot;:{&quot;English&quot;:&quot;Shajahan hameed&quot;},&quot;Siraj Np&quot;:{&quot;English&quot;:&quot;Siraj Np&quot;},&quot;Nausad Raza&quot;:{&quot;English&quot;:&quot;Nausad Raza&quot;},&quot;O A&quot;:{&quot;English&quot;:&quot;O A&quot;},&quot;Al Al&quot;:{&quot;English&quot;:&quot;Al Al&quot;},&quot;Tasnim Ur Rehman&quot;:{&quot;English&quot;:&quot;Tasnim Ur Rehman&quot;},&quot;muhammed mujibur rahman&quot;:{&quot;English&quot;:&quot;muhammed mujibur rahman&quot;},&quot;Robin Kenyanya&quot;:{&quot;English&quot;:&quot;Robin Kenyanya&quot;},&quot;Test user229&quot;:{&quot;English&quot;:&quot;Test user229&quot;},&quot;Test user227&quot;:{&quot;English&quot;:&quot;Test user227&quot;},&quot;Test user228&quot;:{&quot;English&quot;:&quot;Test user228&quot;},&quot;Test user225&quot;:{&quot;English&quot;:&quot;Test user225&quot;},&quot;Test user226&quot;:{&quot;English&quot;:&quot;Test user226&quot;},&quot;Test user230&quot;:{&quot;English&quot;:&quot;Test user230&quot;},&quot;Test user176&quot;:{&quot;English&quot;:&quot;Test user176&quot;},&quot;Test user194&quot;:{&quot;English&quot;:&quot;Test user194&quot;},&quot;Test user212&quot;:{&quot;English&quot;:&quot;Test user212&quot;},&quot;Test user205&quot;:{&quot;English&quot;:&quot;Test user205&quot;},&quot;Test user213&quot;:{&quot;English&quot;:&quot;Test user213&quot;},&quot;Test user207&quot;:{&quot;English&quot;:&quot;Test user207&quot;},&quot;Test user202&quot;:{&quot;English&quot;:&quot;Test user202&quot;},&quot;Test user191&quot;:{&quot;English&quot;:&quot;Test user191&quot;},&quot;Test user224&quot;:{&quot;English&quot;:&quot;Test user224&quot;},&quot;Test user208&quot;:{&quot;English&quot;:&quot;Test user208&quot;},&quot;Test user214&quot;:{&quot;English&quot;:&quot;Test user214&quot;},&quot;Test user198&quot;:{&quot;English&quot;:&quot;Test user198&quot;},&quot;Test user179&quot;:{&quot;English&quot;:&quot;Test user179&quot;},&quot;Test user177&quot;:{&quot;English&quot;:&quot;Test user177&quot;},&quot;Test user206&quot;:{&quot;English&quot;:&quot;Test user206&quot;},&quot;Test user220&quot;:{&quot;English&quot;:&quot;Test user220&quot;},&quot;Test user200&quot;:{&quot;English&quot;:&quot;Test user200&quot;},&quot;Test user216&quot;:{&quot;English&quot;:&quot;Test user216&quot;},&quot;Test user223&quot;:{&quot;English&quot;:&quot;Test user223&quot;},&quot;Test user210&quot;:{&quot;English&quot;:&quot;Test user210&quot;},&quot;Test user222&quot;:{&quot;English&quot;:&quot;Test user222&quot;},&quot;Test user189&quot;:{&quot;English&quot;:&quot;Test user189&quot;},&quot;Test user217&quot;:{&quot;English&quot;:&quot;Test user217&quot;},&quot;Test user193&quot;:{&quot;English&quot;:&quot;Test user193&quot;},&quot;Test user197&quot;:{&quot;English&quot;:&quot;Test user197&quot;},&quot;Test user221&quot;:{&quot;English&quot;:&quot;Test user221&quot;},&quot;Test user219&quot;:{&quot;English&quot;:&quot;Test user219&quot;},&quot;Test user183&quot;:{&quot;English&quot;:&quot;Test user183&quot;},&quot;Test user196&quot;:{&quot;English&quot;:&quot;Test user196&quot;},&quot;Test user195&quot;:{&quot;English&quot;:&quot;Test user195&quot;},&quot;Test user187&quot;:{&quot;English&quot;:&quot;Test user187&quot;},&quot;Test user203&quot;:{&quot;English&quot;:&quot;Test user203&quot;},&quot;Test user218&quot;:{&quot;English&quot;:&quot;Test user218&quot;},&quot;Test user215&quot;:{&quot;English&quot;:&quot;Test user215&quot;},&quot;Test user185&quot;:{&quot;English&quot;:&quot;Test user185&quot;},&quot;Test user192&quot;:{&quot;English&quot;:&quot;Test user192&quot;},&quot;Test user201&quot;:{&quot;English&quot;:&quot;Test user201&quot;},&quot;Test user209&quot;:{&quot;English&quot;:&quot;Test user209&quot;},&quot;Test user190&quot;:{&quot;English&quot;:&quot;Test user190&quot;},&quot;Test user180&quot;:{&quot;English&quot;:&quot;Test user180&quot;},&quot;Test user211&quot;:{&quot;English&quot;:&quot;Test user211&quot;},&quot;Test user199&quot;:{&quot;English&quot;:&quot;Test user199&quot;},&quot;Test user204&quot;:{&quot;English&quot;:&quot;Test user204&quot;},&quot;Test user188&quot;:{&quot;English&quot;:&quot;Test user188&quot;},&quot;Test user181&quot;:{&quot;English&quot;:&quot;Test user181&quot;},&quot;Test user182&quot;:{&quot;English&quot;:&quot;Test user182&quot;},&quot;Test user144&quot;:{&quot;English&quot;:&quot;Test user144&quot;},&quot;Test user145&quot;:{&quot;English&quot;:&quot;Test user145&quot;},&quot;Test user149&quot;:{&quot;English&quot;:&quot;Test user149&quot;},&quot;Test user143&quot;:{&quot;English&quot;:&quot;Test user143&quot;},&quot;Test user174&quot;:{&quot;English&quot;:&quot;Test user174&quot;},&quot;Test user153&quot;:{&quot;English&quot;:&quot;Test user153&quot;},&quot;Test user156&quot;:{&quot;English&quot;:&quot;Test user156&quot;},&quot;Test user162&quot;:{&quot;English&quot;:&quot;Test user162&quot;},&quot;Test user173&quot;:{&quot;English&quot;:&quot;Test user173&quot;},&quot;Test user160&quot;:{&quot;English&quot;:&quot;Test user160&quot;},&quot;Test user170&quot;:{&quot;English&quot;:&quot;Test user170&quot;},&quot;Test user167&quot;:{&quot;English&quot;:&quot;Test user167&quot;},&quot;Test user147&quot;:{&quot;English&quot;:&quot;Test user147&quot;},&quot;Test user175&quot;:{&quot;English&quot;:&quot;Test user175&quot;},&quot;Test user155&quot;:{&quot;English&quot;:&quot;Test user155&quot;},&quot;Test user141&quot;:{&quot;English&quot;:&quot;Test user141&quot;},&quot;Test user139&quot;:{&quot;English&quot;:&quot;Test user139&quot;},&quot;Test user138&quot;:{&quot;English&quot;:&quot;Test user138&quot;},&quot;Test user178&quot;:{&quot;English&quot;:&quot;Test user178&quot;},&quot;Test user171&quot;:{&quot;English&quot;:&quot;Test user171&quot;},&quot;Test user150&quot;:{&quot;English&quot;:&quot;Test user150&quot;},&quot;Test user158&quot;:{&quot;English&quot;:&quot;Test user158&quot;},&quot;Test user154&quot;:{&quot;English&quot;:&quot;Test user154&quot;},&quot;Test user184&quot;:{&quot;English&quot;:&quot;Test user184&quot;},&quot;Test user140&quot;:{&quot;English&quot;:&quot;Test user140&quot;},&quot;Test user146&quot;:{&quot;English&quot;:&quot;Test user146&quot;},&quot;Test user152&quot;:{&quot;English&quot;:&quot;Test user152&quot;},&quot;Test user165&quot;:{&quot;English&quot;:&quot;Test user165&quot;},&quot;Test user164&quot;:{&quot;English&quot;:&quot;Test user164&quot;},&quot;Test user159&quot;:{&quot;English&quot;:&quot;Test user159&quot;},&quot;Test user169&quot;:{&quot;English&quot;:&quot;Test user169&quot;},&quot;Test user161&quot;:{&quot;English&quot;:&quot;Test user161&quot;},&quot;Test user172&quot;:{&quot;English&quot;:&quot;Test user172&quot;},&quot;Test user168&quot;:{&quot;English&quot;:&quot;Test user168&quot;},&quot;Test user166&quot;:{&quot;English&quot;:&quot;Test user166&quot;},&quot;Test user148&quot;:{&quot;English&quot;:&quot;Test user148&quot;},&quot;Test user137&quot;:{&quot;English&quot;:&quot;Test user137&quot;},&quot;Test user157&quot;:{&quot;English&quot;:&quot;Test user157&quot;},&quot;Test user163&quot;:{&quot;English&quot;:&quot;Test user163&quot;},&quot;Test user186&quot;:{&quot;English&quot;:&quot;Test user186&quot;},&quot;Test user151&quot;:{&quot;English&quot;:&quot;Test user151&quot;},&quot;Test user130&quot;:{&quot;English&quot;:&quot;Test user130&quot;},&quot;Test user131&quot;:{&quot;English&quot;:&quot;Test user131&quot;},&quot;Test user134&quot;:{&quot;English&quot;:&quot;Test user134&quot;},&quot;Test user126&quot;:{&quot;English&quot;:&quot;Test user126&quot;},&quot;Test user127&quot;:{&quot;English&quot;:&quot;Test user127&quot;},&quot;Test user136&quot;:{&quot;English&quot;:&quot;Test user136&quot;},&quot;Test user142&quot;:{&quot;English&quot;:&quot;Test user142&quot;},&quot;Aayush Sharma&quot;:{&quot;English&quot;:&quot;Aayush Sharma&quot;},&quot;Aayush&quot;:{&quot;English&quot;:&quot;Aayush&quot;},&quot;garima Sethi&quot;:{&quot;English&quot;:&quot;garima Sethi&quot;},&quot;hrushikesh Kulkarni&quot;:{&quot;English&quot;:&quot;hrushikesh Kulkarni&quot;},&quot;Diwakar Singh Maurya&quot;:{&quot;English&quot;:&quot;Diwakar Singh Maurya&quot;},&quot;ashish Sharma&quot;:{&quot;English&quot;:&quot;ashish Sharma&quot;},&quot;subhanker Sarker&quot;:{&quot;English&quot;:&quot;subhanker Sarker&quot;},&quot;samridhi Srivastava&quot;:{&quot;English&quot;:&quot;samridhi Srivastava&quot;},&quot;Noor Siddiqui&quot;:{&quot;English&quot;:&quot;Noor Siddiqui&quot;},&quot;Deepak Rana&quot;:{&quot;English&quot;:&quot;Deepak Rana&quot;},&quot;Daryl Fernandes&quot;:{&quot;English&quot;:&quot;Daryl Fernandes&quot;},&quot;Rohit Dubey&quot;:{&quot;English&quot;:&quot;Rohit Dubey&quot;},&quot;Faraz Khan&quot;:{&quot;English&quot;:&quot;Faraz Khan&quot;},&quot;Vijay Ramachandran&quot;:{&quot;English&quot;:&quot;Vijay Ramachandran&quot;},&quot;Outlet Location&quot;:{&quot;English&quot;:&quot;Outlet Location&quot;},&quot;Hello  ${qID://50a65a07-4cd2-496b-9239-b057b5f10bd9}, based on you recent experience with ${qID://e908a6e2-52a0-4efa-b07f-44d23a33220a/1}  situated at  ${qID://ab8d31bc-6716-41fd-8f63-4b8c5e4eb18d/1}&quot;:{&quot;English&quot;:&quot;Hello  ${qID://50a65a07-4cd2-496b-9239-b057b5f10bd9}, based on you recent experience with ${qID://e908a6e2-52a0-4efa-b07f-44d23a33220a/1}  situated at  ${qID://ab8d31bc-6716-41fd-8f63-4b8c5e4eb18d/1}&quot;},&quot;Based on your recent showroom visit experience and interaction, how likely are you to recommend Bajaj Motorcycles to a friend or colleague?&quot;:{&quot;English&quot;:&quot;Based on your recent showroom visit experience and interaction, how likely are you to recommend Bajaj Motorcycles to a friend or colleague?&quot;},&quot;Not at all likely 👎&quot;:{&quot;English&quot;:&quot;Not at all likely 👎&quot;},&quot;👍 Extremely likely&quot;:{&quot;English&quot;:&quot;👍 Extremely likely&quot;},&quot;NA&quot;:{&quot;English&quot;:&quot;NA&quot;},&quot;Based on your showroom visit experience, could you please tell us which of the following would you not recommend? 👎&quot;:{&quot;English&quot;:&quot;Based on your showroom visit experience, could you please tell us which of the following would you not recommend? 👎&quot;},&quot;Based on your showroom visit experience, could you please tell us which of the following would you recommend?  👍&quot;:{&quot;English&quot;:&quot;Based on your showroom visit experience, could you please tell us which of the following would you recommend?  👍&quot;},&quot;Products&quot;:{&quot;English&quot;:&quot;Products&quot;},&quot;Accessibility of showrooms&quot;:{&quot;English&quot;:&quot;Accessibility of showrooms&quot;},&quot;Showroom infrastructure&quot;:{&quot;English&quot;:&quot;Showroom infrastructure&quot;},&quot;Sales team interactions&quot;:{&quot;English&quot;:&quot;Sales team interactions&quot;},&quot;Test ride experience&quot;:{&quot;English&quot;:&quot;Test ride experience&quot;},&quot;Purchase formalities&quot;:{&quot;English&quot;:&quot;Purchase formalities&quot;},&quot;Exchange experience&quot;:{&quot;English&quot;:&quot;Exchange experience&quot;},&quot;Prices, discounts and promotional schemes&quot;:{&quot;English&quot;:&quot;Prices, discounts and promotional schemes&quot;},&quot; : Products&quot;:{&quot;English&quot;:&quot; : Products&quot;},&quot;Products available on display or purchase&quot;:{&quot;English&quot;:&quot;Products available on display or purchase&quot;},&quot;Availability of different colors&quot;:{&quot;English&quot;:&quot;Availability of different colors&quot;},&quot;Range of products under company brand&quot;:{&quot;English&quot;:&quot;Range of products under company brand&quot;},&quot;Product performance actual v/s promised&quot;:{&quot;English&quot;:&quot;Product performance actual v/s promised&quot;},&quot; : Accessibility of showrooms&quot;:{&quot;English&quot;:&quot; : Accessibility of showrooms&quot;},&quot;Distance to showroom&quot;:{&quot;English&quot;:&quot;Distance to showroom&quot;},&quot;Connectivity to location (Ease of Access)&quot;:{&quot;English&quot;:&quot;Connectivity to location (Ease of Access)&quot;},&quot;Ease of identifying showrooms&quot;:{&quot;English&quot;:&quot;Ease of identifying showrooms&quot;},&quot; : Showroom infrastructure&quot;:{&quot;English&quot;:&quot; : Showroom infrastructure&quot;},&quot;Quality of product display/demos&quot;:{&quot;English&quot;:&quot;Quality of product display/demos&quot;},&quot;Availability of parking&quot;:{&quot;English&quot;:&quot;Availability of parking&quot;},&quot;Provision of seating area&quot;:{&quot;English&quot;:&quot;Provision of seating area&quot;},&quot;Provision for refreshments&quot;:{&quot;English&quot;:&quot;Provision for refreshments&quot;},&quot;Cleanliness of showroom&quot;:{&quot;English&quot;:&quot;Cleanliness of showroom&quot;},&quot; : Sales team interactions&quot;:{&quot;English&quot;:&quot; : Sales team interactions&quot;},&quot;Waiting time&quot;:{&quot;English&quot;:&quot;Waiting time&quot;},&quot;Product knowledge of sales staff&quot;:{&quot;English&quot;:&quot;Product knowledge of sales staff&quot;},&quot;Accuracy of information provided&quot;:{&quot;English&quot;:&quot;Accuracy of information provided&quot;},&quot;Friendliness and Professionalism of sales team / Behaviour of Sales Team&quot;:{&quot;English&quot;:&quot;Friendliness and Professionalism of sales team / Behaviour of Sales Team&quot;},&quot;Availability of brochures with product information; use of digital media to showcase products&quot;:{&quot;English&quot;:&quot;Availability of brochures with product information; use of digital media to showcase products&quot;},&quot;Product demonstration&quot;:{&quot;English&quot;:&quot;Product demonstration&quot;},&quot;Call backs with offers (in case visit did not lead to purchase)&quot;:{&quot;English&quot;:&quot;Call backs with offers (in case visit did not lead to purchase)&quot;},&quot;Fluency of sales team in the local language&quot;:{&quot;English&quot;:&quot;Fluency of sales team in the local language&quot;},&quot;Prior awareness of sales team about customer preferences&quot;:{&quot;English&quot;:&quot;Prior awareness of sales team about customer preferences&quot;},&quot; : Test ride experience&quot;:{&quot;English&quot;:&quot; : Test ride experience&quot;},&quot;Availability of slots for test ride&quot;:{&quot;English&quot;:&quot;Availability of slots for test ride&quot;},&quot;Ease of testride booking.&quot;:{&quot;English&quot;:&quot;Ease of testride booking.&quot;},&quot;Quality of route for test ride / Quaility of Test Ride Route&quot;:{&quot;English&quot;:&quot;Quality of route for test ride / Quaility of Test Ride Route&quot;},&quot;Length of test ride&quot;:{&quot;English&quot;:&quot;Length of test ride&quot;},&quot;Quality of bike used for the test ride&quot;:{&quot;English&quot;:&quot;Quality of bike used for the test ride&quot;},&quot; : Purchase formalities&quot;:{&quot;English&quot;:&quot; : Purchase formalities&quot;},&quot;Provision for allocation of specific chassis/ Vehicle based on preference&quot;:{&quot;English&quot;:&quot;Provision for allocation of specific chassis/ Vehicle based on preference&quot;},&quot;Ease of payment and billing; time taken to invoice&quot;:{&quot;English&quot;:&quot;Ease of payment and billing; time taken to invoice&quot;},&quot;Ease of registration procedure; time for RTO approval&quot;:{&quot;English&quot;:&quot;Ease of registration procedure; time for RTO approval&quot;},&quot;Ease of tracking RTO / HSRP process&quot;:{&quot;English&quot;:&quot;Ease of tracking RTO / HSRP process&quot;},&quot;Ease of Insurance procedure (ease of purchase, price etc.)&quot;:{&quot;English&quot;:&quot;Ease of Insurance procedure (ease of purchase, price etc.)&quot;},&quot;Vehicle Delivery promised Vs actual / Time to road actual v/s estimated&quot;:{&quot;English&quot;:&quot;Vehicle Delivery promised Vs actual / Time to road actual v/s estimated&quot;},&quot;One time collection of data / document&quot;:{&quot;English&quot;:&quot;One time collection of data / document&quot;},&quot; : Exchange experience&quot;:{&quot;English&quot;:&quot; : Exchange experience&quot;},&quot;Availability of different broker options for exchange&quot;:{&quot;English&quot;:&quot;Availability of different broker options for exchange&quot;},&quot;Number of documents required&quot;:{&quot;English&quot;:&quot;Number of documents required&quot;},&quot;Exchange value&quot;:{&quot;English&quot;:&quot;Exchange value&quot;},&quot;Experience with exchange related services (pick up of vehicle, document transfer, etc.,)&quot;:{&quot;English&quot;:&quot;Experience with exchange related services (pick up of vehicle, document transfer, etc.,)&quot;},&quot; : Prices, discounts and promotional schemes&quot;:{&quot;English&quot;:&quot; : Prices, discounts and promotional schemes&quot;},&quot;Ex-showroom price / Pricing (Ex Shpowroom &amp; On Road Price)&quot;:{&quot;English&quot;:&quot;Ex-showroom price / Pricing (Ex Shpowroom &amp; On Road Price)&quot;},&quot;Dealer handling charges&quot;:{&quot;English&quot;:&quot;Dealer handling charges&quot;},&quot;Registration fee&quot;:{&quot;English&quot;:&quot;Registration fee&quot;},&quot;Charges for additional services&quot;:{&quot;English&quot;:&quot;Charges for additional services&quot;},&quot;On road price&quot;:{&quot;English&quot;:&quot;On road price&quot;},&quot;Attractiveness of discounts and schemes&quot;:{&quot;English&quot;:&quot;Attractiveness of discounts and schemes&quot;},&quot;Freebies&quot;:{&quot;English&quot;:&quot;Freebies&quot;},&quot;Do you have any other suggestions for us to improve your experience?&quot;:{&quot;English&quot;:&quot;Do you have any other suggestions for us to improve your experience?&quot;},&quot;Would you be willing to participate in a call-back?&quot;:{&quot;English&quot;:&quot;Would you be willing to participate in a call-back?&quot;},&quot;Doc Name&quot;:{&quot;English&quot;:&quot;Doc Name&quot;},&quot;Doc ID&quot;:{&quot;English&quot;:&quot;Doc ID&quot;},&quot;Enquiry Creation Date&quot;:{&quot;English&quot;:&quot;Enquiry Creation Date&quot;},&quot;Enquiry Type&quot;:{&quot;English&quot;:&quot;Enquiry Type&quot;},&quot;Sales Advisor&quot;:{&quot;English&quot;:&quot;Sales Advisor&quot;},&quot;Customer Mobile number&quot;:{&quot;English&quot;:&quot;Customer Mobile number&quot;},&quot;Customer ID&quot;:{&quot;English&quot;:&quot;Customer ID&quot;},&quot;Preferred language&quot;:{&quot;English&quot;:&quot;Preferred language&quot;},&quot;Dealer Code&quot;:{&quot;English&quot;:&quot;Dealer Code&quot;},&quot;Branch Name&quot;:{&quot;English&quot;:&quot;Branch Name&quot;},&quot;Branch Code&quot;:{&quot;English&quot;:&quot;Branch Code&quot;},&quot;Branch Location&quot;:{&quot;English&quot;:&quot;Branch Location&quot;},&quot;Episode&quot;:{&quot;English&quot;:&quot;Episode&quot;},&quot;Business Unit&quot;:{&quot;English&quot;:&quot;Business Unit&quot;},&quot;OTP Verification Trend&quot;:{&quot;English&quot;:&quot;OTP Verification Trend&quot;},&quot;Circle&quot;:{&quot;English&quot;:&quot;Circle&quot;},&quot;Region&quot;:{&quot;English&quot;:&quot;Region&quot;},&quot;ASM&quot;:{&quot;English&quot;:&quot;ASM&quot;},&quot;City&quot;:{&quot;English&quot;:&quot;City&quot;},&quot;Terms  | Disclaimer  | Privacy Policy \u0001Copyright © 2021 Bajaj Auto Ltd. All rights reserved&quot;:{&quot;English&quot;:&quot;Terms  | Disclaimer  | Privacy Policy \u0001Copyright © 2021 Bajaj Auto Ltd. All rights reserved&quot;},&quot;Submit&quot;:{&quot;English&quot;:&quot;Submit&quot;},&quot;Next&quot;:{&quot;English&quot;:&quot;Next&quot;},&quot;Back&quot;:{&quot;English&quot;:&quot;Back&quot;},&quot;Thank You&quot;:{&quot;English&quot;:&quot;Thank You&quot;},&quot;Thank you for your feedback&quot;:{&quot;English&quot;:&quot;Thank you for your feedback&quot;},&quot;Type your answer&quot;:{&quot;English&quot;:&quot;Type your answer&quot;},&quot;Testing&quot;:{&quot;English&quot;:&quot;Testing&quot;},&quot;Thanks for your feedback rahul&quot;:{&quot;English&quot;:&quot;Thanks for your feedback rahul&quot;}}}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="716 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    campaignTitle\n    translations\n    surveyView\n    languages\n    colourTheme {\n      theme\n      themeName\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    campaignTitle
    translations
    surveyView
    languages
    colourTheme {
      theme
      themeName
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="717 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    name\n    campaignTitle\n    logo\n    languages\n    colourTheme {\n      theme\n      themeName\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    name
    campaignTitle
    logo
    languages
    colourTheme {
      theme
      themeName
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="719 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SaveCampaignTheme&quot;,&quot;variables&quot;:{&quot;theme&quot;:null,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;themeName&quot;:&quot;LIGHT&quot;},&quot;query&quot;:&quot;mutation SaveCampaignTheme($campaignId: ID!, $themeName: String!, $theme: JSON) {\n  saveCampaignTheme(campaignId: $campaignId, themeName: $themeName, theme: $theme)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.operationName">SaveCampaignTheme</stringProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation SaveCampaignTheme($campaignId: ID!, $themeName: String!, $theme: JSON) {
  saveCampaignTheme(campaignId: $campaignId, themeName: $themeName, theme: $theme)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;theme&quot;:null,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;themeName&quot;:&quot;LIGHT&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="720 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;surveyView&quot;:&quot;NORMAL&quot;,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $surveyView: String) {\n  updateCampaignSettings(campaignId: $campaignId, surveyView: $surveyView)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $surveyView: String) {
  updateCampaignSettings(campaignId: $campaignId, surveyView: $surveyView)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;surveyView&quot;:&quot;NORMAL&quot;,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="726 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    distributionConfig {\n      id\n      open_isEnabled\n      open_allowDuplicates\n      open_duplicateIdentifier\n      unique_isEnabled\n      unique_allowDuplicates\n      unique_duplicateIdentifier\n      campaignId\n      restrictToOneDevice\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    distributionConfig {
      id
      open_isEnabled
      open_allowDuplicates
      open_duplicateIdentifier
      unique_isEnabled
      unique_allowDuplicates
      unique_duplicateIdentifier
      campaignId
      restrictToOneDevice
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="728 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    organizationId\n    thankyouPageSettings\n    thankyouPhoto\n    thankyouPhotoLink\n    questionnaire\n    autoStartOverInSec\n    metricConfig {\n      id\n      rangeStart\n      rangeEnd\n      type\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    organizationId
    thankyouPageSettings
    thankyouPhoto
    thankyouPhotoLink
    questionnaire
    autoStartOverInSec
    metricConfig {
      id
      rangeStart
      rangeEnd
      type
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="729 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    metricConfig {\n      rangeStart\n      rangeEnd\n      type\n      __typename\n    }\n    questionnaire\n    enableSendingNotifications\n    distributionTemplates {\n      id\n      provider\n      templateName\n      configuration\n      __typename\n    }\n    acknowledgements {\n      templateId\n      logicInCodeForm\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    metricConfig {
      rangeStart
      rangeEnd
      type
      __typename
    }
    questionnaire
    enableSendingNotifications
    distributionTemplates {
      id
      provider
      templateName
      configuration
      __typename
    }
    acknowledgements {
      templateId
      logicInCodeForm
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="731 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;thankyouPageSettings&quot;:[{&quot;baseQuestionId&quot;:&quot;&quot;,&quot;comparisonOperator1&quot;:&quot;&quot;,&quot;comparisonOperator2&quot;:&quot;&quot;,&quot;decisionAnswer1&quot;:&quot;&quot;,&quot;decisionAnswer2&quot;:&quot;&quot;,&quot;message&quot;:&quot;Thanks for your feedback rahul&quot;}]},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $thankyouPageSettings: [JSONObject!]!, $autoStartOverInSec: Int) {\n  updateCampaignThankyouSettings(campaignId: $campaignId, thankyouPageSettings: $thankyouPageSettings, autoStartOverInSec: $autoStartOverInSec)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $thankyouPageSettings: [JSONObject!]!, $autoStartOverInSec: Int) {
  updateCampaignThankyouSettings(campaignId: $campaignId, thankyouPageSettings: $thankyouPageSettings, autoStartOverInSec: $autoStartOverInSec)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;thankyouPageSettings&quot;:[{&quot;baseQuestionId&quot;:&quot;&quot;,&quot;comparisonOperator1&quot;:&quot;&quot;,&quot;comparisonOperator2&quot;:&quot;&quot;,&quot;decisionAnswer1&quot;:&quot;&quot;,&quot;decisionAnswer2&quot;:&quot;&quot;,&quot;message&quot;:&quot;Thanks for your feedback rahul&quot;}]}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="732 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;mutation ($campaignId: String!) {\n  deleteThankyouPhoto(campaignId: $campaignId)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: String!) {
  deleteThankyouPhoto(campaignId: $campaignId)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="733 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;mutation ($campaignId: String!) {\n  deleteThankyouPhotoLink(campaignId: $campaignId)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: String!) {
  deleteThankyouPhotoLink(campaignId: $campaignId)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="734 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    questionsVisible\n    questionnaire\n    filtersVisibility\n    chartsVisibility\n    responseRateCalculation\n    tabsConfiguration {\n      tabName\n      nameToShow\n      status\n      __typename\n    }\n    allTabs {\n      tabName\n      __typename\n    }\n    huddleConfiguration\n    callerConfiguration\n    enablePreCalculation\n    isNonRespondedFieldsHiddenInResponsePopup\n    isNPSmeanVisibleInOverview\n    wordCloudVisibility\n    enableBajajSpecificFeature\n    defaultDateFilterRange\n    chartsConfiguration {\n      countries {\n        code\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    questionsVisible
    questionnaire
    filtersVisibility
    chartsVisibility
    responseRateCalculation
    tabsConfiguration {
      tabName
      nameToShow
      status
      __typename
    }
    allTabs {
      tabName
      __typename
    }
    huddleConfiguration
    callerConfiguration
    enablePreCalculation
    isNonRespondedFieldsHiddenInResponsePopup
    isNPSmeanVisibleInOverview
    wordCloudVisibility
    enableBajajSpecificFeature
    defaultDateFilterRange
    chartsConfiguration {
      countries {
        code
        __typename
      }
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="736 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;filterSettings&quot;:{},&quot;chartSettings&quot;:{},&quot;questionsVisible&quot;:{},&quot;responseRateCalculation&quot;:&quot;DELIVERED&quot;,&quot;defaultDateFilterRange&quot;:&quot;Last 30 days&quot;,&quot;chartsConfiguration&quot;:{&quot;countries&quot;:null},&quot;enableBajajSpecificFeature&quot;:false},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $filterSettings: JSONObject!, $chartSettings: JSONObject!, $questionsVisible: JSONObject, $responseRateCalculation: ResponseRateCalculation, $defaultDateFilterRange: String, $chartsConfiguration: ChartsConfigurationInput, $enableBajajSpecificFeature: Boolean) {\n  updateReportConfiguration(campaignId: $campaignId, filterSettings: $filterSettings, chartSettings: $chartSettings, questionsVisible: $questionsVisible, responseRateCalculation: $responseRateCalculation, defaultDateFilterRange: $defaultDateFilterRange, chartsConfiguration: $chartsConfiguration, enableBajajSpecificFeature: $enableBajajSpecificFeature)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $filterSettings: JSONObject!, $chartSettings: JSONObject!, $questionsVisible: JSONObject, $responseRateCalculation: ResponseRateCalculation, $defaultDateFilterRange: String, $chartsConfiguration: ChartsConfigurationInput, $enableBajajSpecificFeature: Boolean) {
  updateReportConfiguration(campaignId: $campaignId, filterSettings: $filterSettings, chartSettings: $chartSettings, questionsVisible: $questionsVisible, responseRateCalculation: $responseRateCalculation, defaultDateFilterRange: $defaultDateFilterRange, chartsConfiguration: $chartsConfiguration, enableBajajSpecificFeature: $enableBajajSpecificFeature)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;filterSettings&quot;:{},&quot;chartSettings&quot;:{},&quot;questionsVisible&quot;:{},&quot;responseRateCalculation&quot;:&quot;DELIVERED&quot;,&quot;defaultDateFilterRange&quot;:&quot;Last 30 days&quot;,&quot;chartsConfiguration&quot;:{&quot;countries&quot;:null},&quot;enableBajajSpecificFeature&quot;:false}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="737 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;enableHuddleModule&quot;:true,&quot;enableCallerModule&quot;:true,&quot;enablePreCalculation&quot;:false,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;questionnaire&quot;:[{&quot;id&quot;:&quot;a6e8d6be-b7cd-4a9e-87b3-3ccc15656415&quot;,&quot;next&quot;:&quot;3ec401ca-46ff-4e02-a710-f9eeb81f1358&quot;,&quot;config&quot;:{&quot;conditions&quot;:[]},&quot;componentKind&quot;:&quot;NEW_PAGE&quot;},{&quot;id&quot;:&quot;3ec401ca-46ff-4e02-a710-f9eeb81f1358&quot;,&quot;next&quot;:&quot;b81df426-a535-4ea1-8d55-25f5f714e09b&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Phone&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Phone&quot;},&quot;previous&quot;:&quot;a6e8d6be-b7cd-4a9e-87b3-3ccc15656415&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;b81df426-a535-4ea1-8d55-25f5f714e09b&quot;,&quot;next&quot;:&quot;53338b2e-0abe-41ea-95b4-733db206f666&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;CDMS Response Id&quot;},&quot;previous&quot;:&quot;3ec401ca-46ff-4e02-a710-f9eeb81f1358&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;53338b2e-0abe-41ea-95b4-733db206f666&quot;,&quot;next&quot;:&quot;007eb910-e2fe-4fbd-8832-d00cb4fb6a55&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Customer Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Customer Name&quot;},&quot;previous&quot;:&quot;b81df426-a535-4ea1-8d55-25f5f714e09b&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;007eb910-e2fe-4fbd-8832-d00cb4fb6a55&quot;,&quot;next&quot;:&quot;fad810ea-517a-4d58-b397-f16225a64172&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;1&quot;,&quot;isClient&quot;:false,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ahmed ALnaqbi&quot;,&quot;value&quot;:&quot;ahmed ALnaqbi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ahmed ALnaqbi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Abdel Hamid&quot;,&quot;value&quot;:&quot;Ahmed Abdel Hamid&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Abdel Hamid&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;S BJ&quot;,&quot;value&quot;:&quot;S BJ&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;S BJ&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;???? ???????&quot;,&quot;value&quot;:&quot;???? ???????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;???? ???????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Osama Khairy&quot;,&quot;value&quot;:&quot;Osama Khairy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Osama Khairy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;musthafa dever parambil&quot;,&quot;value&quot;:&quot;musthafa dever parambil&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;musthafa dever parambil&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Tiger Noir&quot;,&quot;value&quot;:&quot;Tiger Noir&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Tiger Noir&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Salah Abu Yassin&quot;,&quot;value&quot;:&quot;Salah Abu Yassin&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Salah Abu Yassin&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rana AA&quot;,&quot;value&quot;:&quot;Rana AA&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rana AA&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Bahig Georgi&quot;,&quot;value&quot;:&quot;Bahig Georgi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Bahig Georgi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;AHMED ABOUELENIN&quot;,&quot;value&quot;:&quot;AHMED ABOUELENIN&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;AHMED ABOUELENIN&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;khalid al-aghbari&quot;,&quot;value&quot;:&quot;khalid al-aghbari&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;khalid al-aghbari&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ijaz Fuadh&quot;,&quot;value&quot;:&quot;Ijaz Fuadh&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ijaz Fuadh&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;vijayakumar Duraisamy&quot;,&quot;value&quot;:&quot;vijayakumar Duraisamy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;vijayakumar Duraisamy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;qw Q&quot;,&quot;value&quot;:&quot;qw Q&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;qw Q&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;????? ???&quot;,&quot;value&quot;:&quot;????? ???&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;????? ???&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ayoub LT&quot;,&quot;value&quot;:&quot;Ayoub LT&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ayoub LT&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;,&quot;value&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Akuamoah Boateng&quot;,&quot;value&quot;:&quot;Akuamoah Boateng&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Akuamoah Boateng&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sidhik M N&quot;,&quot;value&quot;:&quot;Sidhik M N&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sidhik M N&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nashid Kunookkara&quot;,&quot;value&quot;:&quot;Nashid Kunookkara&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nashid Kunookkara&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sudheesh Karikkad&quot;,&quot;value&quot;:&quot;Sudheesh Karikkad&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sudheesh Karikkad&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Ali&quot;,&quot;value&quot;:&quot;Ahmed Ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ziad Elbermawy&quot;,&quot;value&quot;:&quot;Ziad Elbermawy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ziad Elbermawy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Linda Wong&quot;,&quot;value&quot;:&quot;Linda Wong&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Linda Wong&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ferdous Alam Tohid&quot;,&quot;value&quot;:&quot;Ferdous Alam Tohid&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ferdous Alam Tohid&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Shiney Roberts&quot;,&quot;value&quot;:&quot;Shiney Roberts&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Shiney Roberts&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;kashif kora&quot;,&quot;value&quot;:&quot;kashif kora&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;kashif kora&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mukku Sisindri&quot;,&quot;value&quot;:&quot;Mukku Sisindri&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mukku Sisindri&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Avinash Padmashali&quot;,&quot;value&quot;:&quot;Avinash Padmashali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Avinash Padmashali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rashed Mood&quot;,&quot;value&quot;:&quot;Rashed Mood&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rashed Mood&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nahir Ahmed&quot;,&quot;value&quot;:&quot;Nahir Ahmed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nahir Ahmed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;???? ??????&quot;,&quot;value&quot;:&quot;???? ??????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;???? ??????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mo&apos;men Hussein&quot;,&quot;value&quot;:&quot;Mo&apos;men Hussein&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mo&apos;men Hussein&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Jalel Thebet&quot;,&quot;value&quot;:&quot;Jalel Thebet&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Jalel Thebet&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Abdullah Aldhabyani&quot;,&quot;value&quot;:&quot;Abdullah Aldhabyani&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Abdullah Aldhabyani&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Muhammad Ariyan Khan&quot;,&quot;value&quot;:&quot;Muhammad Ariyan Khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Muhammad Ariyan Khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;mostafa abdu&quot;,&quot;value&quot;:&quot;mostafa abdu&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;mostafa abdu&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Manoj Singh Rawat&quot;,&quot;value&quot;:&quot;Manoj Singh Rawat&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Manoj Singh Rawat&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;NEIL&quot;,&quot;value&quot;:&quot;NEIL&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;NEIL&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Deepak kumar&quot;,&quot;value&quot;:&quot;Deepak kumar&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Deepak kumar&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Roland Claudio&quot;,&quot;value&quot;:&quot;Roland Claudio&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Roland Claudio&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Simpow Gits&quot;,&quot;value&quot;:&quot;Simpow Gits&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Simpow Gits&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Brian Monteiro Takamori&quot;,&quot;value&quot;:&quot;Brian Monteiro Takamori&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Brian Monteiro Takamori&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;eecleonavarro&quot;,&quot;value&quot;:&quot;eecleonavarro&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;eecleonavarro&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Esraa Alshinnawy&quot;,&quot;value&quot;:&quot;Esraa Alshinnawy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Esraa Alshinnawy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;??? ??????&quot;,&quot;value&quot;:&quot;??? ??????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;??? ??????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;elhabbasi yassin&quot;,&quot;value&quot;:&quot;elhabbasi yassin&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;elhabbasi yassin&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ajran Zafar&quot;,&quot;value&quot;:&quot;Ajran Zafar&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ajran Zafar&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Inaleila Rambs&quot;,&quot;value&quot;:&quot;Inaleila Rambs&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Inaleila Rambs&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sean Trevin&quot;,&quot;value&quot;:&quot;Sean Trevin&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sean Trevin&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kutabala Lawrence&quot;,&quot;value&quot;:&quot;Kutabala Lawrence&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kutabala Lawrence&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;mohan patil&quot;,&quot;value&quot;:&quot;mohan patil&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;mohan patil&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;RedNinja Hussy&quot;,&quot;value&quot;:&quot;RedNinja Hussy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;RedNinja Hussy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;fire water&quot;,&quot;value&quot;:&quot;fire water&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;fire water&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Juliano Mitri&quot;,&quot;value&quot;:&quot;Juliano Mitri&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Juliano Mitri&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Yaser Abdalla&quot;,&quot;value&quot;:&quot;Yaser Abdalla&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Yaser Abdalla&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;?????? ??????? alrihab albarihuh&quot;,&quot;value&quot;:&quot;?????? ??????? alrihab albarihuh&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;?????? ??????? alrihab albarihuh&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;???? ????&quot;,&quot;value&quot;:&quot;???? ????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;???? ????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;md kaife&quot;,&quot;value&quot;:&quot;md kaife&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;md kaife&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;YOUSAF ALI&quot;,&quot;value&quot;:&quot;YOUSAF ALI&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;YOUSAF ALI&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sabin Katuwal&quot;,&quot;value&quot;:&quot;Sabin Katuwal&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sabin Katuwal&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mustafa khan&quot;,&quot;value&quot;:&quot;Mustafa khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mustafa khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Abdul Talim&quot;,&quot;value&quot;:&quot;Abdul Talim&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Abdul Talim&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Emad Ali&quot;,&quot;value&quot;:&quot;Emad Ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Emad Ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Hariram Sain&quot;,&quot;value&quot;:&quot;Hariram Sain&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Hariram Sain&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kevin Shyjo&quot;,&quot;value&quot;:&quot;Kevin Shyjo&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kevin Shyjo&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;??? ?????? ??????&quot;,&quot;value&quot;:&quot;??? ?????? ??????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;??? ?????? ??????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rowil Mg&quot;,&quot;value&quot;:&quot;Rowil Mg&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rowil Mg&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rashid ali khan&quot;,&quot;value&quot;:&quot;Rashid ali khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rashid ali khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Samoil Journalist&quot;,&quot;value&quot;:&quot;Samoil Journalist&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Samoil Journalist&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Hussam elshamy&quot;,&quot;value&quot;:&quot;Hussam elshamy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Hussam elshamy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Salahuddin Ahmed&quot;,&quot;value&quot;:&quot;Salahuddin Ahmed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Salahuddin Ahmed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;arun das&quot;,&quot;value&quot;:&quot;arun das&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;arun das&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kishan Pandit786&quot;,&quot;value&quot;:&quot;Kishan Pandit786&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kishan Pandit786&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;seif ahmed&quot;,&quot;value&quot;:&quot;seif ahmed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;seif ahmed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kei Takishima&quot;,&quot;value&quot;:&quot;Kei Takishima&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kei Takishima&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;awan saab&quot;,&quot;value&quot;:&quot;awan saab&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;awan saab&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;shiya maddy vlog&quot;,&quot;value&quot;:&quot;shiya maddy vlog&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;shiya maddy vlog&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mohammed Rifai&quot;,&quot;value&quot;:&quot;Mohammed Rifai&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mohammed Rifai&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ayesha s&quot;,&quot;value&quot;:&quot;ayesha s&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ayesha s&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Bahaa Q&quot;,&quot;value&quot;:&quot;Bahaa Q&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Bahaa Q&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sanil Stansilaus&quot;,&quot;value&quot;:&quot;Sanil Stansilaus&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sanil Stansilaus&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nishar Ali&quot;,&quot;value&quot;:&quot;Nishar Ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nishar Ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Hamdi&quot;,&quot;value&quot;:&quot;Ahmed Hamdi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Hamdi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Yassine Sarir&quot;,&quot;value&quot;:&quot;Yassine Sarir&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Yassine Sarir&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nikhil cm&quot;,&quot;value&quot;:&quot;Nikhil cm&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nikhil cm&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Khamees&quot;,&quot;value&quot;:&quot;Ahmed Khamees&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Khamees&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;vishnu devarajan&quot;,&quot;value&quot;:&quot;vishnu devarajan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;vishnu devarajan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rafael Jr Manuel&quot;,&quot;value&quot;:&quot;Rafael Jr Manuel&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rafael Jr Manuel&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Hammam&quot;,&quot;value&quot;:&quot;Hammam&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Hammam&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sabu Xaviour&quot;,&quot;value&quot;:&quot;Sabu Xaviour&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sabu Xaviour&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;arman ali ali&quot;,&quot;value&quot;:&quot;arman ali ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;arman ali ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;salah abdelraouf&quot;,&quot;value&quot;:&quot;salah abdelraouf&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;salah abdelraouf&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Soliman&quot;,&quot;value&quot;:&quot;Ahmed Soliman&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Soliman&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;??????? ??????? ??? ???????&quot;,&quot;value&quot;:&quot;??????? ??????? ??? ???????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;??????? ??????? ??? ???????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ayman Alatrash&quot;,&quot;value&quot;:&quot;Ayman Alatrash&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ayman Alatrash&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;mohamed ramadan&quot;,&quot;value&quot;:&quot;mohamed ramadan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;mohamed ramadan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;karim nada&quot;,&quot;value&quot;:&quot;karim nada&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;karim nada&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahamad Fadl ala 111&quot;,&quot;value&quot;:&quot;Ahamad Fadl ala 111&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahamad Fadl ala 111&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rida Elyaakkoubi&quot;,&quot;value&quot;:&quot;Rida Elyaakkoubi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rida Elyaakkoubi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;,&quot;value&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Quadeer Khan&quot;,&quot;value&quot;:&quot;Quadeer Khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Quadeer Khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;YASAR ARAFATH M.K&quot;,&quot;value&quot;:&quot;YASAR ARAFATH M.K&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;YASAR ARAFATH M.K&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ahmed zaki&quot;,&quot;value&quot;:&quot;ahmed zaki&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ahmed zaki&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mohammad Saeed&quot;,&quot;value&quot;:&quot;Mohammad Saeed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mohammad Saeed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ameer Thaj&quot;,&quot;value&quot;:&quot;Ameer Thaj&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ameer Thaj&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Jahangir Alam Alam&quot;,&quot;value&quot;:&quot;Jahangir Alam Alam&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Jahangir Alam Alam&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Shajahan hameed&quot;,&quot;value&quot;:&quot;Shajahan hameed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Shajahan hameed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Siraj Np&quot;,&quot;value&quot;:&quot;Siraj Np&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Siraj Np&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nausad Raza&quot;,&quot;value&quot;:&quot;Nausad Raza&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nausad Raza&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;O A&quot;,&quot;value&quot;:&quot;O A&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;O A&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Al Al&quot;,&quot;value&quot;:&quot;Al Al&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Al Al&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Tasnim Ur Rehman&quot;,&quot;value&quot;:&quot;Tasnim Ur Rehman&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Tasnim Ur Rehman&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;muhammed mujibur rahman&quot;,&quot;value&quot;:&quot;muhammed mujibur rahman&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;muhammed mujibur rahman&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Robin Kenyanya&quot;,&quot;value&quot;:&quot;Robin Kenyanya&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Robin Kenyanya&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user229&quot;,&quot;value&quot;:&quot;Test user229&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user229&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user227&quot;,&quot;value&quot;:&quot;Test user227&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user227&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user228&quot;,&quot;value&quot;:&quot;Test user228&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user228&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user225&quot;,&quot;value&quot;:&quot;Test user225&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user225&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user226&quot;,&quot;value&quot;:&quot;Test user226&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user226&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user230&quot;,&quot;value&quot;:&quot;Test user230&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user230&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user176&quot;,&quot;value&quot;:&quot;Test user176&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user176&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user194&quot;,&quot;value&quot;:&quot;Test user194&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user194&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user212&quot;,&quot;value&quot;:&quot;Test user212&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user212&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user205&quot;,&quot;value&quot;:&quot;Test user205&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user205&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user213&quot;,&quot;value&quot;:&quot;Test user213&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user213&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user207&quot;,&quot;value&quot;:&quot;Test user207&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user207&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user202&quot;,&quot;value&quot;:&quot;Test user202&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user202&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user191&quot;,&quot;value&quot;:&quot;Test user191&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user191&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user224&quot;,&quot;value&quot;:&quot;Test user224&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user224&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user208&quot;,&quot;value&quot;:&quot;Test user208&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user208&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user214&quot;,&quot;value&quot;:&quot;Test user214&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user214&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user198&quot;,&quot;value&quot;:&quot;Test user198&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user198&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user179&quot;,&quot;value&quot;:&quot;Test user179&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user179&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user177&quot;,&quot;value&quot;:&quot;Test user177&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user177&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user206&quot;,&quot;value&quot;:&quot;Test user206&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user206&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user220&quot;,&quot;value&quot;:&quot;Test user220&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user220&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user200&quot;,&quot;value&quot;:&quot;Test user200&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user200&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user216&quot;,&quot;value&quot;:&quot;Test user216&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user216&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user223&quot;,&quot;value&quot;:&quot;Test user223&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user223&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user210&quot;,&quot;value&quot;:&quot;Test user210&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user210&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user222&quot;,&quot;value&quot;:&quot;Test user222&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user222&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user189&quot;,&quot;value&quot;:&quot;Test user189&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user189&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user217&quot;,&quot;value&quot;:&quot;Test user217&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user217&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user193&quot;,&quot;value&quot;:&quot;Test user193&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user193&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user197&quot;,&quot;value&quot;:&quot;Test user197&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user197&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user221&quot;,&quot;value&quot;:&quot;Test user221&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user221&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user219&quot;,&quot;value&quot;:&quot;Test user219&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user219&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user183&quot;,&quot;value&quot;:&quot;Test user183&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user183&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user196&quot;,&quot;value&quot;:&quot;Test user196&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user196&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user195&quot;,&quot;value&quot;:&quot;Test user195&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user195&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user187&quot;,&quot;value&quot;:&quot;Test user187&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user187&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user203&quot;,&quot;value&quot;:&quot;Test user203&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user203&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user218&quot;,&quot;value&quot;:&quot;Test user218&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user218&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user215&quot;,&quot;value&quot;:&quot;Test user215&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user215&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user185&quot;,&quot;value&quot;:&quot;Test user185&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user185&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user192&quot;,&quot;value&quot;:&quot;Test user192&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user192&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user201&quot;,&quot;value&quot;:&quot;Test user201&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user201&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user209&quot;,&quot;value&quot;:&quot;Test user209&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user209&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user190&quot;,&quot;value&quot;:&quot;Test user190&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user190&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user180&quot;,&quot;value&quot;:&quot;Test user180&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user180&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user211&quot;,&quot;value&quot;:&quot;Test user211&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user211&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user199&quot;,&quot;value&quot;:&quot;Test user199&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user199&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user204&quot;,&quot;value&quot;:&quot;Test user204&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user204&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user188&quot;,&quot;value&quot;:&quot;Test user188&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user188&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user181&quot;,&quot;value&quot;:&quot;Test user181&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user181&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user182&quot;,&quot;value&quot;:&quot;Test user182&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user182&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user144&quot;,&quot;value&quot;:&quot;Test user144&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user144&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user145&quot;,&quot;value&quot;:&quot;Test user145&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user145&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user149&quot;,&quot;value&quot;:&quot;Test user149&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user149&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user143&quot;,&quot;value&quot;:&quot;Test user143&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user143&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user174&quot;,&quot;value&quot;:&quot;Test user174&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user174&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user153&quot;,&quot;value&quot;:&quot;Test user153&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user153&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user156&quot;,&quot;value&quot;:&quot;Test user156&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user156&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user162&quot;,&quot;value&quot;:&quot;Test user162&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user162&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user173&quot;,&quot;value&quot;:&quot;Test user173&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user173&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user160&quot;,&quot;value&quot;:&quot;Test user160&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user160&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user170&quot;,&quot;value&quot;:&quot;Test user170&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user170&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user167&quot;,&quot;value&quot;:&quot;Test user167&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user167&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user147&quot;,&quot;value&quot;:&quot;Test user147&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user147&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user175&quot;,&quot;value&quot;:&quot;Test user175&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user175&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user155&quot;,&quot;value&quot;:&quot;Test user155&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user155&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user141&quot;,&quot;value&quot;:&quot;Test user141&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user141&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user139&quot;,&quot;value&quot;:&quot;Test user139&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user139&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user138&quot;,&quot;value&quot;:&quot;Test user138&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user138&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user178&quot;,&quot;value&quot;:&quot;Test user178&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user178&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user171&quot;,&quot;value&quot;:&quot;Test user171&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user171&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user150&quot;,&quot;value&quot;:&quot;Test user150&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user150&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user158&quot;,&quot;value&quot;:&quot;Test user158&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user158&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user154&quot;,&quot;value&quot;:&quot;Test user154&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user154&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user184&quot;,&quot;value&quot;:&quot;Test user184&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user184&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user140&quot;,&quot;value&quot;:&quot;Test user140&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user140&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user146&quot;,&quot;value&quot;:&quot;Test user146&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user146&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user152&quot;,&quot;value&quot;:&quot;Test user152&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user152&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user165&quot;,&quot;value&quot;:&quot;Test user165&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user165&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user164&quot;,&quot;value&quot;:&quot;Test user164&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user164&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user159&quot;,&quot;value&quot;:&quot;Test user159&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user159&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user169&quot;,&quot;value&quot;:&quot;Test user169&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user169&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user161&quot;,&quot;value&quot;:&quot;Test user161&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user161&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user172&quot;,&quot;value&quot;:&quot;Test user172&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user172&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user168&quot;,&quot;value&quot;:&quot;Test user168&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user168&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user166&quot;,&quot;value&quot;:&quot;Test user166&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user166&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user148&quot;,&quot;value&quot;:&quot;Test user148&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user148&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user137&quot;,&quot;value&quot;:&quot;Test user137&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user137&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user157&quot;,&quot;value&quot;:&quot;Test user157&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user157&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user163&quot;,&quot;value&quot;:&quot;Test user163&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user163&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user186&quot;,&quot;value&quot;:&quot;Test user186&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user186&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user151&quot;,&quot;value&quot;:&quot;Test user151&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user151&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user130&quot;,&quot;value&quot;:&quot;Test user130&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user130&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user131&quot;,&quot;value&quot;:&quot;Test user131&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user131&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user134&quot;,&quot;value&quot;:&quot;Test user134&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user134&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user126&quot;,&quot;value&quot;:&quot;Test user126&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user126&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user127&quot;,&quot;value&quot;:&quot;Test user127&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user127&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user136&quot;,&quot;value&quot;:&quot;Test user136&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user136&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user142&quot;,&quot;value&quot;:&quot;Test user142&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user142&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Aayush Sharma&quot;,&quot;value&quot;:&quot;Aayush Sharma&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Aayush Sharma&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Aayush&quot;,&quot;value&quot;:&quot;Aayush&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Aayush&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;garima Sethi&quot;,&quot;value&quot;:&quot;garima Sethi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;garima Sethi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;hrushikesh Kulkarni&quot;,&quot;value&quot;:&quot;hrushikesh Kulkarni&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;hrushikesh Kulkarni&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Diwakar Singh Maurya&quot;,&quot;value&quot;:&quot;Diwakar Singh Maurya&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Diwakar Singh Maurya&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ashish Sharma&quot;,&quot;value&quot;:&quot;ashish Sharma&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ashish Sharma&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;subhanker Sarker&quot;,&quot;value&quot;:&quot;subhanker Sarker&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;subhanker Sarker&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;samridhi Srivastava&quot;,&quot;value&quot;:&quot;samridhi Srivastava&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;samridhi Srivastava&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Noor Siddiqui&quot;,&quot;value&quot;:&quot;Noor Siddiqui&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Noor Siddiqui&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Deepak Rana&quot;,&quot;value&quot;:&quot;Deepak Rana&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Deepak Rana&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Daryl Fernandes&quot;,&quot;value&quot;:&quot;Daryl Fernandes&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Daryl Fernandes&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rohit Dubey&quot;,&quot;value&quot;:&quot;Rohit Dubey&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rohit Dubey&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Faraz Khan&quot;,&quot;value&quot;:&quot;Faraz Khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Faraz Khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Vijay Ramachandran&quot;,&quot;value&quot;:&quot;Vijay Ramachandran&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Vijay Ramachandran&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Dealer Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Dealer Name&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Dealer Name&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;isACompetitorQuestion&quot;:false,&quot;multipleSelectionText&quot;:&quot; {{0}} &quot;,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false,&quot;shouldFillParticipantDataInOptions&quot;:false},&quot;previous&quot;:&quot;53338b2e-0abe-41ea-95b4-733db206f666&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;fad810ea-517a-4d58-b397-f16225a64172&quot;,&quot;next&quot;:&quot;a96e0e45-7d10-43c5-bee0-25794784ce00&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Outlet Location&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Outlet Location&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Outlet Location&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;007eb910-e2fe-4fbd-8832-d00cb4fb6a55&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;a96e0e45-7d10-43c5-bee0-25794784ce00&quot;,&quot;next&quot;:&quot;470fe5cc-723a-41d0-837c-b10402b93121&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Hello  ${qID://50a65a07-4cd2-496b-9239-b057b5f10bd9}, based on you recent experience with ${qID://e908a6e2-52a0-4efa-b07f-44d23a33220a/1}  situated at  ${qID://ab8d31bc-6716-41fd-8f63-4b8c5e4eb18d/1}&quot;,&quot;isRichTextEditorEnabled&quot;:false},&quot;previous&quot;:&quot;fad810ea-517a-4d58-b397-f16225a64172&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;},{&quot;id&quot;:&quot;470fe5cc-723a-41d0-837c-b10402b93121&quot;,&quot;next&quot;:&quot;2d610ddc-4c5b-46a0-9624-0b79e997ebba&quot;,&quot;config&quot;:{&quot;shortCode&quot;:&quot;NPS&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:true,&quot;ratingPoints&quot;:[{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;0&quot;,&quot;value&quot;:0,&quot;helpText&quot;:&quot;Not at all likely 👎&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;1&quot;,&quot;value&quot;:1,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;2&quot;,&quot;value&quot;:2,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;3&quot;,&quot;value&quot;:3,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;4&quot;,&quot;value&quot;:4,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;5&quot;,&quot;value&quot;:5,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;6&quot;,&quot;value&quot;:6,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#cacfd5&quot;,&quot;label&quot;:&quot;7&quot;,&quot;value&quot;:7,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#cacfd5&quot;,&quot;label&quot;:&quot;8&quot;,&quot;value&quot;:8,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#008000&quot;,&quot;label&quot;:&quot;9&quot;,&quot;value&quot;:9,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#008000&quot;,&quot;label&quot;:&quot;10&quot;,&quot;value&quot;:10,&quot;helpText&quot;:&quot;👍 Extremely likely&quot;}],&quot;isNPSQuestion&quot;:true,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Based on your recent showroom visit experience and interaction, how likely are you to recommend Bajaj Motorcycles to a friend or colleague?&quot;,&quot;notApplicableOption&quot;:{&quot;color&quot;:&quot;#6E6E6E&quot;,&quot;label&quot;:&quot;NA&quot;,&quot;value&quot;:&quot;NA&quot;,&quot;helpText&quot;:&quot;&quot;},&quot;enableNotApplicableOption&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;a96e0e45-7d10-43c5-bee0-25794784ce00&quot;,&quot;componentKind&quot;:&quot;RATING&quot;},{&quot;id&quot;:&quot;2d610ddc-4c5b-46a0-9624-0b79e997ebba&quot;,&quot;next&quot;:&quot;36669627-3000-4b75-999b-e0ffc2cc610b&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Based on your showroom visit experience, could you please tell us which of the following would you not recommend? 👎&quot;,&quot;isRichTextEditorEnabled&quot;:false},&quot;previous&quot;:&quot;470fe5cc-723a-41d0-837c-b10402b93121&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;},{&quot;id&quot;:&quot;36669627-3000-4b75-999b-e0ffc2cc610b&quot;,&quot;next&quot;:&quot;a19d7322-d86d-4517-8208-551e4c3f36e4&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Based on your showroom visit experience, could you please tell us which of the following would you recommend?  👍&quot;,&quot;isRichTextEditorEnabled&quot;:false},&quot;previous&quot;:&quot;2d610ddc-4c5b-46a0-9624-0b79e997ebba&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;},{&quot;id&quot;:&quot;a19d7322-d86d-4517-8208-551e4c3f36e4&quot;,&quot;next&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;config&quot;:{&quot;override&quot;:false,&quot;shortCode&quot;:&quot;__MCQ_DrilldownQu__Like/dislike&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:true,&quot;questionId&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;&quot;,&quot;drilldownQuestions&quot;:[{&quot;label&quot;:&quot;Products&quot;,&quot;value&quot;:&quot;1&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Products available on display or purchase&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Availability of different colors&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Range of products under company brand&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Product performance actual v/s promised&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;isRequired&quot;:false,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/bike-black.svg&quot;,&quot;questionId&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:false,&quot;questionShortCode&quot;:&quot;Products&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Accessibility of showrooms&quot;,&quot;value&quot;:&quot;2&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Distance to showroom&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Connectivity to location (Ease of Access)&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of identifying showrooms&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;isRequired&quot;:false,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/maps-black.svg&quot;,&quot;questionId&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:false,&quot;questionShortCode&quot;:&quot;Accessibility of showrooms&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Showroom infrastructure&quot;,&quot;value&quot;:&quot;3&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Quality of product display/demos&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Availability of parking&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Provision of seating area&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Provision for refreshments&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Cleanliness of showroom&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;isRequired&quot;:false,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/showroom-black.svg&quot;,&quot;questionId&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:false,&quot;questionShortCode&quot;:&quot;Showroom infrastructure&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Sales team interactions&quot;,&quot;value&quot;:&quot;4&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Waiting time&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Product knowledge of sales staff&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Accuracy of information provided&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Friendliness and Professionalism of sales team / Behaviour of Sales Team&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Availability of brochures with product information; use of digital media to showcase products&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Product demonstration&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Call backs with offers (in case visit did not lead to purchase)&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Fluency of sales team in the local language&quot;,&quot;value&quot;:&quot;8&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Prior awareness of sales team about customer preferences&quot;,&quot;value&quot;:&quot;9&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/person-black.svg&quot;,&quot;questionId&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Sales team interactions&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Test ride experience&quot;,&quot;value&quot;:&quot;5&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of slots for test ride&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of testride booking.&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Quality of route for test ride / Quaility of Test Ride Route&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Length of test ride&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Quality of bike used for the test ride&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/bike-black.svg&quot;,&quot;questionId&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Test ride experience&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Purchase formalities&quot;,&quot;value&quot;:&quot;6&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Provision for allocation of specific chassis/ Vehicle based on preference&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of payment and billing; time taken to invoice&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of registration procedure; time for RTO approval&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of tracking RTO / HSRP process&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of Insurance procedure (ease of purchase, price etc.)&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Vehicle Delivery promised Vs actual / Time to road actual v/s estimated&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;One time collection of data / document&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/purchase-black.svg&quot;,&quot;questionId&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Purchase formalities&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Exchange experience&quot;,&quot;value&quot;:&quot;7&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of different broker options for exchange&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Number of documents required&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Exchange value&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Experience with exchange related services (pick up of vehicle, document transfer, etc.,)&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/exchange-black.svg&quot;,&quot;questionId&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Exchange experience&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;value&quot;:&quot;8&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Ex-showroom price / Pricing (Ex Shpowroom &amp; On Road Price)&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Dealer handling charges&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Registration fee&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Charges for additional services&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;On road price&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Attractiveness of discounts and schemes&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Freebies&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/price-black.svg&quot;,&quot;questionId&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;questionStatement&quot;:&quot;&quot;}],&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;36669627-3000-4b75-999b-e0ffc2cc610b&quot;,&quot;componentKind&quot;:&quot;MCQ_DRILLDOWN&quot;},{&quot;id&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;next&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Products&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Accessibility of showrooms&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Showroom infrastructure&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sales team interactions&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test ride experience&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Purchase formalities&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Exchange experience&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;value&quot;:&quot;8&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Like/dislike&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:true,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;a19d7322-d86d-4517-8208-551e4c3f36e4&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;next&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Products available on display or purchase&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Availability of different colors&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Range of products under company brand&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Product performance actual v/s promised&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Products&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Products&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;next&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Distance to showroom&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Connectivity to location (Ease of Access)&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of identifying showrooms&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Accessibility of showrooms&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Accessibility of showrooms&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;next&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Quality of product display/demos&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Availability of parking&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Provision of seating area&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Provision for refreshments&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Cleanliness of showroom&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Showroom infrastructure&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Showroom infrastructure&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;next&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Waiting time&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Product knowledge of sales staff&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Accuracy of information provided&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Friendliness and Professionalism of sales team / Behaviour of Sales Team&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Availability of brochures with product information; use of digital media to showcase products&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Product demonstration&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Call backs with offers (in case visit did not lead to purchase)&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Fluency of sales team in the local language&quot;,&quot;value&quot;:&quot;8&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Prior awareness of sales team about customer preferences&quot;,&quot;value&quot;:&quot;9&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Sales team interactions&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Sales team interactions&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;next&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of slots for test ride&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of testride booking.&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Quality of route for test ride / Quaility of Test Ride Route&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Length of test ride&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Quality of bike used for the test ride&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Test ride experience&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Test ride experience&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;next&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Provision for allocation of specific chassis/ Vehicle based on preference&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of payment and billing; time taken to invoice&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of registration procedure; time for RTO approval&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of tracking RTO / HSRP process&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of Insurance procedure (ease of purchase, price etc.)&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Vehicle Delivery promised Vs actual / Time to road actual v/s estimated&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;One time collection of data / document&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Purchase formalities&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Purchase formalities&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;next&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of different broker options for exchange&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Number of documents required&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Exchange value&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Experience with exchange related services (pick up of vehicle, document transfer, etc.,)&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Exchange experience&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Exchange experience&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;next&quot;:&quot;5f4380eb-06ad-4dcf-ab54-69e056eaefb1&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Ex-showroom price / Pricing (Ex Shpowroom &amp; On Road Price)&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Dealer handling charges&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Registration fee&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Charges for additional services&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;On road price&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Attractiveness of discounts and schemes&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Freebies&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Prices, discounts and promotional schemes&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;5f4380eb-06ad-4dcf-ab54-69e056eaefb1&quot;,&quot;next&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;config&quot;:{&quot;maxWords&quot;:300,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Open_End&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:true,&quot;showAsReadOnly&quot;:false,&quot;placeHolderText&quot;:&quot;Your feedback will help us improve.&quot;,&quot;questionStatement&quot;:&quot;Do you have any other suggestions for us to improve your experience?&quot;},&quot;previous&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;next&quot;:&quot;3e34b168-e083-4b8a-b565-e56baf18f72f&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;Would you be willing to participate in a call-back?&quot;,&quot;value&quot;:&quot;Yes&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Call-back&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;CHECKBOXES&quot;,&quot;defaultAnswer&quot;:[&quot;Yes&quot;],&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Would you be willing to participate in a call-back?&quot;,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;5f4380eb-06ad-4dcf-ab54-69e056eaefb1&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;3e34b168-e083-4b8a-b565-e56baf18f72f&quot;,&quot;next&quot;:&quot;77d8bff6-9506-4974-bab1-0a42a5043476&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Doc Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Doc Name&quot;},&quot;previous&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;77d8bff6-9506-4974-bab1-0a42a5043476&quot;,&quot;next&quot;:&quot;75e8a0df-6195-4f8c-96b1-83fa0d6b70bb&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Doc ID&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Doc ID&quot;},&quot;previous&quot;:&quot;3e34b168-e083-4b8a-b565-e56baf18f72f&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;75e8a0df-6195-4f8c-96b1-83fa0d6b70bb&quot;,&quot;next&quot;:&quot;7fcc0f6d-eeb8-4f18-83f6-95b68e196240&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Enquiry Creation Date&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Enquiry Creation Date&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Enquiry Creation Date&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;77d8bff6-9506-4974-bab1-0a42a5043476&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;7fcc0f6d-eeb8-4f18-83f6-95b68e196240&quot;,&quot;next&quot;:&quot;dc36b778-3dde-455f-b9c1-9f7c0b089dc1&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Enquiry Type&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Enquiry Type&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Enquiry Type&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;75e8a0df-6195-4f8c-96b1-83fa0d6b70bb&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;dc36b778-3dde-455f-b9c1-9f7c0b089dc1&quot;,&quot;next&quot;:&quot;6c1593c7-8ae4-4b85-a5b4-2e793c18317c&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Sales Advisor&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Sales Advisor&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Sales Advisor&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;7fcc0f6d-eeb8-4f18-83f6-95b68e196240&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;6c1593c7-8ae4-4b85-a5b4-2e793c18317c&quot;,&quot;next&quot;:&quot;34a7f45b-de2c-490d-b730-019989e39ad0&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Customer Mobile number&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Customer Mobile number&quot;},&quot;previous&quot;:&quot;dc36b778-3dde-455f-b9c1-9f7c0b089dc1&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;34a7f45b-de2c-490d-b730-019989e39ad0&quot;,&quot;next&quot;:&quot;6c782dc2-8336-4872-94a1-8d2e49e18845&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Customer ID&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Customer ID&quot;},&quot;previous&quot;:&quot;6c1593c7-8ae4-4b85-a5b4-2e793c18317c&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;6c782dc2-8336-4872-94a1-8d2e49e18845&quot;,&quot;next&quot;:&quot;8a24f8f1-a2ac-4053-904f-8c1e5787aa02&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Preferred language&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Preferred language&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Preferred language&quot;,&quot;isLanguageController&quot;:true,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;34a7f45b-de2c-490d-b730-019989e39ad0&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;8a24f8f1-a2ac-4053-904f-8c1e5787aa02&quot;,&quot;next&quot;:&quot;2beb434c-97d2-4166-863a-c95162b89ce1&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Dealer Code&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Dealer Code&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Dealer Code&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;6c782dc2-8336-4872-94a1-8d2e49e18845&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;2beb434c-97d2-4166-863a-c95162b89ce1&quot;,&quot;next&quot;:&quot;df23f48f-97ae-4972-80e5-f677693b311a&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Branch Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Branch Name&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Branch Name&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;8a24f8f1-a2ac-4053-904f-8c1e5787aa02&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;df23f48f-97ae-4972-80e5-f677693b311a&quot;,&quot;next&quot;:&quot;4c719cc3-be5b-4083-aa0a-d8ff6c8fa84a&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Branch Code&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Branch Code&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Branch Code&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;2beb434c-97d2-4166-863a-c95162b89ce1&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;4c719cc3-be5b-4083-aa0a-d8ff6c8fa84a&quot;,&quot;next&quot;:&quot;4050fca4-d989-41cd-860d-6442936c7868&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Branch Location&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Branch Location&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Branch Location&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;df23f48f-97ae-4972-80e5-f677693b311a&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;4050fca4-d989-41cd-860d-6442936c7868&quot;,&quot;next&quot;:&quot;3f2b9635-4c1e-4e30-8793-071b6a281320&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Episode&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Episode&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Episode&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;4c719cc3-be5b-4083-aa0a-d8ff6c8fa84a&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;3f2b9635-4c1e-4e30-8793-071b6a281320&quot;,&quot;next&quot;:&quot;fe22f26a-95a5-46fe-85c8-5334a48c35cf&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Business Unit&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Business Unit&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Business Unit&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;4050fca4-d989-41cd-860d-6442936c7868&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;fe22f26a-95a5-46fe-85c8-5334a48c35cf&quot;,&quot;next&quot;:&quot;4cf70b6c-e8d8-4085-ad51-8a2a76ea8d2e&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;OTP Verification Trend&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;OTP Verification Trend&quot;,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;3f2b9635-4c1e-4e30-8793-071b6a281320&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;4cf70b6c-e8d8-4085-ad51-8a2a76ea8d2e&quot;,&quot;next&quot;:&quot;670c10e0-280b-451e-ae16-d6fccae52bf7&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Circle&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Circle&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Circle&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;fe22f26a-95a5-46fe-85c8-5334a48c35cf&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;670c10e0-280b-451e-ae16-d6fccae52bf7&quot;,&quot;next&quot;:&quot;dfc430b6-2512-4420-91b6-0dd2e47ff736&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Region&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Region&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Region&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;4cf70b6c-e8d8-4085-ad51-8a2a76ea8d2e&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;dfc430b6-2512-4420-91b6-0dd2e47ff736&quot;,&quot;next&quot;:&quot;f1c5310d-4547-4633-9b80-54fbe9f03183&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;ASM&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;ASM&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;ASM&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;670c10e0-280b-451e-ae16-d6fccae52bf7&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;f1c5310d-4547-4633-9b80-54fbe9f03183&quot;,&quot;next&quot;:&quot;f59f7ca8-5321-4b63-83b9-616dc7f51dee&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;City&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;City&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;City&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;dfc430b6-2512-4420-91b6-0dd2e47ff736&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;f59f7ca8-5321-4b63-83b9-616dc7f51dee&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Terms  | Disclaimer  | Privacy Policy \u0001Copyright © 2021 Bajaj Auto Ltd. All rights reserved&quot;,&quot;isRichTextEditorEnabled&quot;:true,&quot;questionStatementRichText&quot;:{&quot;blocks&quot;:[{&quot;key&quot;:&quot;djaps&quot;,&quot;data&quot;:{&quot;text-align&quot;:&quot;center&quot;},&quot;text&quot;:&quot;Terms  | Disclaimer  | Privacy Policy &quot;,&quot;type&quot;:&quot;unstyled&quot;,&quot;depth&quot;:0,&quot;entityRanges&quot;:[{&quot;key&quot;:0,&quot;length&quot;:5,&quot;offset&quot;:0},{&quot;key&quot;:1,&quot;length&quot;:10,&quot;offset&quot;:9},{&quot;key&quot;:2,&quot;length&quot;:14,&quot;offset&quot;:23}],&quot;inlineStyleRanges&quot;:[]},{&quot;key&quot;:&quot;40mpr&quot;,&quot;data&quot;:{&quot;text-align&quot;:&quot;center&quot;},&quot;text&quot;:&quot;Copyright © 2021 Bajaj Auto Ltd. All rights reserved&quot;,&quot;type&quot;:&quot;unstyled&quot;,&quot;depth&quot;:0,&quot;entityRanges&quot;:[],&quot;inlineStyleRanges&quot;:[]}],&quot;entityMap&quot;:{&quot;0&quot;:{&quot;data&quot;:{&quot;url&quot;:&quot;${scheme}://www.bajajauto.com/onlinebooking-tnc&quot;,&quot;targetOption&quot;:&quot;_blank&quot;},&quot;type&quot;:&quot;LINK&quot;,&quot;mutability&quot;:&quot;MUTABLE&quot;},&quot;1&quot;:{&quot;data&quot;:{&quot;url&quot;:&quot;${scheme}://www.bajajauto.com/disclaimer&quot;,&quot;targetOption&quot;:&quot;_blank&quot;},&quot;type&quot;:&quot;LINK&quot;,&quot;mutability&quot;:&quot;MUTABLE&quot;},&quot;2&quot;:{&quot;data&quot;:{&quot;url&quot;:&quot;${scheme}://www.bajajauto.com/privacy-policy&quot;,&quot;targetOption&quot;:&quot;_blank&quot;},&quot;type&quot;:&quot;LINK&quot;,&quot;mutability&quot;:&quot;MUTABLE&quot;}}}},&quot;previous&quot;:&quot;f1c5310d-4547-4633-9b80-54fbe9f03183&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;}]},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $questionnaire: [JSONObject!]!, $enableHuddleModule: Boolean, $enableCallerModule: Boolean, $enablePreCalculation: Boolean) {\n  updateCampaignSettings(campaignId: $campaignId, questionnaire: $questionnaire, enableHuddleModule: $enableHuddleModule, enableCallerModule: $enableCallerModule, enablePreCalculation: $enablePreCalculation)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $questionnaire: [JSONObject!]!, $enableHuddleModule: Boolean, $enableCallerModule: Boolean, $enablePreCalculation: Boolean) {
  updateCampaignSettings(campaignId: $campaignId, questionnaire: $questionnaire, enableHuddleModule: $enableHuddleModule, enableCallerModule: $enableCallerModule, enablePreCalculation: $enablePreCalculation)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;enableHuddleModule&quot;:true,&quot;enableCallerModule&quot;:true,&quot;enablePreCalculation&quot;:false,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;questionnaire&quot;:[{&quot;id&quot;:&quot;a6e8d6be-b7cd-4a9e-87b3-3ccc15656415&quot;,&quot;next&quot;:&quot;3ec401ca-46ff-4e02-a710-f9eeb81f1358&quot;,&quot;config&quot;:{&quot;conditions&quot;:[]},&quot;componentKind&quot;:&quot;NEW_PAGE&quot;},{&quot;id&quot;:&quot;3ec401ca-46ff-4e02-a710-f9eeb81f1358&quot;,&quot;next&quot;:&quot;b81df426-a535-4ea1-8d55-25f5f714e09b&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Phone&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Phone&quot;},&quot;previous&quot;:&quot;a6e8d6be-b7cd-4a9e-87b3-3ccc15656415&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;b81df426-a535-4ea1-8d55-25f5f714e09b&quot;,&quot;next&quot;:&quot;53338b2e-0abe-41ea-95b4-733db206f666&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;CDMS Response Id&quot;},&quot;previous&quot;:&quot;3ec401ca-46ff-4e02-a710-f9eeb81f1358&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;53338b2e-0abe-41ea-95b4-733db206f666&quot;,&quot;next&quot;:&quot;007eb910-e2fe-4fbd-8832-d00cb4fb6a55&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Customer Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Customer Name&quot;},&quot;previous&quot;:&quot;b81df426-a535-4ea1-8d55-25f5f714e09b&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;007eb910-e2fe-4fbd-8832-d00cb4fb6a55&quot;,&quot;next&quot;:&quot;fad810ea-517a-4d58-b397-f16225a64172&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;1&quot;,&quot;isClient&quot;:false,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ahmed ALnaqbi&quot;,&quot;value&quot;:&quot;ahmed ALnaqbi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ahmed ALnaqbi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Abdel Hamid&quot;,&quot;value&quot;:&quot;Ahmed Abdel Hamid&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Abdel Hamid&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;S BJ&quot;,&quot;value&quot;:&quot;S BJ&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;S BJ&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;???? ???????&quot;,&quot;value&quot;:&quot;???? ???????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;???? ???????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Osama Khairy&quot;,&quot;value&quot;:&quot;Osama Khairy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Osama Khairy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;musthafa dever parambil&quot;,&quot;value&quot;:&quot;musthafa dever parambil&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;musthafa dever parambil&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Tiger Noir&quot;,&quot;value&quot;:&quot;Tiger Noir&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Tiger Noir&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Salah Abu Yassin&quot;,&quot;value&quot;:&quot;Salah Abu Yassin&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Salah Abu Yassin&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rana AA&quot;,&quot;value&quot;:&quot;Rana AA&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rana AA&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Bahig Georgi&quot;,&quot;value&quot;:&quot;Bahig Georgi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Bahig Georgi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;AHMED ABOUELENIN&quot;,&quot;value&quot;:&quot;AHMED ABOUELENIN&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;AHMED ABOUELENIN&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;khalid al-aghbari&quot;,&quot;value&quot;:&quot;khalid al-aghbari&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;khalid al-aghbari&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ijaz Fuadh&quot;,&quot;value&quot;:&quot;Ijaz Fuadh&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ijaz Fuadh&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;vijayakumar Duraisamy&quot;,&quot;value&quot;:&quot;vijayakumar Duraisamy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;vijayakumar Duraisamy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;qw Q&quot;,&quot;value&quot;:&quot;qw Q&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;qw Q&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;????? ???&quot;,&quot;value&quot;:&quot;????? ???&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;????? ???&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ayoub LT&quot;,&quot;value&quot;:&quot;Ayoub LT&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ayoub LT&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;,&quot;value&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Akuamoah Boateng&quot;,&quot;value&quot;:&quot;Akuamoah Boateng&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Akuamoah Boateng&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sidhik M N&quot;,&quot;value&quot;:&quot;Sidhik M N&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sidhik M N&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nashid Kunookkara&quot;,&quot;value&quot;:&quot;Nashid Kunookkara&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nashid Kunookkara&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sudheesh Karikkad&quot;,&quot;value&quot;:&quot;Sudheesh Karikkad&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sudheesh Karikkad&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Ali&quot;,&quot;value&quot;:&quot;Ahmed Ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ziad Elbermawy&quot;,&quot;value&quot;:&quot;Ziad Elbermawy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ziad Elbermawy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Linda Wong&quot;,&quot;value&quot;:&quot;Linda Wong&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Linda Wong&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ferdous Alam Tohid&quot;,&quot;value&quot;:&quot;Ferdous Alam Tohid&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ferdous Alam Tohid&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Shiney Roberts&quot;,&quot;value&quot;:&quot;Shiney Roberts&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Shiney Roberts&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;kashif kora&quot;,&quot;value&quot;:&quot;kashif kora&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;kashif kora&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mukku Sisindri&quot;,&quot;value&quot;:&quot;Mukku Sisindri&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mukku Sisindri&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Avinash Padmashali&quot;,&quot;value&quot;:&quot;Avinash Padmashali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Avinash Padmashali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rashed Mood&quot;,&quot;value&quot;:&quot;Rashed Mood&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rashed Mood&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nahir Ahmed&quot;,&quot;value&quot;:&quot;Nahir Ahmed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nahir Ahmed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;???? ??????&quot;,&quot;value&quot;:&quot;???? ??????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;???? ??????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mo&apos;men Hussein&quot;,&quot;value&quot;:&quot;Mo&apos;men Hussein&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mo&apos;men Hussein&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Jalel Thebet&quot;,&quot;value&quot;:&quot;Jalel Thebet&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Jalel Thebet&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Abdullah Aldhabyani&quot;,&quot;value&quot;:&quot;Abdullah Aldhabyani&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Abdullah Aldhabyani&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Muhammad Ariyan Khan&quot;,&quot;value&quot;:&quot;Muhammad Ariyan Khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Muhammad Ariyan Khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;mostafa abdu&quot;,&quot;value&quot;:&quot;mostafa abdu&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;mostafa abdu&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Manoj Singh Rawat&quot;,&quot;value&quot;:&quot;Manoj Singh Rawat&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Manoj Singh Rawat&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;NEIL&quot;,&quot;value&quot;:&quot;NEIL&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;NEIL&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Deepak kumar&quot;,&quot;value&quot;:&quot;Deepak kumar&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Deepak kumar&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Roland Claudio&quot;,&quot;value&quot;:&quot;Roland Claudio&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Roland Claudio&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Simpow Gits&quot;,&quot;value&quot;:&quot;Simpow Gits&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Simpow Gits&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Brian Monteiro Takamori&quot;,&quot;value&quot;:&quot;Brian Monteiro Takamori&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Brian Monteiro Takamori&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;eecleonavarro&quot;,&quot;value&quot;:&quot;eecleonavarro&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;eecleonavarro&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Esraa Alshinnawy&quot;,&quot;value&quot;:&quot;Esraa Alshinnawy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Esraa Alshinnawy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;??? ??????&quot;,&quot;value&quot;:&quot;??? ??????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;??? ??????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;elhabbasi yassin&quot;,&quot;value&quot;:&quot;elhabbasi yassin&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;elhabbasi yassin&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ajran Zafar&quot;,&quot;value&quot;:&quot;Ajran Zafar&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ajran Zafar&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Inaleila Rambs&quot;,&quot;value&quot;:&quot;Inaleila Rambs&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Inaleila Rambs&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sean Trevin&quot;,&quot;value&quot;:&quot;Sean Trevin&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sean Trevin&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kutabala Lawrence&quot;,&quot;value&quot;:&quot;Kutabala Lawrence&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kutabala Lawrence&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;mohan patil&quot;,&quot;value&quot;:&quot;mohan patil&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;mohan patil&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;RedNinja Hussy&quot;,&quot;value&quot;:&quot;RedNinja Hussy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;RedNinja Hussy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;fire water&quot;,&quot;value&quot;:&quot;fire water&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;fire water&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Juliano Mitri&quot;,&quot;value&quot;:&quot;Juliano Mitri&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Juliano Mitri&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Yaser Abdalla&quot;,&quot;value&quot;:&quot;Yaser Abdalla&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Yaser Abdalla&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;?????? ??????? alrihab albarihuh&quot;,&quot;value&quot;:&quot;?????? ??????? alrihab albarihuh&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;?????? ??????? alrihab albarihuh&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;???? ????&quot;,&quot;value&quot;:&quot;???? ????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;???? ????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;md kaife&quot;,&quot;value&quot;:&quot;md kaife&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;md kaife&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;YOUSAF ALI&quot;,&quot;value&quot;:&quot;YOUSAF ALI&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;YOUSAF ALI&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sabin Katuwal&quot;,&quot;value&quot;:&quot;Sabin Katuwal&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sabin Katuwal&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mustafa khan&quot;,&quot;value&quot;:&quot;Mustafa khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mustafa khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Abdul Talim&quot;,&quot;value&quot;:&quot;Abdul Talim&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Abdul Talim&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Emad Ali&quot;,&quot;value&quot;:&quot;Emad Ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Emad Ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Hariram Sain&quot;,&quot;value&quot;:&quot;Hariram Sain&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Hariram Sain&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kevin Shyjo&quot;,&quot;value&quot;:&quot;Kevin Shyjo&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kevin Shyjo&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;??? ?????? ??????&quot;,&quot;value&quot;:&quot;??? ?????? ??????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;??? ?????? ??????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rowil Mg&quot;,&quot;value&quot;:&quot;Rowil Mg&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rowil Mg&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rashid ali khan&quot;,&quot;value&quot;:&quot;Rashid ali khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rashid ali khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Samoil Journalist&quot;,&quot;value&quot;:&quot;Samoil Journalist&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Samoil Journalist&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Hussam elshamy&quot;,&quot;value&quot;:&quot;Hussam elshamy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Hussam elshamy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Salahuddin Ahmed&quot;,&quot;value&quot;:&quot;Salahuddin Ahmed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Salahuddin Ahmed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;arun das&quot;,&quot;value&quot;:&quot;arun das&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;arun das&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kishan Pandit786&quot;,&quot;value&quot;:&quot;Kishan Pandit786&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kishan Pandit786&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;seif ahmed&quot;,&quot;value&quot;:&quot;seif ahmed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;seif ahmed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kei Takishima&quot;,&quot;value&quot;:&quot;Kei Takishima&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kei Takishima&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;awan saab&quot;,&quot;value&quot;:&quot;awan saab&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;awan saab&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;shiya maddy vlog&quot;,&quot;value&quot;:&quot;shiya maddy vlog&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;shiya maddy vlog&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mohammed Rifai&quot;,&quot;value&quot;:&quot;Mohammed Rifai&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mohammed Rifai&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ayesha s&quot;,&quot;value&quot;:&quot;ayesha s&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ayesha s&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Bahaa Q&quot;,&quot;value&quot;:&quot;Bahaa Q&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Bahaa Q&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sanil Stansilaus&quot;,&quot;value&quot;:&quot;Sanil Stansilaus&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sanil Stansilaus&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nishar Ali&quot;,&quot;value&quot;:&quot;Nishar Ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nishar Ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Hamdi&quot;,&quot;value&quot;:&quot;Ahmed Hamdi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Hamdi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Yassine Sarir&quot;,&quot;value&quot;:&quot;Yassine Sarir&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Yassine Sarir&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nikhil cm&quot;,&quot;value&quot;:&quot;Nikhil cm&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nikhil cm&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Khamees&quot;,&quot;value&quot;:&quot;Ahmed Khamees&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Khamees&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;vishnu devarajan&quot;,&quot;value&quot;:&quot;vishnu devarajan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;vishnu devarajan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rafael Jr Manuel&quot;,&quot;value&quot;:&quot;Rafael Jr Manuel&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rafael Jr Manuel&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Hammam&quot;,&quot;value&quot;:&quot;Hammam&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Hammam&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sabu Xaviour&quot;,&quot;value&quot;:&quot;Sabu Xaviour&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sabu Xaviour&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;arman ali ali&quot;,&quot;value&quot;:&quot;arman ali ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;arman ali ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;salah abdelraouf&quot;,&quot;value&quot;:&quot;salah abdelraouf&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;salah abdelraouf&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Soliman&quot;,&quot;value&quot;:&quot;Ahmed Soliman&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Soliman&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;??????? ??????? ??? ???????&quot;,&quot;value&quot;:&quot;??????? ??????? ??? ???????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;??????? ??????? ??? ???????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ayman Alatrash&quot;,&quot;value&quot;:&quot;Ayman Alatrash&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ayman Alatrash&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;mohamed ramadan&quot;,&quot;value&quot;:&quot;mohamed ramadan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;mohamed ramadan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;karim nada&quot;,&quot;value&quot;:&quot;karim nada&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;karim nada&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahamad Fadl ala 111&quot;,&quot;value&quot;:&quot;Ahamad Fadl ala 111&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahamad Fadl ala 111&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rida Elyaakkoubi&quot;,&quot;value&quot;:&quot;Rida Elyaakkoubi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rida Elyaakkoubi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;,&quot;value&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Quadeer Khan&quot;,&quot;value&quot;:&quot;Quadeer Khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Quadeer Khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;YASAR ARAFATH M.K&quot;,&quot;value&quot;:&quot;YASAR ARAFATH M.K&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;YASAR ARAFATH M.K&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ahmed zaki&quot;,&quot;value&quot;:&quot;ahmed zaki&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ahmed zaki&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mohammad Saeed&quot;,&quot;value&quot;:&quot;Mohammad Saeed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mohammad Saeed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ameer Thaj&quot;,&quot;value&quot;:&quot;Ameer Thaj&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ameer Thaj&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Jahangir Alam Alam&quot;,&quot;value&quot;:&quot;Jahangir Alam Alam&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Jahangir Alam Alam&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Shajahan hameed&quot;,&quot;value&quot;:&quot;Shajahan hameed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Shajahan hameed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Siraj Np&quot;,&quot;value&quot;:&quot;Siraj Np&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Siraj Np&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nausad Raza&quot;,&quot;value&quot;:&quot;Nausad Raza&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nausad Raza&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;O A&quot;,&quot;value&quot;:&quot;O A&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;O A&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Al Al&quot;,&quot;value&quot;:&quot;Al Al&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Al Al&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Tasnim Ur Rehman&quot;,&quot;value&quot;:&quot;Tasnim Ur Rehman&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Tasnim Ur Rehman&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;muhammed mujibur rahman&quot;,&quot;value&quot;:&quot;muhammed mujibur rahman&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;muhammed mujibur rahman&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Robin Kenyanya&quot;,&quot;value&quot;:&quot;Robin Kenyanya&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Robin Kenyanya&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user229&quot;,&quot;value&quot;:&quot;Test user229&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user229&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user227&quot;,&quot;value&quot;:&quot;Test user227&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user227&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user228&quot;,&quot;value&quot;:&quot;Test user228&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user228&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user225&quot;,&quot;value&quot;:&quot;Test user225&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user225&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user226&quot;,&quot;value&quot;:&quot;Test user226&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user226&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user230&quot;,&quot;value&quot;:&quot;Test user230&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user230&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user176&quot;,&quot;value&quot;:&quot;Test user176&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user176&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user194&quot;,&quot;value&quot;:&quot;Test user194&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user194&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user212&quot;,&quot;value&quot;:&quot;Test user212&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user212&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user205&quot;,&quot;value&quot;:&quot;Test user205&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user205&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user213&quot;,&quot;value&quot;:&quot;Test user213&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user213&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user207&quot;,&quot;value&quot;:&quot;Test user207&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user207&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user202&quot;,&quot;value&quot;:&quot;Test user202&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user202&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user191&quot;,&quot;value&quot;:&quot;Test user191&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user191&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user224&quot;,&quot;value&quot;:&quot;Test user224&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user224&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user208&quot;,&quot;value&quot;:&quot;Test user208&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user208&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user214&quot;,&quot;value&quot;:&quot;Test user214&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user214&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user198&quot;,&quot;value&quot;:&quot;Test user198&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user198&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user179&quot;,&quot;value&quot;:&quot;Test user179&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user179&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user177&quot;,&quot;value&quot;:&quot;Test user177&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user177&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user206&quot;,&quot;value&quot;:&quot;Test user206&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user206&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user220&quot;,&quot;value&quot;:&quot;Test user220&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user220&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user200&quot;,&quot;value&quot;:&quot;Test user200&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user200&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user216&quot;,&quot;value&quot;:&quot;Test user216&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user216&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user223&quot;,&quot;value&quot;:&quot;Test user223&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user223&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user210&quot;,&quot;value&quot;:&quot;Test user210&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user210&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user222&quot;,&quot;value&quot;:&quot;Test user222&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user222&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user189&quot;,&quot;value&quot;:&quot;Test user189&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user189&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user217&quot;,&quot;value&quot;:&quot;Test user217&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user217&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user193&quot;,&quot;value&quot;:&quot;Test user193&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user193&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user197&quot;,&quot;value&quot;:&quot;Test user197&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user197&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user221&quot;,&quot;value&quot;:&quot;Test user221&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user221&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user219&quot;,&quot;value&quot;:&quot;Test user219&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user219&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user183&quot;,&quot;value&quot;:&quot;Test user183&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user183&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user196&quot;,&quot;value&quot;:&quot;Test user196&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user196&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user195&quot;,&quot;value&quot;:&quot;Test user195&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user195&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user187&quot;,&quot;value&quot;:&quot;Test user187&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user187&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user203&quot;,&quot;value&quot;:&quot;Test user203&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user203&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user218&quot;,&quot;value&quot;:&quot;Test user218&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user218&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user215&quot;,&quot;value&quot;:&quot;Test user215&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user215&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user185&quot;,&quot;value&quot;:&quot;Test user185&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user185&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user192&quot;,&quot;value&quot;:&quot;Test user192&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user192&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user201&quot;,&quot;value&quot;:&quot;Test user201&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user201&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user209&quot;,&quot;value&quot;:&quot;Test user209&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user209&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user190&quot;,&quot;value&quot;:&quot;Test user190&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user190&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user180&quot;,&quot;value&quot;:&quot;Test user180&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user180&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user211&quot;,&quot;value&quot;:&quot;Test user211&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user211&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user199&quot;,&quot;value&quot;:&quot;Test user199&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user199&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user204&quot;,&quot;value&quot;:&quot;Test user204&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user204&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user188&quot;,&quot;value&quot;:&quot;Test user188&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user188&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user181&quot;,&quot;value&quot;:&quot;Test user181&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user181&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user182&quot;,&quot;value&quot;:&quot;Test user182&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user182&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user144&quot;,&quot;value&quot;:&quot;Test user144&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user144&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user145&quot;,&quot;value&quot;:&quot;Test user145&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user145&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user149&quot;,&quot;value&quot;:&quot;Test user149&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user149&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user143&quot;,&quot;value&quot;:&quot;Test user143&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user143&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user174&quot;,&quot;value&quot;:&quot;Test user174&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user174&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user153&quot;,&quot;value&quot;:&quot;Test user153&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user153&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user156&quot;,&quot;value&quot;:&quot;Test user156&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user156&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user162&quot;,&quot;value&quot;:&quot;Test user162&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user162&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user173&quot;,&quot;value&quot;:&quot;Test user173&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user173&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user160&quot;,&quot;value&quot;:&quot;Test user160&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user160&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user170&quot;,&quot;value&quot;:&quot;Test user170&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user170&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user167&quot;,&quot;value&quot;:&quot;Test user167&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user167&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user147&quot;,&quot;value&quot;:&quot;Test user147&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user147&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user175&quot;,&quot;value&quot;:&quot;Test user175&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user175&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user155&quot;,&quot;value&quot;:&quot;Test user155&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user155&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user141&quot;,&quot;value&quot;:&quot;Test user141&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user141&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user139&quot;,&quot;value&quot;:&quot;Test user139&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user139&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user138&quot;,&quot;value&quot;:&quot;Test user138&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user138&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user178&quot;,&quot;value&quot;:&quot;Test user178&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user178&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user171&quot;,&quot;value&quot;:&quot;Test user171&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user171&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user150&quot;,&quot;value&quot;:&quot;Test user150&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user150&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user158&quot;,&quot;value&quot;:&quot;Test user158&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user158&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user154&quot;,&quot;value&quot;:&quot;Test user154&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user154&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user184&quot;,&quot;value&quot;:&quot;Test user184&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user184&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user140&quot;,&quot;value&quot;:&quot;Test user140&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user140&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user146&quot;,&quot;value&quot;:&quot;Test user146&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user146&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user152&quot;,&quot;value&quot;:&quot;Test user152&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user152&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user165&quot;,&quot;value&quot;:&quot;Test user165&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user165&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user164&quot;,&quot;value&quot;:&quot;Test user164&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user164&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user159&quot;,&quot;value&quot;:&quot;Test user159&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user159&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user169&quot;,&quot;value&quot;:&quot;Test user169&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user169&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user161&quot;,&quot;value&quot;:&quot;Test user161&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user161&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user172&quot;,&quot;value&quot;:&quot;Test user172&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user172&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user168&quot;,&quot;value&quot;:&quot;Test user168&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user168&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user166&quot;,&quot;value&quot;:&quot;Test user166&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user166&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user148&quot;,&quot;value&quot;:&quot;Test user148&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user148&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user137&quot;,&quot;value&quot;:&quot;Test user137&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user137&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user157&quot;,&quot;value&quot;:&quot;Test user157&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user157&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user163&quot;,&quot;value&quot;:&quot;Test user163&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user163&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user186&quot;,&quot;value&quot;:&quot;Test user186&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user186&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user151&quot;,&quot;value&quot;:&quot;Test user151&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user151&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user130&quot;,&quot;value&quot;:&quot;Test user130&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user130&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user131&quot;,&quot;value&quot;:&quot;Test user131&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user131&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user134&quot;,&quot;value&quot;:&quot;Test user134&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user134&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user126&quot;,&quot;value&quot;:&quot;Test user126&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user126&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user127&quot;,&quot;value&quot;:&quot;Test user127&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user127&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user136&quot;,&quot;value&quot;:&quot;Test user136&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user136&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user142&quot;,&quot;value&quot;:&quot;Test user142&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user142&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Aayush Sharma&quot;,&quot;value&quot;:&quot;Aayush Sharma&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Aayush Sharma&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Aayush&quot;,&quot;value&quot;:&quot;Aayush&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Aayush&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;garima Sethi&quot;,&quot;value&quot;:&quot;garima Sethi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;garima Sethi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;hrushikesh Kulkarni&quot;,&quot;value&quot;:&quot;hrushikesh Kulkarni&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;hrushikesh Kulkarni&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Diwakar Singh Maurya&quot;,&quot;value&quot;:&quot;Diwakar Singh Maurya&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Diwakar Singh Maurya&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ashish Sharma&quot;,&quot;value&quot;:&quot;ashish Sharma&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ashish Sharma&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;subhanker Sarker&quot;,&quot;value&quot;:&quot;subhanker Sarker&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;subhanker Sarker&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;samridhi Srivastava&quot;,&quot;value&quot;:&quot;samridhi Srivastava&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;samridhi Srivastava&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Noor Siddiqui&quot;,&quot;value&quot;:&quot;Noor Siddiqui&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Noor Siddiqui&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Deepak Rana&quot;,&quot;value&quot;:&quot;Deepak Rana&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Deepak Rana&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Daryl Fernandes&quot;,&quot;value&quot;:&quot;Daryl Fernandes&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Daryl Fernandes&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rohit Dubey&quot;,&quot;value&quot;:&quot;Rohit Dubey&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rohit Dubey&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Faraz Khan&quot;,&quot;value&quot;:&quot;Faraz Khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Faraz Khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Vijay Ramachandran&quot;,&quot;value&quot;:&quot;Vijay Ramachandran&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Vijay Ramachandran&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Dealer Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Dealer Name&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Dealer Name&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;isACompetitorQuestion&quot;:false,&quot;multipleSelectionText&quot;:&quot; {{0}} &quot;,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false,&quot;shouldFillParticipantDataInOptions&quot;:false},&quot;previous&quot;:&quot;53338b2e-0abe-41ea-95b4-733db206f666&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;fad810ea-517a-4d58-b397-f16225a64172&quot;,&quot;next&quot;:&quot;a96e0e45-7d10-43c5-bee0-25794784ce00&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Outlet Location&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Outlet Location&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Outlet Location&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;007eb910-e2fe-4fbd-8832-d00cb4fb6a55&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;a96e0e45-7d10-43c5-bee0-25794784ce00&quot;,&quot;next&quot;:&quot;470fe5cc-723a-41d0-837c-b10402b93121&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Hello  ${qID://50a65a07-4cd2-496b-9239-b057b5f10bd9}, based on you recent experience with ${qID://e908a6e2-52a0-4efa-b07f-44d23a33220a/1}  situated at  ${qID://ab8d31bc-6716-41fd-8f63-4b8c5e4eb18d/1}&quot;,&quot;isRichTextEditorEnabled&quot;:false},&quot;previous&quot;:&quot;fad810ea-517a-4d58-b397-f16225a64172&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;},{&quot;id&quot;:&quot;470fe5cc-723a-41d0-837c-b10402b93121&quot;,&quot;next&quot;:&quot;2d610ddc-4c5b-46a0-9624-0b79e997ebba&quot;,&quot;config&quot;:{&quot;shortCode&quot;:&quot;NPS&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:true,&quot;ratingPoints&quot;:[{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;0&quot;,&quot;value&quot;:0,&quot;helpText&quot;:&quot;Not at all likely 👎&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;1&quot;,&quot;value&quot;:1,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;2&quot;,&quot;value&quot;:2,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;3&quot;,&quot;value&quot;:3,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;4&quot;,&quot;value&quot;:4,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;5&quot;,&quot;value&quot;:5,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;6&quot;,&quot;value&quot;:6,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#cacfd5&quot;,&quot;label&quot;:&quot;7&quot;,&quot;value&quot;:7,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#cacfd5&quot;,&quot;label&quot;:&quot;8&quot;,&quot;value&quot;:8,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#008000&quot;,&quot;label&quot;:&quot;9&quot;,&quot;value&quot;:9,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#008000&quot;,&quot;label&quot;:&quot;10&quot;,&quot;value&quot;:10,&quot;helpText&quot;:&quot;👍 Extremely likely&quot;}],&quot;isNPSQuestion&quot;:true,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Based on your recent showroom visit experience and interaction, how likely are you to recommend Bajaj Motorcycles to a friend or colleague?&quot;,&quot;notApplicableOption&quot;:{&quot;color&quot;:&quot;#6E6E6E&quot;,&quot;label&quot;:&quot;NA&quot;,&quot;value&quot;:&quot;NA&quot;,&quot;helpText&quot;:&quot;&quot;},&quot;enableNotApplicableOption&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;a96e0e45-7d10-43c5-bee0-25794784ce00&quot;,&quot;componentKind&quot;:&quot;RATING&quot;},{&quot;id&quot;:&quot;2d610ddc-4c5b-46a0-9624-0b79e997ebba&quot;,&quot;next&quot;:&quot;36669627-3000-4b75-999b-e0ffc2cc610b&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Based on your showroom visit experience, could you please tell us which of the following would you not recommend? 👎&quot;,&quot;isRichTextEditorEnabled&quot;:false},&quot;previous&quot;:&quot;470fe5cc-723a-41d0-837c-b10402b93121&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;},{&quot;id&quot;:&quot;36669627-3000-4b75-999b-e0ffc2cc610b&quot;,&quot;next&quot;:&quot;a19d7322-d86d-4517-8208-551e4c3f36e4&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Based on your showroom visit experience, could you please tell us which of the following would you recommend?  👍&quot;,&quot;isRichTextEditorEnabled&quot;:false},&quot;previous&quot;:&quot;2d610ddc-4c5b-46a0-9624-0b79e997ebba&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;},{&quot;id&quot;:&quot;a19d7322-d86d-4517-8208-551e4c3f36e4&quot;,&quot;next&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;config&quot;:{&quot;override&quot;:false,&quot;shortCode&quot;:&quot;__MCQ_DrilldownQu__Like/dislike&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:true,&quot;questionId&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;&quot;,&quot;drilldownQuestions&quot;:[{&quot;label&quot;:&quot;Products&quot;,&quot;value&quot;:&quot;1&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Products available on display or purchase&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Availability of different colors&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Range of products under company brand&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Product performance actual v/s promised&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;isRequired&quot;:false,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/bike-black.svg&quot;,&quot;questionId&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:false,&quot;questionShortCode&quot;:&quot;Products&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Accessibility of showrooms&quot;,&quot;value&quot;:&quot;2&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Distance to showroom&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Connectivity to location (Ease of Access)&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of identifying showrooms&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;isRequired&quot;:false,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/maps-black.svg&quot;,&quot;questionId&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:false,&quot;questionShortCode&quot;:&quot;Accessibility of showrooms&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Showroom infrastructure&quot;,&quot;value&quot;:&quot;3&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Quality of product display/demos&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Availability of parking&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Provision of seating area&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Provision for refreshments&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Cleanliness of showroom&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;isRequired&quot;:false,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/showroom-black.svg&quot;,&quot;questionId&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:false,&quot;questionShortCode&quot;:&quot;Showroom infrastructure&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Sales team interactions&quot;,&quot;value&quot;:&quot;4&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Waiting time&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Product knowledge of sales staff&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Accuracy of information provided&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Friendliness and Professionalism of sales team / Behaviour of Sales Team&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Availability of brochures with product information; use of digital media to showcase products&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Product demonstration&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Call backs with offers (in case visit did not lead to purchase)&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Fluency of sales team in the local language&quot;,&quot;value&quot;:&quot;8&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Prior awareness of sales team about customer preferences&quot;,&quot;value&quot;:&quot;9&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/person-black.svg&quot;,&quot;questionId&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Sales team interactions&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Test ride experience&quot;,&quot;value&quot;:&quot;5&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of slots for test ride&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of testride booking.&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Quality of route for test ride / Quaility of Test Ride Route&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Length of test ride&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Quality of bike used for the test ride&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/bike-black.svg&quot;,&quot;questionId&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Test ride experience&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Purchase formalities&quot;,&quot;value&quot;:&quot;6&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Provision for allocation of specific chassis/ Vehicle based on preference&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of payment and billing; time taken to invoice&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of registration procedure; time for RTO approval&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of tracking RTO / HSRP process&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of Insurance procedure (ease of purchase, price etc.)&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Vehicle Delivery promised Vs actual / Time to road actual v/s estimated&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;One time collection of data / document&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/purchase-black.svg&quot;,&quot;questionId&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Purchase formalities&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Exchange experience&quot;,&quot;value&quot;:&quot;7&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of different broker options for exchange&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Number of documents required&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Exchange value&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Experience with exchange related services (pick up of vehicle, document transfer, etc.,)&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/exchange-black.svg&quot;,&quot;questionId&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Exchange experience&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;value&quot;:&quot;8&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Ex-showroom price / Pricing (Ex Shpowroom &amp; On Road Price)&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Dealer handling charges&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Registration fee&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Charges for additional services&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;On road price&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Attractiveness of discounts and schemes&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Freebies&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/price-black.svg&quot;,&quot;questionId&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;questionStatement&quot;:&quot;&quot;}],&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;36669627-3000-4b75-999b-e0ffc2cc610b&quot;,&quot;componentKind&quot;:&quot;MCQ_DRILLDOWN&quot;},{&quot;id&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;next&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Products&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Accessibility of showrooms&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Showroom infrastructure&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sales team interactions&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test ride experience&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Purchase formalities&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Exchange experience&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;value&quot;:&quot;8&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Like/dislike&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:true,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;a19d7322-d86d-4517-8208-551e4c3f36e4&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;next&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Products available on display or purchase&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Availability of different colors&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Range of products under company brand&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Product performance actual v/s promised&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Products&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Products&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;next&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Distance to showroom&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Connectivity to location (Ease of Access)&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of identifying showrooms&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Accessibility of showrooms&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Accessibility of showrooms&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;next&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Quality of product display/demos&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Availability of parking&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Provision of seating area&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Provision for refreshments&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Cleanliness of showroom&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Showroom infrastructure&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Showroom infrastructure&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;next&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Waiting time&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Product knowledge of sales staff&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Accuracy of information provided&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Friendliness and Professionalism of sales team / Behaviour of Sales Team&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Availability of brochures with product information; use of digital media to showcase products&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Product demonstration&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Call backs with offers (in case visit did not lead to purchase)&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Fluency of sales team in the local language&quot;,&quot;value&quot;:&quot;8&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Prior awareness of sales team about customer preferences&quot;,&quot;value&quot;:&quot;9&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Sales team interactions&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Sales team interactions&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;next&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of slots for test ride&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of testride booking.&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Quality of route for test ride / Quaility of Test Ride Route&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Length of test ride&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Quality of bike used for the test ride&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Test ride experience&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Test ride experience&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;next&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Provision for allocation of specific chassis/ Vehicle based on preference&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of payment and billing; time taken to invoice&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of registration procedure; time for RTO approval&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of tracking RTO / HSRP process&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of Insurance procedure (ease of purchase, price etc.)&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Vehicle Delivery promised Vs actual / Time to road actual v/s estimated&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;One time collection of data / document&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Purchase formalities&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Purchase formalities&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;next&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of different broker options for exchange&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Number of documents required&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Exchange value&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Experience with exchange related services (pick up of vehicle, document transfer, etc.,)&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Exchange experience&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Exchange experience&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;next&quot;:&quot;5f4380eb-06ad-4dcf-ab54-69e056eaefb1&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Ex-showroom price / Pricing (Ex Shpowroom &amp; On Road Price)&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Dealer handling charges&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Registration fee&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Charges for additional services&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;On road price&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Attractiveness of discounts and schemes&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Freebies&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Prices, discounts and promotional schemes&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;5f4380eb-06ad-4dcf-ab54-69e056eaefb1&quot;,&quot;next&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;config&quot;:{&quot;maxWords&quot;:300,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Open_End&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:true,&quot;showAsReadOnly&quot;:false,&quot;placeHolderText&quot;:&quot;Your feedback will help us improve.&quot;,&quot;questionStatement&quot;:&quot;Do you have any other suggestions for us to improve your experience?&quot;},&quot;previous&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;next&quot;:&quot;3e34b168-e083-4b8a-b565-e56baf18f72f&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;Would you be willing to participate in a call-back?&quot;,&quot;value&quot;:&quot;Yes&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Call-back&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;CHECKBOXES&quot;,&quot;defaultAnswer&quot;:[&quot;Yes&quot;],&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Would you be willing to participate in a call-back?&quot;,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;5f4380eb-06ad-4dcf-ab54-69e056eaefb1&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;3e34b168-e083-4b8a-b565-e56baf18f72f&quot;,&quot;next&quot;:&quot;77d8bff6-9506-4974-bab1-0a42a5043476&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Doc Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Doc Name&quot;},&quot;previous&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;77d8bff6-9506-4974-bab1-0a42a5043476&quot;,&quot;next&quot;:&quot;75e8a0df-6195-4f8c-96b1-83fa0d6b70bb&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Doc ID&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Doc ID&quot;},&quot;previous&quot;:&quot;3e34b168-e083-4b8a-b565-e56baf18f72f&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;75e8a0df-6195-4f8c-96b1-83fa0d6b70bb&quot;,&quot;next&quot;:&quot;7fcc0f6d-eeb8-4f18-83f6-95b68e196240&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Enquiry Creation Date&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Enquiry Creation Date&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Enquiry Creation Date&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;77d8bff6-9506-4974-bab1-0a42a5043476&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;7fcc0f6d-eeb8-4f18-83f6-95b68e196240&quot;,&quot;next&quot;:&quot;dc36b778-3dde-455f-b9c1-9f7c0b089dc1&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Enquiry Type&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Enquiry Type&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Enquiry Type&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;75e8a0df-6195-4f8c-96b1-83fa0d6b70bb&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;dc36b778-3dde-455f-b9c1-9f7c0b089dc1&quot;,&quot;next&quot;:&quot;6c1593c7-8ae4-4b85-a5b4-2e793c18317c&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Sales Advisor&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Sales Advisor&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Sales Advisor&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;7fcc0f6d-eeb8-4f18-83f6-95b68e196240&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;6c1593c7-8ae4-4b85-a5b4-2e793c18317c&quot;,&quot;next&quot;:&quot;34a7f45b-de2c-490d-b730-019989e39ad0&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Customer Mobile number&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Customer Mobile number&quot;},&quot;previous&quot;:&quot;dc36b778-3dde-455f-b9c1-9f7c0b089dc1&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;34a7f45b-de2c-490d-b730-019989e39ad0&quot;,&quot;next&quot;:&quot;6c782dc2-8336-4872-94a1-8d2e49e18845&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Customer ID&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Customer ID&quot;},&quot;previous&quot;:&quot;6c1593c7-8ae4-4b85-a5b4-2e793c18317c&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;6c782dc2-8336-4872-94a1-8d2e49e18845&quot;,&quot;next&quot;:&quot;8a24f8f1-a2ac-4053-904f-8c1e5787aa02&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Preferred language&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Preferred language&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Preferred language&quot;,&quot;isLanguageController&quot;:true,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;34a7f45b-de2c-490d-b730-019989e39ad0&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;8a24f8f1-a2ac-4053-904f-8c1e5787aa02&quot;,&quot;next&quot;:&quot;2beb434c-97d2-4166-863a-c95162b89ce1&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Dealer Code&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Dealer Code&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Dealer Code&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;6c782dc2-8336-4872-94a1-8d2e49e18845&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;2beb434c-97d2-4166-863a-c95162b89ce1&quot;,&quot;next&quot;:&quot;df23f48f-97ae-4972-80e5-f677693b311a&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Branch Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Branch Name&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Branch Name&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;8a24f8f1-a2ac-4053-904f-8c1e5787aa02&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;df23f48f-97ae-4972-80e5-f677693b311a&quot;,&quot;next&quot;:&quot;4c719cc3-be5b-4083-aa0a-d8ff6c8fa84a&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Branch Code&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Branch Code&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Branch Code&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;2beb434c-97d2-4166-863a-c95162b89ce1&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;4c719cc3-be5b-4083-aa0a-d8ff6c8fa84a&quot;,&quot;next&quot;:&quot;4050fca4-d989-41cd-860d-6442936c7868&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Branch Location&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Branch Location&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Branch Location&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;df23f48f-97ae-4972-80e5-f677693b311a&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;4050fca4-d989-41cd-860d-6442936c7868&quot;,&quot;next&quot;:&quot;3f2b9635-4c1e-4e30-8793-071b6a281320&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Episode&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Episode&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Episode&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;4c719cc3-be5b-4083-aa0a-d8ff6c8fa84a&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;3f2b9635-4c1e-4e30-8793-071b6a281320&quot;,&quot;next&quot;:&quot;fe22f26a-95a5-46fe-85c8-5334a48c35cf&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Business Unit&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Business Unit&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Business Unit&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;4050fca4-d989-41cd-860d-6442936c7868&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;fe22f26a-95a5-46fe-85c8-5334a48c35cf&quot;,&quot;next&quot;:&quot;4cf70b6c-e8d8-4085-ad51-8a2a76ea8d2e&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;OTP Verification Trend&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;OTP Verification Trend&quot;,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;3f2b9635-4c1e-4e30-8793-071b6a281320&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;4cf70b6c-e8d8-4085-ad51-8a2a76ea8d2e&quot;,&quot;next&quot;:&quot;670c10e0-280b-451e-ae16-d6fccae52bf7&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Circle&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Circle&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Circle&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;fe22f26a-95a5-46fe-85c8-5334a48c35cf&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;670c10e0-280b-451e-ae16-d6fccae52bf7&quot;,&quot;next&quot;:&quot;dfc430b6-2512-4420-91b6-0dd2e47ff736&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Region&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Region&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Region&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;4cf70b6c-e8d8-4085-ad51-8a2a76ea8d2e&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;dfc430b6-2512-4420-91b6-0dd2e47ff736&quot;,&quot;next&quot;:&quot;f1c5310d-4547-4633-9b80-54fbe9f03183&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;ASM&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;ASM&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;ASM&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;670c10e0-280b-451e-ae16-d6fccae52bf7&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;f1c5310d-4547-4633-9b80-54fbe9f03183&quot;,&quot;next&quot;:&quot;f59f7ca8-5321-4b63-83b9-616dc7f51dee&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;City&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;City&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;City&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;dfc430b6-2512-4420-91b6-0dd2e47ff736&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;f59f7ca8-5321-4b63-83b9-616dc7f51dee&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Terms  | Disclaimer  | Privacy Policy \u0001Copyright © 2021 Bajaj Auto Ltd. All rights reserved&quot;,&quot;isRichTextEditorEnabled&quot;:true,&quot;questionStatementRichText&quot;:{&quot;blocks&quot;:[{&quot;key&quot;:&quot;djaps&quot;,&quot;data&quot;:{&quot;text-align&quot;:&quot;center&quot;},&quot;text&quot;:&quot;Terms  | Disclaimer  | Privacy Policy &quot;,&quot;type&quot;:&quot;unstyled&quot;,&quot;depth&quot;:0,&quot;entityRanges&quot;:[{&quot;key&quot;:0,&quot;length&quot;:5,&quot;offset&quot;:0},{&quot;key&quot;:1,&quot;length&quot;:10,&quot;offset&quot;:9},{&quot;key&quot;:2,&quot;length&quot;:14,&quot;offset&quot;:23}],&quot;inlineStyleRanges&quot;:[]},{&quot;key&quot;:&quot;40mpr&quot;,&quot;data&quot;:{&quot;text-align&quot;:&quot;center&quot;},&quot;text&quot;:&quot;Copyright © 2021 Bajaj Auto Ltd. All rights reserved&quot;,&quot;type&quot;:&quot;unstyled&quot;,&quot;depth&quot;:0,&quot;entityRanges&quot;:[],&quot;inlineStyleRanges&quot;:[]}],&quot;entityMap&quot;:{&quot;0&quot;:{&quot;data&quot;:{&quot;url&quot;:&quot;${scheme}://www.bajajauto.com/onlinebooking-tnc&quot;,&quot;targetOption&quot;:&quot;_blank&quot;},&quot;type&quot;:&quot;LINK&quot;,&quot;mutability&quot;:&quot;MUTABLE&quot;},&quot;1&quot;:{&quot;data&quot;:{&quot;url&quot;:&quot;${scheme}://www.bajajauto.com/disclaimer&quot;,&quot;targetOption&quot;:&quot;_blank&quot;},&quot;type&quot;:&quot;LINK&quot;,&quot;mutability&quot;:&quot;MUTABLE&quot;},&quot;2&quot;:{&quot;data&quot;:{&quot;url&quot;:&quot;${scheme}://www.bajajauto.com/privacy-policy&quot;,&quot;targetOption&quot;:&quot;_blank&quot;},&quot;type&quot;:&quot;LINK&quot;,&quot;mutability&quot;:&quot;MUTABLE&quot;}}}},&quot;previous&quot;:&quot;f1c5310d-4547-4633-9b80-54fbe9f03183&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;}]}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="738 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;tabConfiguration&quot;:[{&quot;tabName&quot;:&quot;Participants&quot;,&quot;nameToShow&quot;:&quot;&quot;,&quot;status&quot;:&quot;HIDDEN&quot;}]},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $tabConfiguration: [tabConfigurationInput!]!) {\n  saveTabConfiguration(campaignId: $campaignId, tabConfiguration: $tabConfiguration)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $tabConfiguration: [tabConfigurationInput!]!) {
  saveTabConfiguration(campaignId: $campaignId, tabConfiguration: $tabConfiguration)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;tabConfiguration&quot;:[{&quot;tabName&quot;:&quot;Participants&quot;,&quot;nameToShow&quot;:&quot;&quot;,&quot;status&quot;:&quot;HIDDEN&quot;}]}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="740 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    name\n    campaignTitle\n    translations\n    genericTranslationDetails {\n      selectedLanguages\n      allLanguages\n      __typename\n    }\n    allTabs {\n      tabName\n      __typename\n    }\n    thankyouPageSettings\n    languages\n    isTextAnalysisTranslationEnabled\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    name
    campaignTitle
    translations
    genericTranslationDetails {
      selectedLanguages
      allLanguages
      __typename
    }
    allTabs {
      tabName
      __typename
    }
    thankyouPageSettings
    languages
    isTextAnalysisTranslationEnabled
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="741 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    name\n    campaignTitle\n    translations\n    thankyouPageSettings\n    languages\n    genericTranslationDetails {\n      selectedLanguages\n      allLanguages\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    name
    campaignTitle
    translations
    thankyouPageSettings
    languages
    genericTranslationDetails {
      selectedLanguages
      allLanguages
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="742 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;languages&quot;:[&quot;English&quot;],&quot;isTextAnalysisTranslationEnabled&quot;:true,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $languages: [String!], $isTextAnalysisTranslationEnabled: Boolean) {\n  updateCampaignSettings(campaignId: $campaignId, languages: $languages, isTextAnalysisTranslationEnabled: $isTextAnalysisTranslationEnabled)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $languages: [String!], $isTextAnalysisTranslationEnabled: Boolean) {
  updateCampaignSettings(campaignId: $campaignId, languages: $languages, isTextAnalysisTranslationEnabled: $isTextAnalysisTranslationEnabled)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;languages&quot;:[&quot;English&quot;],&quot;isTextAnalysisTranslationEnabled&quot;:true,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="743 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    name\n    campaignTitle\n    translations\n    genericTranslationDetails {\n      selectedLanguages\n      allLanguages\n      __typename\n    }\n    allTabs {\n      tabName\n      __typename\n    }\n    thankyouPageSettings\n    languages\n    isTextAnalysisTranslationEnabled\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    name
    campaignTitle
    translations
    genericTranslationDetails {
      selectedLanguages
      allLanguages
      __typename
    }
    allTabs {
      tabName
      __typename
    }
    thankyouPageSettings
    languages
    isTextAnalysisTranslationEnabled
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="745 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;selectedLanguages&quot;:[],&quot;newLanguage&quot;:&quot;&quot;,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $selectedLanguages: [String!], $newLanguage: String, $globalTranslations: JSONObject) {\n  updateCampaignExtension(campaignId: $campaignId, selectedLanguages: $selectedLanguages, newLanguage: $newLanguage, globalTranslations: $globalTranslations)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $selectedLanguages: [String!], $newLanguage: String, $globalTranslations: JSONObject) {
  updateCampaignExtension(campaignId: $campaignId, selectedLanguages: $selectedLanguages, newLanguage: $newLanguage, globalTranslations: $globalTranslations)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;selectedLanguages&quot;:[],&quot;newLanguage&quot;:&quot;&quot;,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="746 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    name\n    campaignTitle\n    translations\n    thankyouPageSettings\n    languages\n    genericTranslationDetails {\n      selectedLanguages\n      allLanguages\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    name
    campaignTitle
    translations
    thankyouPageSettings
    languages
    genericTranslationDetails {
      selectedLanguages
      allLanguages
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="747 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;selectedLanguages&quot;:[],&quot;newLanguage&quot;:&quot;&quot;,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $selectedLanguages: [String!], $newLanguage: String, $globalTranslations: JSONObject) {\n  updateCampaignExtension(campaignId: $campaignId, selectedLanguages: $selectedLanguages, newLanguage: $newLanguage, globalTranslations: $globalTranslations)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $selectedLanguages: [String!], $newLanguage: String, $globalTranslations: JSONObject) {
  updateCampaignExtension(campaignId: $campaignId, selectedLanguages: $selectedLanguages, newLanguage: $newLanguage, globalTranslations: $globalTranslations)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;selectedLanguages&quot;:[],&quot;newLanguage&quot;:&quot;&quot;,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="748 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    name\n    campaignTitle\n    translations\n    thankyouPageSettings\n    languages\n    genericTranslationDetails {\n      selectedLanguages\n      allLanguages\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    name
    campaignTitle
    translations
    thankyouPageSettings
    languages
    genericTranslationDetails {
      selectedLanguages
      allLanguages
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="750 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;organizationId&quot;:&quot;05dba122-d253-4ef2-bebe-82b243549639&quot;,&quot;ruleType&quot;:&quot;CREATE&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!, $organizationId: ID!, $ruleType: String!) {\n  campaign(campaignId: $campaignId) {\n    escalationNameSingular\n    escalationNamePlural\n    questionnaire\n    questionLevelEscalationSetting(ruleType: $ruleType) {\n      id\n      wholeConditionInCodeForm\n      key\n      value\n      __typename\n    }\n    __typename\n  }\n  departments(organizationId: $organizationId) {\n    id\n    name\n    tags {\n      key\n      value\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!, $organizationId: ID!, $ruleType: String!) {
  campaign(campaignId: $campaignId) {
    escalationNameSingular
    escalationNamePlural
    questionnaire
    questionLevelEscalationSetting(ruleType: $ruleType) {
      id
      wholeConditionInCodeForm
      key
      value
      __typename
    }
    __typename
  }
  departments(organizationId: $organizationId) {
    id
    name
    tags {
      key
      value
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;organizationId&quot;:&quot;05dba122-d253-4ef2-bebe-82b243549639&quot;,&quot;ruleType&quot;:&quot;CREATE&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="751 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;allReasonsRequired&quot;:true},&quot;query&quot;:&quot;query ($campaignId: ID!, $allReasonsRequired: Boolean) {\n  campaign(campaignId: $campaignId) {\n    escalationReasons(allReasonsRequired: $allReasonsRequired) {\n      id\n      reason\n      isHidden\n      subReason(allReasonsRequired: $allReasonsRequired) {\n        id\n        name\n        isHidden\n        __typename\n      }\n      __typename\n    }\n    escalationActions {\n      id\n      actionName\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!, $allReasonsRequired: Boolean) {
  campaign(campaignId: $campaignId) {
    escalationReasons(allReasonsRequired: $allReasonsRequired) {
      id
      reason
      isHidden
      subReason(allReasonsRequired: $allReasonsRequired) {
        id
        name
        isHidden
        __typename
      }
      __typename
    }
    escalationActions {
      id
      actionName
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;allReasonsRequired&quot;:true}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="753 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;allReasonsRequired&quot;:true},&quot;query&quot;:&quot;query ($campaignId: ID!, $allReasonsRequired: Boolean) {\n  campaign(campaignId: $campaignId) {\n    escalationReasons(allReasonsRequired: $allReasonsRequired) {\n      id\n      reason\n      __typename\n    }\n    questionnaire\n    allReasonsForQuestionValuePair\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!, $allReasonsRequired: Boolean) {
  campaign(campaignId: $campaignId) {
    escalationReasons(allReasonsRequired: $allReasonsRequired) {
      id
      reason
      __typename
    }
    questionnaire
    allReasonsForQuestionValuePair
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;allReasonsRequired&quot;:true}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="752 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    questionnaire\n    organizationId\n    closureSetting {\n      surveyCampaignId\n      templateId\n      questionMapping\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    questionnaire
    organizationId
    closureSetting {
      surveyCampaignId
      templateId
      questionMapping
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="754 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;organizationId&quot;:&quot;05dba122-d253-4ef2-bebe-82b243549639&quot;},&quot;query&quot;:&quot;query ($organizationId: ID!) {\n  organization(organizationId: $organizationId) {\n    campaigns {\n      id\n      name\n      type\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($organizationId: ID!) {
  organization(organizationId: $organizationId) {
    campaigns {
      id
      name
      type
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;organizationId&quot;:&quot;05dba122-d253-4ef2-bebe-82b243549639&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="755 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;escalationNameSingular&quot;:&quot;Escalation&quot;,&quot;escalationNamePlural&quot;:&quot;Escalations&quot;,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;questionLevel&quot;:[{&quot;id&quot;:&quot;54a4c800-4e4a-432a-aed9-24a7c6d3ae0a&quot;,&quot;options&quot;:[&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;==&quot;,&quot;Yes&quot;],&quot;escalationRule&quot;:&quot;Escalate&quot;,&quot;tagName&quot;:&quot;&quot;,&quot;tagValue&quot;:&quot;&quot;,&quot;wholeConditionInCodeForm&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31\u0001Yes\u0001==&quot;,&quot;ruleType&quot;:&quot;CREATE&quot;}]},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $questionLevel: [JSONObject]!, $escalationNameSingular: String, $escalationNamePlural: String) {\n  saveEscalationsSettings(campaignId: $campaignId, escalationNameSingular: $escalationNameSingular, escalationNamePlural: $escalationNamePlural, questionLevel: $questionLevel)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $questionLevel: [JSONObject]!, $escalationNameSingular: String, $escalationNamePlural: String) {
  saveEscalationsSettings(campaignId: $campaignId, escalationNameSingular: $escalationNameSingular, escalationNamePlural: $escalationNamePlural, questionLevel: $questionLevel)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;escalationNameSingular&quot;:&quot;Escalation&quot;,&quot;escalationNamePlural&quot;:&quot;Escalations&quot;,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;questionLevel&quot;:[{&quot;id&quot;:&quot;54a4c800-4e4a-432a-aed9-24a7c6d3ae0a&quot;,&quot;options&quot;:[&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;==&quot;,&quot;Yes&quot;],&quot;escalationRule&quot;:&quot;Escalate&quot;,&quot;tagName&quot;:&quot;&quot;,&quot;tagValue&quot;:&quot;&quot;,&quot;wholeConditionInCodeForm&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31\u0001Yes\u0001==&quot;,&quot;ruleType&quot;:&quot;CREATE&quot;}]}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="756 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;organizationId&quot;:&quot;05dba122-d253-4ef2-bebe-82b243549639&quot;,&quot;ruleType&quot;:&quot;CREATE&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!, $organizationId: ID!, $ruleType: String!) {\n  campaign(campaignId: $campaignId) {\n    escalationNameSingular\n    escalationNamePlural\n    questionnaire\n    questionLevelEscalationSetting(ruleType: $ruleType) {\n      id\n      wholeConditionInCodeForm\n      key\n      value\n      __typename\n    }\n    __typename\n  }\n  departments(organizationId: $organizationId) {\n    id\n    name\n    tags {\n      key\n      value\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!, $organizationId: ID!, $ruleType: String!) {
  campaign(campaignId: $campaignId) {
    escalationNameSingular
    escalationNamePlural
    questionnaire
    questionLevelEscalationSetting(ruleType: $ruleType) {
      id
      wholeConditionInCodeForm
      key
      value
      __typename
    }
    __typename
  }
  departments(organizationId: $organizationId) {
    id
    name
    tags {
      key
      value
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;organizationId&quot;:&quot;05dba122-d253-4ef2-bebe-82b243549639&quot;,&quot;ruleType&quot;:&quot;CREATE&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="757 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    questionnaire\n    users {\n      id\n      name\n      __typename\n    }\n    accessScopes {\n      id\n      name\n      scope\n      users {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    usersAccessScopes {\n      userId\n      accessScopeNames\n      scopes\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    questionnaire
    users {
      id
      name
      __typename
    }
    accessScopes {
      id
      name
      scope
      users {
        id
        name
        __typename
      }
      __typename
    }
    usersAccessScopes {
      userId
      accessScopeNames
      scopes
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="759 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;organizationId&quot;:&quot;05dba122-d253-4ef2-bebe-82b243549639&quot;,&quot;ruleType&quot;:&quot;CREATE&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!, $organizationId: ID!, $ruleType: String!) {\n  campaign(campaignId: $campaignId) {\n    escalationNameSingular\n    escalationNamePlural\n    questionnaire\n    questionLevelEscalationSetting(ruleType: $ruleType) {\n      id\n      wholeConditionInCodeForm\n      key\n      value\n      __typename\n    }\n    __typename\n  }\n  departments(organizationId: $organizationId) {\n    id\n    name\n    tags {\n      key\n      value\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!, $organizationId: ID!, $ruleType: String!) {
  campaign(campaignId: $campaignId) {
    escalationNameSingular
    escalationNamePlural
    questionnaire
    questionLevelEscalationSetting(ruleType: $ruleType) {
      id
      wholeConditionInCodeForm
      key
      value
      __typename
    }
    __typename
  }
  departments(organizationId: $organizationId) {
    id
    name
    tags {
      key
      value
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;organizationId&quot;:&quot;05dba122-d253-4ef2-bebe-82b243549639&quot;,&quot;ruleType&quot;:&quot;CREATE&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="761 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;allReasonsRequired&quot;:true},&quot;query&quot;:&quot;query ($campaignId: ID!, $allReasonsRequired: Boolean) {\n  campaign(campaignId: $campaignId) {\n    escalationReasons(allReasonsRequired: $allReasonsRequired) {\n      id\n      reason\n      isHidden\n      subReason(allReasonsRequired: $allReasonsRequired) {\n        id\n        name\n        isHidden\n        __typename\n      }\n      __typename\n    }\n    escalationActions {\n      id\n      actionName\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!, $allReasonsRequired: Boolean) {
  campaign(campaignId: $campaignId) {
    escalationReasons(allReasonsRequired: $allReasonsRequired) {
      id
      reason
      isHidden
      subReason(allReasonsRequired: $allReasonsRequired) {
        id
        name
        isHidden
        __typename
      }
      __typename
    }
    escalationActions {
      id
      actionName
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;allReasonsRequired&quot;:true}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="762 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    questionnaire\n    organizationId\n    closureSetting {\n      surveyCampaignId\n      templateId\n      questionMapping\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    questionnaire
    organizationId
    closureSetting {
      surveyCampaignId
      templateId
      questionMapping
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="760 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;allReasonsRequired&quot;:true},&quot;query&quot;:&quot;query ($campaignId: ID!, $allReasonsRequired: Boolean) {\n  campaign(campaignId: $campaignId) {\n    escalationReasons(allReasonsRequired: $allReasonsRequired) {\n      id\n      reason\n      __typename\n    }\n    questionnaire\n    allReasonsForQuestionValuePair\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!, $allReasonsRequired: Boolean) {
  campaign(campaignId: $campaignId) {
    escalationReasons(allReasonsRequired: $allReasonsRequired) {
      id
      reason
      __typename
    }
    questionnaire
    allReasonsForQuestionValuePair
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;allReasonsRequired&quot;:true}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="763 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;organizationId&quot;:&quot;05dba122-d253-4ef2-bebe-82b243549639&quot;},&quot;query&quot;:&quot;query ($organizationId: ID!) {\n  organization(organizationId: $organizationId) {\n    campaigns {\n      id\n      name\n      type\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($organizationId: ID!) {
  organization(organizationId: $organizationId) {
    campaigns {
      id
      name
      type
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;organizationId&quot;:&quot;05dba122-d253-4ef2-bebe-82b243549639&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="764 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    questionnaire\n    users {\n      id\n      name\n      __typename\n    }\n    accessScopes {\n      id\n      name\n      scope\n      users {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    usersAccessScopes {\n      userId\n      accessScopeNames\n      scopes\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    questionnaire
    users {
      id
      name
      __typename
    }
    accessScopes {
      id
      name
      scope
      users {
        id
        name
        __typename
      }
      __typename
    }
    usersAccessScopes {
      userId
      accessScopeNames
      scopes
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="766 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    benchmarkIndustry\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    benchmarkIndustry
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="767 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;benchmarkIndustry&quot;:&quot;a984fc81-c281-44c9-9968-97357cd253b4&quot;,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $benchmarkIndustry: String) {\n  updateCampaignSettings(campaignId: $campaignId, benchmarkIndustry: $benchmarkIndustry)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $benchmarkIndustry: String) {
  updateCampaignSettings(campaignId: $campaignId, benchmarkIndustry: $benchmarkIndustry)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;benchmarkIndustry&quot;:&quot;a984fc81-c281-44c9-9968-97357cd253b4&quot;,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="768 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    metricConfig {\n      id\n      campaignId\n      rangeStart\n      rangeEnd\n      detractorUpperRange\n      promoterLowerRange\n      type\n      promoterLabel\n      detractorLabel\n      passiveLabel\n      metricLabel\n      metricLabelShort\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    metricConfig {
      id
      campaignId
      rangeStart
      rangeEnd
      detractorUpperRange
      promoterLowerRange
      type
      promoterLabel
      detractorLabel
      passiveLabel
      metricLabel
      metricLabelShort
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="770 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;metricId&quot;:&quot;85223516-92f7-489c-801d-0ee8358e81eb&quot;,&quot;metricConfig&quot;:{&quot;type&quot;:&quot;NPS&quot;,&quot;metricLabel&quot;:&quot;Net Promoter Score&quot;,&quot;rangeStart&quot;:0,&quot;rangeEnd&quot;:15,&quot;detractorLabel&quot;:&quot;Detractor&quot;,&quot;promoterLabel&quot;:&quot;Promoter&quot;,&quot;passiveLabel&quot;:&quot;Passive&quot;,&quot;detractorUpperRange&quot;:6,&quot;promoterLowerRange&quot;:8,&quot;metricLabelShort&quot;:&quot;NPS&quot;}},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $metricId: ID!, $metricConfig: JSONObject!) {\n  updateMetricConfig(campaignId: $campaignId, metricId: $metricId, metricConfig: $metricConfig)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $metricId: ID!, $metricConfig: JSONObject!) {
  updateMetricConfig(campaignId: $campaignId, metricId: $metricId, metricConfig: $metricConfig)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;metricId&quot;:&quot;85223516-92f7-489c-801d-0ee8358e81eb&quot;,&quot;metricConfig&quot;:{&quot;type&quot;:&quot;NPS&quot;,&quot;metricLabel&quot;:&quot;Net Promoter Score&quot;,&quot;rangeStart&quot;:0,&quot;rangeEnd&quot;:15,&quot;detractorLabel&quot;:&quot;Detractor&quot;,&quot;promoterLabel&quot;:&quot;Promoter&quot;,&quot;passiveLabel&quot;:&quot;Passive&quot;,&quot;detractorUpperRange&quot;:6,&quot;promoterLowerRange&quot;:8,&quot;metricLabelShort&quot;:&quot;NPS&quot;}}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="771 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;isWithOptions&quot;:false},&quot;query&quot;:&quot;query ($campaignId: ID!, $isWithOptions: Boolean) {\n  questionnaire(campaignId: $campaignId, isWithOptions: $isWithOptions)\n  campaign(campaignId: $campaignId) {\n    users {\n      id\n      name\n      __typename\n    }\n    metricConfig {\n      id\n      campaignId\n      type\n      promoterLabel\n      detractorLabel\n      passiveLabel\n      __typename\n    }\n    departmentForAlerts\n    alertList {\n      id\n      name\n      users {\n        id\n        name\n        __typename\n      }\n      accessScopes\n      departments\n      __typename\n    }\n    accessScopes {\n      id\n      name\n      scope\n      users {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    usersAccessScopes {\n      userId\n      accessScopeNames\n      scopes\n      __typename\n    }\n    alertSettings {\n      durationInHours\n      alertListId\n      ruleType\n      thresholdCount\n      scheduledTime\n      alertFields\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!, $isWithOptions: Boolean) {
  questionnaire(campaignId: $campaignId, isWithOptions: $isWithOptions)
  campaign(campaignId: $campaignId) {
    users {
      id
      name
      __typename
    }
    metricConfig {
      id
      campaignId
      type
      promoterLabel
      detractorLabel
      passiveLabel
      __typename
    }
    departmentForAlerts
    alertList {
      id
      name
      users {
        id
        name
        __typename
      }
      accessScopes
      departments
      __typename
    }
    accessScopes {
      id
      name
      scope
      users {
        id
        name
        __typename
      }
      __typename
    }
    usersAccessScopes {
      userId
      accessScopeNames
      scopes
      __typename
    }
    alertSettings {
      durationInHours
      alertListId
      ruleType
      thresholdCount
      scheduledTime
      alertFields
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;isWithOptions&quot;:false}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="773 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    questionnaire\n    questionHierarchy {\n      questionId\n      parentQuestionId\n      value\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    questionnaire
    questionHierarchy {
      questionId
      parentQuestionId
      value
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="774 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;data&quot;:[],&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $data: [QuestionHierarchyInput!]!) {\n  saveQuestionHierarchy(campaignId: $campaignId, data: $data)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $data: [QuestionHierarchyInput!]!) {
  saveQuestionHierarchy(campaignId: $campaignId, data: $data)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;data&quot;:[],&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="775 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    questionnaire\n    questionHierarchy {\n      questionId\n      parentQuestionId\n      value\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    questionnaire
    questionHierarchy {
      questionId
      parentQuestionId
      value
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="777 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;data&quot;:[],&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $data: [QuestionHierarchyInput!]!) {\n  saveQuestionHierarchy(campaignId: $campaignId, data: $data)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $data: [QuestionHierarchyInput!]!) {
  saveQuestionHierarchy(campaignId: $campaignId, data: $data)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;data&quot;:[],&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="778 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    questionnaire\n    questionHierarchy {\n      questionId\n      parentQuestionId\n      value\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    questionnaire
    questionHierarchy {
      questionId
      parentQuestionId
      value
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="779 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    organizationId\n    dataRetentionPeriodInDays\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    organizationId
    dataRetentionPeriodInDays
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="780 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;organizationId&quot;:&quot;05dba122-d253-4ef2-bebe-82b243549639&quot;},&quot;query&quot;:&quot;query ($organizationId: ID!) {\n  organization(organizationId: $organizationId) {\n    dataRetentionPeriodInDays\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($organizationId: ID!) {
  organization(organizationId: $organizationId) {
    dataRetentionPeriodInDays
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;organizationId&quot;:&quot;05dba122-d253-4ef2-bebe-82b243549639&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="782 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    googleAnalyticsCode\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    googleAnalyticsCode
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="783 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;googleAnalyticsCode&quot;:null,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $googleAnalyticsCode: String) {\n  updateCampaignSettings(campaignId: $campaignId, googleAnalyticsCode: $googleAnalyticsCode)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $googleAnalyticsCode: String) {
  updateCampaignSettings(campaignId: $campaignId, googleAnalyticsCode: $googleAnalyticsCode)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;googleAnalyticsCode&quot;:null,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="784 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    googleAnalyticsCode\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    googleAnalyticsCode
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="786 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    allowPartialSubmit\n    tokenExpiryInHours\n    questionnaire\n    genericTranslationDetails {\n      shouldEscalatePartialResponse\n      escalationMetaDataFieldsToShowInMail\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    allowPartialSubmit
    tokenExpiryInHours
    questionnaire
    genericTranslationDetails {
      shouldEscalatePartialResponse
      escalationMetaDataFieldsToShowInMail
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="790 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  getAutoRedirectToNextPageConfiguration(campaignId: $campaignId)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  getAutoRedirectToNextPageConfiguration(campaignId: $campaignId)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="787 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  getBulletPointStatus(campaignId: $campaignId)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  getBulletPointStatus(campaignId: $campaignId)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="791 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  getFlagshowNpsDistributionVariationByResponseRate(campaignId: $campaignId)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  getFlagshowNpsDistributionVariationByResponseRate(campaignId: $campaignId)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="789 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    isDistributionEnable\n    isScheduleEnable\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    isDistributionEnable
    isScheduleEnable
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="792 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  getTextAnalysisStatus(campaignId: $campaignId)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  getTextAnalysisStatus(campaignId: $campaignId)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="788 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    questionnaire\n    quotaFill\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    questionnaire
    quotaFill
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="793 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  progressBarVisibilityStatus(campaignId: $campaignId)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  progressBarVisibilityStatus(campaignId: $campaignId)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="794 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  GetPredictiveAnalyticsStatus(campaignId: $campaignId)\n  GetRegressionAnalyticsStatus(campaignId: $campaignId)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  GetPredictiveAnalyticsStatus(campaignId: $campaignId)
  GetRegressionAnalyticsStatus(campaignId: $campaignId)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="795 - /api/graphql/ ()" enabled="true">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;tokenExpiryInHours&quot;:null,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;allowPartialSubmit&quot;:false,&quot;questionnaire&quot;:[{&quot;id&quot;:&quot;a6e8d6be-b7cd-4a9e-87b3-3ccc15656415&quot;,&quot;next&quot;:&quot;3ec401ca-46ff-4e02-a710-f9eeb81f1358&quot;,&quot;config&quot;:{&quot;conditions&quot;:[]},&quot;componentKind&quot;:&quot;NEW_PAGE&quot;},{&quot;id&quot;:&quot;3ec401ca-46ff-4e02-a710-f9eeb81f1358&quot;,&quot;next&quot;:&quot;b81df426-a535-4ea1-8d55-25f5f714e09b&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Phone&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Phone&quot;},&quot;previous&quot;:&quot;a6e8d6be-b7cd-4a9e-87b3-3ccc15656415&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;b81df426-a535-4ea1-8d55-25f5f714e09b&quot;,&quot;next&quot;:&quot;53338b2e-0abe-41ea-95b4-733db206f666&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;CDMS Response Id&quot;},&quot;previous&quot;:&quot;3ec401ca-46ff-4e02-a710-f9eeb81f1358&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;53338b2e-0abe-41ea-95b4-733db206f666&quot;,&quot;next&quot;:&quot;007eb910-e2fe-4fbd-8832-d00cb4fb6a55&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Customer Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Customer Name&quot;},&quot;previous&quot;:&quot;b81df426-a535-4ea1-8d55-25f5f714e09b&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;007eb910-e2fe-4fbd-8832-d00cb4fb6a55&quot;,&quot;next&quot;:&quot;fad810ea-517a-4d58-b397-f16225a64172&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;1&quot;,&quot;isClient&quot;:false,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ahmed ALnaqbi&quot;,&quot;value&quot;:&quot;ahmed ALnaqbi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ahmed ALnaqbi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Abdel Hamid&quot;,&quot;value&quot;:&quot;Ahmed Abdel Hamid&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Abdel Hamid&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;S BJ&quot;,&quot;value&quot;:&quot;S BJ&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;S BJ&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;???? ???????&quot;,&quot;value&quot;:&quot;???? ???????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;???? ???????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Osama Khairy&quot;,&quot;value&quot;:&quot;Osama Khairy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Osama Khairy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;musthafa dever parambil&quot;,&quot;value&quot;:&quot;musthafa dever parambil&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;musthafa dever parambil&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Tiger Noir&quot;,&quot;value&quot;:&quot;Tiger Noir&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Tiger Noir&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Salah Abu Yassin&quot;,&quot;value&quot;:&quot;Salah Abu Yassin&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Salah Abu Yassin&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rana AA&quot;,&quot;value&quot;:&quot;Rana AA&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rana AA&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Bahig Georgi&quot;,&quot;value&quot;:&quot;Bahig Georgi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Bahig Georgi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;AHMED ABOUELENIN&quot;,&quot;value&quot;:&quot;AHMED ABOUELENIN&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;AHMED ABOUELENIN&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;khalid al-aghbari&quot;,&quot;value&quot;:&quot;khalid al-aghbari&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;khalid al-aghbari&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ijaz Fuadh&quot;,&quot;value&quot;:&quot;Ijaz Fuadh&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ijaz Fuadh&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;vijayakumar Duraisamy&quot;,&quot;value&quot;:&quot;vijayakumar Duraisamy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;vijayakumar Duraisamy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;qw Q&quot;,&quot;value&quot;:&quot;qw Q&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;qw Q&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;????? ???&quot;,&quot;value&quot;:&quot;????? ???&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;????? ???&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ayoub LT&quot;,&quot;value&quot;:&quot;Ayoub LT&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ayoub LT&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;,&quot;value&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Akuamoah Boateng&quot;,&quot;value&quot;:&quot;Akuamoah Boateng&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Akuamoah Boateng&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sidhik M N&quot;,&quot;value&quot;:&quot;Sidhik M N&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sidhik M N&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nashid Kunookkara&quot;,&quot;value&quot;:&quot;Nashid Kunookkara&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nashid Kunookkara&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sudheesh Karikkad&quot;,&quot;value&quot;:&quot;Sudheesh Karikkad&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sudheesh Karikkad&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Ali&quot;,&quot;value&quot;:&quot;Ahmed Ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ziad Elbermawy&quot;,&quot;value&quot;:&quot;Ziad Elbermawy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ziad Elbermawy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Linda Wong&quot;,&quot;value&quot;:&quot;Linda Wong&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Linda Wong&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ferdous Alam Tohid&quot;,&quot;value&quot;:&quot;Ferdous Alam Tohid&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ferdous Alam Tohid&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Shiney Roberts&quot;,&quot;value&quot;:&quot;Shiney Roberts&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Shiney Roberts&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;kashif kora&quot;,&quot;value&quot;:&quot;kashif kora&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;kashif kora&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mukku Sisindri&quot;,&quot;value&quot;:&quot;Mukku Sisindri&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mukku Sisindri&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Avinash Padmashali&quot;,&quot;value&quot;:&quot;Avinash Padmashali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Avinash Padmashali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rashed Mood&quot;,&quot;value&quot;:&quot;Rashed Mood&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rashed Mood&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nahir Ahmed&quot;,&quot;value&quot;:&quot;Nahir Ahmed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nahir Ahmed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;???? ??????&quot;,&quot;value&quot;:&quot;???? ??????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;???? ??????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mo&apos;men Hussein&quot;,&quot;value&quot;:&quot;Mo&apos;men Hussein&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mo&apos;men Hussein&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Jalel Thebet&quot;,&quot;value&quot;:&quot;Jalel Thebet&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Jalel Thebet&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Abdullah Aldhabyani&quot;,&quot;value&quot;:&quot;Abdullah Aldhabyani&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Abdullah Aldhabyani&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Muhammad Ariyan Khan&quot;,&quot;value&quot;:&quot;Muhammad Ariyan Khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Muhammad Ariyan Khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;mostafa abdu&quot;,&quot;value&quot;:&quot;mostafa abdu&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;mostafa abdu&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Manoj Singh Rawat&quot;,&quot;value&quot;:&quot;Manoj Singh Rawat&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Manoj Singh Rawat&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;NEIL&quot;,&quot;value&quot;:&quot;NEIL&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;NEIL&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Deepak kumar&quot;,&quot;value&quot;:&quot;Deepak kumar&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Deepak kumar&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Roland Claudio&quot;,&quot;value&quot;:&quot;Roland Claudio&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Roland Claudio&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Simpow Gits&quot;,&quot;value&quot;:&quot;Simpow Gits&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Simpow Gits&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Brian Monteiro Takamori&quot;,&quot;value&quot;:&quot;Brian Monteiro Takamori&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Brian Monteiro Takamori&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;eecleonavarro&quot;,&quot;value&quot;:&quot;eecleonavarro&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;eecleonavarro&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Esraa Alshinnawy&quot;,&quot;value&quot;:&quot;Esraa Alshinnawy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Esraa Alshinnawy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;??? ??????&quot;,&quot;value&quot;:&quot;??? ??????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;??? ??????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;elhabbasi yassin&quot;,&quot;value&quot;:&quot;elhabbasi yassin&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;elhabbasi yassin&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ajran Zafar&quot;,&quot;value&quot;:&quot;Ajran Zafar&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ajran Zafar&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Inaleila Rambs&quot;,&quot;value&quot;:&quot;Inaleila Rambs&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Inaleila Rambs&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sean Trevin&quot;,&quot;value&quot;:&quot;Sean Trevin&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sean Trevin&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kutabala Lawrence&quot;,&quot;value&quot;:&quot;Kutabala Lawrence&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kutabala Lawrence&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;mohan patil&quot;,&quot;value&quot;:&quot;mohan patil&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;mohan patil&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;RedNinja Hussy&quot;,&quot;value&quot;:&quot;RedNinja Hussy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;RedNinja Hussy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;fire water&quot;,&quot;value&quot;:&quot;fire water&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;fire water&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Juliano Mitri&quot;,&quot;value&quot;:&quot;Juliano Mitri&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Juliano Mitri&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Yaser Abdalla&quot;,&quot;value&quot;:&quot;Yaser Abdalla&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Yaser Abdalla&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;?????? ??????? alrihab albarihuh&quot;,&quot;value&quot;:&quot;?????? ??????? alrihab albarihuh&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;?????? ??????? alrihab albarihuh&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;???? ????&quot;,&quot;value&quot;:&quot;???? ????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;???? ????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;md kaife&quot;,&quot;value&quot;:&quot;md kaife&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;md kaife&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;YOUSAF ALI&quot;,&quot;value&quot;:&quot;YOUSAF ALI&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;YOUSAF ALI&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sabin Katuwal&quot;,&quot;value&quot;:&quot;Sabin Katuwal&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sabin Katuwal&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mustafa khan&quot;,&quot;value&quot;:&quot;Mustafa khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mustafa khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Abdul Talim&quot;,&quot;value&quot;:&quot;Abdul Talim&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Abdul Talim&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Emad Ali&quot;,&quot;value&quot;:&quot;Emad Ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Emad Ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Hariram Sain&quot;,&quot;value&quot;:&quot;Hariram Sain&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Hariram Sain&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kevin Shyjo&quot;,&quot;value&quot;:&quot;Kevin Shyjo&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kevin Shyjo&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;??? ?????? ??????&quot;,&quot;value&quot;:&quot;??? ?????? ??????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;??? ?????? ??????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rowil Mg&quot;,&quot;value&quot;:&quot;Rowil Mg&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rowil Mg&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rashid ali khan&quot;,&quot;value&quot;:&quot;Rashid ali khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rashid ali khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Samoil Journalist&quot;,&quot;value&quot;:&quot;Samoil Journalist&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Samoil Journalist&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Hussam elshamy&quot;,&quot;value&quot;:&quot;Hussam elshamy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Hussam elshamy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Salahuddin Ahmed&quot;,&quot;value&quot;:&quot;Salahuddin Ahmed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Salahuddin Ahmed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;arun das&quot;,&quot;value&quot;:&quot;arun das&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;arun das&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kishan Pandit786&quot;,&quot;value&quot;:&quot;Kishan Pandit786&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kishan Pandit786&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;seif ahmed&quot;,&quot;value&quot;:&quot;seif ahmed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;seif ahmed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kei Takishima&quot;,&quot;value&quot;:&quot;Kei Takishima&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kei Takishima&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;awan saab&quot;,&quot;value&quot;:&quot;awan saab&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;awan saab&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;shiya maddy vlog&quot;,&quot;value&quot;:&quot;shiya maddy vlog&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;shiya maddy vlog&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mohammed Rifai&quot;,&quot;value&quot;:&quot;Mohammed Rifai&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mohammed Rifai&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ayesha s&quot;,&quot;value&quot;:&quot;ayesha s&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ayesha s&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Bahaa Q&quot;,&quot;value&quot;:&quot;Bahaa Q&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Bahaa Q&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sanil Stansilaus&quot;,&quot;value&quot;:&quot;Sanil Stansilaus&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sanil Stansilaus&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nishar Ali&quot;,&quot;value&quot;:&quot;Nishar Ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nishar Ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Hamdi&quot;,&quot;value&quot;:&quot;Ahmed Hamdi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Hamdi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Yassine Sarir&quot;,&quot;value&quot;:&quot;Yassine Sarir&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Yassine Sarir&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nikhil cm&quot;,&quot;value&quot;:&quot;Nikhil cm&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nikhil cm&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Khamees&quot;,&quot;value&quot;:&quot;Ahmed Khamees&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Khamees&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;vishnu devarajan&quot;,&quot;value&quot;:&quot;vishnu devarajan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;vishnu devarajan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rafael Jr Manuel&quot;,&quot;value&quot;:&quot;Rafael Jr Manuel&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rafael Jr Manuel&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Hammam&quot;,&quot;value&quot;:&quot;Hammam&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Hammam&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sabu Xaviour&quot;,&quot;value&quot;:&quot;Sabu Xaviour&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sabu Xaviour&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;arman ali ali&quot;,&quot;value&quot;:&quot;arman ali ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;arman ali ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;salah abdelraouf&quot;,&quot;value&quot;:&quot;salah abdelraouf&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;salah abdelraouf&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Soliman&quot;,&quot;value&quot;:&quot;Ahmed Soliman&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Soliman&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;??????? ??????? ??? ???????&quot;,&quot;value&quot;:&quot;??????? ??????? ??? ???????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;??????? ??????? ??? ???????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ayman Alatrash&quot;,&quot;value&quot;:&quot;Ayman Alatrash&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ayman Alatrash&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;mohamed ramadan&quot;,&quot;value&quot;:&quot;mohamed ramadan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;mohamed ramadan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;karim nada&quot;,&quot;value&quot;:&quot;karim nada&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;karim nada&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahamad Fadl ala 111&quot;,&quot;value&quot;:&quot;Ahamad Fadl ala 111&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahamad Fadl ala 111&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rida Elyaakkoubi&quot;,&quot;value&quot;:&quot;Rida Elyaakkoubi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rida Elyaakkoubi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;,&quot;value&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Quadeer Khan&quot;,&quot;value&quot;:&quot;Quadeer Khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Quadeer Khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;YASAR ARAFATH M.K&quot;,&quot;value&quot;:&quot;YASAR ARAFATH M.K&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;YASAR ARAFATH M.K&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ahmed zaki&quot;,&quot;value&quot;:&quot;ahmed zaki&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ahmed zaki&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mohammad Saeed&quot;,&quot;value&quot;:&quot;Mohammad Saeed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mohammad Saeed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ameer Thaj&quot;,&quot;value&quot;:&quot;Ameer Thaj&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ameer Thaj&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Jahangir Alam Alam&quot;,&quot;value&quot;:&quot;Jahangir Alam Alam&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Jahangir Alam Alam&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Shajahan hameed&quot;,&quot;value&quot;:&quot;Shajahan hameed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Shajahan hameed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Siraj Np&quot;,&quot;value&quot;:&quot;Siraj Np&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Siraj Np&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nausad Raza&quot;,&quot;value&quot;:&quot;Nausad Raza&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nausad Raza&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;O A&quot;,&quot;value&quot;:&quot;O A&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;O A&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Al Al&quot;,&quot;value&quot;:&quot;Al Al&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Al Al&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Tasnim Ur Rehman&quot;,&quot;value&quot;:&quot;Tasnim Ur Rehman&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Tasnim Ur Rehman&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;muhammed mujibur rahman&quot;,&quot;value&quot;:&quot;muhammed mujibur rahman&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;muhammed mujibur rahman&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Robin Kenyanya&quot;,&quot;value&quot;:&quot;Robin Kenyanya&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Robin Kenyanya&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user229&quot;,&quot;value&quot;:&quot;Test user229&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user229&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user227&quot;,&quot;value&quot;:&quot;Test user227&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user227&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user228&quot;,&quot;value&quot;:&quot;Test user228&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user228&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user225&quot;,&quot;value&quot;:&quot;Test user225&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user225&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user226&quot;,&quot;value&quot;:&quot;Test user226&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user226&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user230&quot;,&quot;value&quot;:&quot;Test user230&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user230&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user176&quot;,&quot;value&quot;:&quot;Test user176&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user176&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user194&quot;,&quot;value&quot;:&quot;Test user194&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user194&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user212&quot;,&quot;value&quot;:&quot;Test user212&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user212&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user205&quot;,&quot;value&quot;:&quot;Test user205&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user205&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user213&quot;,&quot;value&quot;:&quot;Test user213&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user213&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user207&quot;,&quot;value&quot;:&quot;Test user207&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user207&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user202&quot;,&quot;value&quot;:&quot;Test user202&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user202&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user191&quot;,&quot;value&quot;:&quot;Test user191&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user191&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user224&quot;,&quot;value&quot;:&quot;Test user224&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user224&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user208&quot;,&quot;value&quot;:&quot;Test user208&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user208&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user214&quot;,&quot;value&quot;:&quot;Test user214&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user214&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user198&quot;,&quot;value&quot;:&quot;Test user198&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user198&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user179&quot;,&quot;value&quot;:&quot;Test user179&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user179&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user177&quot;,&quot;value&quot;:&quot;Test user177&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user177&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user206&quot;,&quot;value&quot;:&quot;Test user206&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user206&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user220&quot;,&quot;value&quot;:&quot;Test user220&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user220&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user200&quot;,&quot;value&quot;:&quot;Test user200&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user200&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user216&quot;,&quot;value&quot;:&quot;Test user216&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user216&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user223&quot;,&quot;value&quot;:&quot;Test user223&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user223&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user210&quot;,&quot;value&quot;:&quot;Test user210&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user210&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user222&quot;,&quot;value&quot;:&quot;Test user222&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user222&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user189&quot;,&quot;value&quot;:&quot;Test user189&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user189&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user217&quot;,&quot;value&quot;:&quot;Test user217&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user217&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user193&quot;,&quot;value&quot;:&quot;Test user193&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user193&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user197&quot;,&quot;value&quot;:&quot;Test user197&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user197&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user221&quot;,&quot;value&quot;:&quot;Test user221&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user221&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user219&quot;,&quot;value&quot;:&quot;Test user219&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user219&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user183&quot;,&quot;value&quot;:&quot;Test user183&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user183&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user196&quot;,&quot;value&quot;:&quot;Test user196&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user196&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user195&quot;,&quot;value&quot;:&quot;Test user195&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user195&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user187&quot;,&quot;value&quot;:&quot;Test user187&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user187&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user203&quot;,&quot;value&quot;:&quot;Test user203&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user203&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user218&quot;,&quot;value&quot;:&quot;Test user218&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user218&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user215&quot;,&quot;value&quot;:&quot;Test user215&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user215&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user185&quot;,&quot;value&quot;:&quot;Test user185&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user185&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user192&quot;,&quot;value&quot;:&quot;Test user192&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user192&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user201&quot;,&quot;value&quot;:&quot;Test user201&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user201&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user209&quot;,&quot;value&quot;:&quot;Test user209&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user209&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user190&quot;,&quot;value&quot;:&quot;Test user190&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user190&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user180&quot;,&quot;value&quot;:&quot;Test user180&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user180&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user211&quot;,&quot;value&quot;:&quot;Test user211&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user211&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user199&quot;,&quot;value&quot;:&quot;Test user199&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user199&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user204&quot;,&quot;value&quot;:&quot;Test user204&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user204&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user188&quot;,&quot;value&quot;:&quot;Test user188&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user188&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user181&quot;,&quot;value&quot;:&quot;Test user181&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user181&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user182&quot;,&quot;value&quot;:&quot;Test user182&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user182&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user144&quot;,&quot;value&quot;:&quot;Test user144&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user144&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user145&quot;,&quot;value&quot;:&quot;Test user145&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user145&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user149&quot;,&quot;value&quot;:&quot;Test user149&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user149&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user143&quot;,&quot;value&quot;:&quot;Test user143&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user143&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user174&quot;,&quot;value&quot;:&quot;Test user174&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user174&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user153&quot;,&quot;value&quot;:&quot;Test user153&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user153&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user156&quot;,&quot;value&quot;:&quot;Test user156&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user156&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user162&quot;,&quot;value&quot;:&quot;Test user162&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user162&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user173&quot;,&quot;value&quot;:&quot;Test user173&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user173&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user160&quot;,&quot;value&quot;:&quot;Test user160&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user160&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user170&quot;,&quot;value&quot;:&quot;Test user170&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user170&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user167&quot;,&quot;value&quot;:&quot;Test user167&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user167&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user147&quot;,&quot;value&quot;:&quot;Test user147&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user147&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user175&quot;,&quot;value&quot;:&quot;Test user175&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user175&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user155&quot;,&quot;value&quot;:&quot;Test user155&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user155&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user141&quot;,&quot;value&quot;:&quot;Test user141&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user141&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user139&quot;,&quot;value&quot;:&quot;Test user139&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user139&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user138&quot;,&quot;value&quot;:&quot;Test user138&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user138&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user178&quot;,&quot;value&quot;:&quot;Test user178&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user178&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user171&quot;,&quot;value&quot;:&quot;Test user171&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user171&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user150&quot;,&quot;value&quot;:&quot;Test user150&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user150&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user158&quot;,&quot;value&quot;:&quot;Test user158&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user158&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user154&quot;,&quot;value&quot;:&quot;Test user154&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user154&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user184&quot;,&quot;value&quot;:&quot;Test user184&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user184&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user140&quot;,&quot;value&quot;:&quot;Test user140&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user140&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user146&quot;,&quot;value&quot;:&quot;Test user146&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user146&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user152&quot;,&quot;value&quot;:&quot;Test user152&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user152&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user165&quot;,&quot;value&quot;:&quot;Test user165&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user165&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user164&quot;,&quot;value&quot;:&quot;Test user164&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user164&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user159&quot;,&quot;value&quot;:&quot;Test user159&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user159&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user169&quot;,&quot;value&quot;:&quot;Test user169&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user169&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user161&quot;,&quot;value&quot;:&quot;Test user161&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user161&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user172&quot;,&quot;value&quot;:&quot;Test user172&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user172&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user168&quot;,&quot;value&quot;:&quot;Test user168&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user168&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user166&quot;,&quot;value&quot;:&quot;Test user166&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user166&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user148&quot;,&quot;value&quot;:&quot;Test user148&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user148&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user137&quot;,&quot;value&quot;:&quot;Test user137&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user137&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user157&quot;,&quot;value&quot;:&quot;Test user157&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user157&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user163&quot;,&quot;value&quot;:&quot;Test user163&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user163&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user186&quot;,&quot;value&quot;:&quot;Test user186&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user186&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user151&quot;,&quot;value&quot;:&quot;Test user151&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user151&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user130&quot;,&quot;value&quot;:&quot;Test user130&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user130&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user131&quot;,&quot;value&quot;:&quot;Test user131&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user131&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user134&quot;,&quot;value&quot;:&quot;Test user134&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user134&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user126&quot;,&quot;value&quot;:&quot;Test user126&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user126&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user127&quot;,&quot;value&quot;:&quot;Test user127&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user127&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user136&quot;,&quot;value&quot;:&quot;Test user136&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user136&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user142&quot;,&quot;value&quot;:&quot;Test user142&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user142&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Aayush Sharma&quot;,&quot;value&quot;:&quot;Aayush Sharma&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Aayush Sharma&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Aayush&quot;,&quot;value&quot;:&quot;Aayush&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Aayush&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;garima Sethi&quot;,&quot;value&quot;:&quot;garima Sethi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;garima Sethi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;hrushikesh Kulkarni&quot;,&quot;value&quot;:&quot;hrushikesh Kulkarni&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;hrushikesh Kulkarni&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Diwakar Singh Maurya&quot;,&quot;value&quot;:&quot;Diwakar Singh Maurya&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Diwakar Singh Maurya&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ashish Sharma&quot;,&quot;value&quot;:&quot;ashish Sharma&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ashish Sharma&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;subhanker Sarker&quot;,&quot;value&quot;:&quot;subhanker Sarker&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;subhanker Sarker&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;samridhi Srivastava&quot;,&quot;value&quot;:&quot;samridhi Srivastava&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;samridhi Srivastava&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Noor Siddiqui&quot;,&quot;value&quot;:&quot;Noor Siddiqui&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Noor Siddiqui&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Deepak Rana&quot;,&quot;value&quot;:&quot;Deepak Rana&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Deepak Rana&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Daryl Fernandes&quot;,&quot;value&quot;:&quot;Daryl Fernandes&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Daryl Fernandes&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rohit Dubey&quot;,&quot;value&quot;:&quot;Rohit Dubey&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rohit Dubey&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Faraz Khan&quot;,&quot;value&quot;:&quot;Faraz Khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Faraz Khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Vijay Ramachandran&quot;,&quot;value&quot;:&quot;Vijay Ramachandran&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Vijay Ramachandran&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Dealer Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Dealer Name&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Dealer Name&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;isACompetitorQuestion&quot;:false,&quot;multipleSelectionText&quot;:&quot; {{0}} &quot;,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false,&quot;shouldFillParticipantDataInOptions&quot;:false},&quot;previous&quot;:&quot;53338b2e-0abe-41ea-95b4-733db206f666&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;fad810ea-517a-4d58-b397-f16225a64172&quot;,&quot;next&quot;:&quot;a96e0e45-7d10-43c5-bee0-25794784ce00&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Outlet Location&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Outlet Location&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Outlet Location&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;007eb910-e2fe-4fbd-8832-d00cb4fb6a55&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;a96e0e45-7d10-43c5-bee0-25794784ce00&quot;,&quot;next&quot;:&quot;470fe5cc-723a-41d0-837c-b10402b93121&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Hello  ${qID://50a65a07-4cd2-496b-9239-b057b5f10bd9}, based on you recent experience with ${qID://e908a6e2-52a0-4efa-b07f-44d23a33220a/1}  situated at  ${qID://ab8d31bc-6716-41fd-8f63-4b8c5e4eb18d/1}&quot;,&quot;isRichTextEditorEnabled&quot;:false},&quot;previous&quot;:&quot;fad810ea-517a-4d58-b397-f16225a64172&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;},{&quot;id&quot;:&quot;470fe5cc-723a-41d0-837c-b10402b93121&quot;,&quot;next&quot;:&quot;2d610ddc-4c5b-46a0-9624-0b79e997ebba&quot;,&quot;config&quot;:{&quot;shortCode&quot;:&quot;NPS&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:true,&quot;ratingPoints&quot;:[{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;0&quot;,&quot;value&quot;:0,&quot;helpText&quot;:&quot;Not at all likely 👎&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;1&quot;,&quot;value&quot;:1,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;2&quot;,&quot;value&quot;:2,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;3&quot;,&quot;value&quot;:3,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;4&quot;,&quot;value&quot;:4,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;5&quot;,&quot;value&quot;:5,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;6&quot;,&quot;value&quot;:6,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#cacfd5&quot;,&quot;label&quot;:&quot;7&quot;,&quot;value&quot;:7,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#cacfd5&quot;,&quot;label&quot;:&quot;8&quot;,&quot;value&quot;:8,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#008000&quot;,&quot;label&quot;:&quot;9&quot;,&quot;value&quot;:9,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#008000&quot;,&quot;label&quot;:&quot;10&quot;,&quot;value&quot;:10,&quot;helpText&quot;:&quot;👍 Extremely likely&quot;}],&quot;isNPSQuestion&quot;:true,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Based on your recent showroom visit experience and interaction, how likely are you to recommend Bajaj Motorcycles to a friend or colleague?&quot;,&quot;notApplicableOption&quot;:{&quot;color&quot;:&quot;#6E6E6E&quot;,&quot;label&quot;:&quot;NA&quot;,&quot;value&quot;:&quot;NA&quot;,&quot;helpText&quot;:&quot;&quot;},&quot;enableNotApplicableOption&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;a96e0e45-7d10-43c5-bee0-25794784ce00&quot;,&quot;componentKind&quot;:&quot;RATING&quot;},{&quot;id&quot;:&quot;2d610ddc-4c5b-46a0-9624-0b79e997ebba&quot;,&quot;next&quot;:&quot;36669627-3000-4b75-999b-e0ffc2cc610b&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Based on your showroom visit experience, could you please tell us which of the following would you not recommend? 👎&quot;,&quot;isRichTextEditorEnabled&quot;:false},&quot;previous&quot;:&quot;470fe5cc-723a-41d0-837c-b10402b93121&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;},{&quot;id&quot;:&quot;36669627-3000-4b75-999b-e0ffc2cc610b&quot;,&quot;next&quot;:&quot;a19d7322-d86d-4517-8208-551e4c3f36e4&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Based on your showroom visit experience, could you please tell us which of the following would you recommend?  👍&quot;,&quot;isRichTextEditorEnabled&quot;:false},&quot;previous&quot;:&quot;2d610ddc-4c5b-46a0-9624-0b79e997ebba&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;},{&quot;id&quot;:&quot;a19d7322-d86d-4517-8208-551e4c3f36e4&quot;,&quot;next&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;config&quot;:{&quot;override&quot;:false,&quot;shortCode&quot;:&quot;__MCQ_DrilldownQu__Like/dislike&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:true,&quot;questionId&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;&quot;,&quot;drilldownQuestions&quot;:[{&quot;label&quot;:&quot;Products&quot;,&quot;value&quot;:&quot;1&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Products available on display or purchase&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Availability of different colors&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Range of products under company brand&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Product performance actual v/s promised&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;isRequired&quot;:false,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/bike-black.svg&quot;,&quot;questionId&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:false,&quot;questionShortCode&quot;:&quot;Products&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Accessibility of showrooms&quot;,&quot;value&quot;:&quot;2&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Distance to showroom&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Connectivity to location (Ease of Access)&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of identifying showrooms&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;isRequired&quot;:false,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/maps-black.svg&quot;,&quot;questionId&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:false,&quot;questionShortCode&quot;:&quot;Accessibility of showrooms&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Showroom infrastructure&quot;,&quot;value&quot;:&quot;3&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Quality of product display/demos&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Availability of parking&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Provision of seating area&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Provision for refreshments&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Cleanliness of showroom&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;isRequired&quot;:false,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/showroom-black.svg&quot;,&quot;questionId&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:false,&quot;questionShortCode&quot;:&quot;Showroom infrastructure&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Sales team interactions&quot;,&quot;value&quot;:&quot;4&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Waiting time&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Product knowledge of sales staff&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Accuracy of information provided&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Friendliness and Professionalism of sales team / Behaviour of Sales Team&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Availability of brochures with product information; use of digital media to showcase products&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Product demonstration&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Call backs with offers (in case visit did not lead to purchase)&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Fluency of sales team in the local language&quot;,&quot;value&quot;:&quot;8&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Prior awareness of sales team about customer preferences&quot;,&quot;value&quot;:&quot;9&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/person-black.svg&quot;,&quot;questionId&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Sales team interactions&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Test ride experience&quot;,&quot;value&quot;:&quot;5&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of slots for test ride&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of testride booking.&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Quality of route for test ride / Quaility of Test Ride Route&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Length of test ride&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Quality of bike used for the test ride&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/bike-black.svg&quot;,&quot;questionId&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Test ride experience&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Purchase formalities&quot;,&quot;value&quot;:&quot;6&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Provision for allocation of specific chassis/ Vehicle based on preference&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of payment and billing; time taken to invoice&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of registration procedure; time for RTO approval&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of tracking RTO / HSRP process&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of Insurance procedure (ease of purchase, price etc.)&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Vehicle Delivery promised Vs actual / Time to road actual v/s estimated&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;One time collection of data / document&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/purchase-black.svg&quot;,&quot;questionId&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Purchase formalities&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Exchange experience&quot;,&quot;value&quot;:&quot;7&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of different broker options for exchange&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Number of documents required&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Exchange value&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Experience with exchange related services (pick up of vehicle, document transfer, etc.,)&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/exchange-black.svg&quot;,&quot;questionId&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Exchange experience&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;value&quot;:&quot;8&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Ex-showroom price / Pricing (Ex Shpowroom &amp; On Road Price)&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Dealer handling charges&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Registration fee&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Charges for additional services&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;On road price&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Attractiveness of discounts and schemes&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Freebies&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/price-black.svg&quot;,&quot;questionId&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;questionStatement&quot;:&quot;&quot;}],&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;36669627-3000-4b75-999b-e0ffc2cc610b&quot;,&quot;componentKind&quot;:&quot;MCQ_DRILLDOWN&quot;},{&quot;id&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;next&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Products&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Accessibility of showrooms&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Showroom infrastructure&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sales team interactions&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test ride experience&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Purchase formalities&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Exchange experience&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;value&quot;:&quot;8&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Like/dislike&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:true,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;a19d7322-d86d-4517-8208-551e4c3f36e4&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;next&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Products available on display or purchase&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Availability of different colors&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Range of products under company brand&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Product performance actual v/s promised&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Products&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Products&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;next&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Distance to showroom&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Connectivity to location (Ease of Access)&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of identifying showrooms&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Accessibility of showrooms&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Accessibility of showrooms&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;next&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Quality of product display/demos&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Availability of parking&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Provision of seating area&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Provision for refreshments&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Cleanliness of showroom&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Showroom infrastructure&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Showroom infrastructure&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;next&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Waiting time&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Product knowledge of sales staff&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Accuracy of information provided&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Friendliness and Professionalism of sales team / Behaviour of Sales Team&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Availability of brochures with product information; use of digital media to showcase products&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Product demonstration&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Call backs with offers (in case visit did not lead to purchase)&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Fluency of sales team in the local language&quot;,&quot;value&quot;:&quot;8&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Prior awareness of sales team about customer preferences&quot;,&quot;value&quot;:&quot;9&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Sales team interactions&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Sales team interactions&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;next&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of slots for test ride&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of testride booking.&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Quality of route for test ride / Quaility of Test Ride Route&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Length of test ride&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Quality of bike used for the test ride&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Test ride experience&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Test ride experience&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;next&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Provision for allocation of specific chassis/ Vehicle based on preference&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of payment and billing; time taken to invoice&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of registration procedure; time for RTO approval&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of tracking RTO / HSRP process&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of Insurance procedure (ease of purchase, price etc.)&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Vehicle Delivery promised Vs actual / Time to road actual v/s estimated&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;One time collection of data / document&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Purchase formalities&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Purchase formalities&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;next&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of different broker options for exchange&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Number of documents required&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Exchange value&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Experience with exchange related services (pick up of vehicle, document transfer, etc.,)&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Exchange experience&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Exchange experience&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;next&quot;:&quot;5f4380eb-06ad-4dcf-ab54-69e056eaefb1&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Ex-showroom price / Pricing (Ex Shpowroom &amp; On Road Price)&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Dealer handling charges&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Registration fee&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Charges for additional services&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;On road price&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Attractiveness of discounts and schemes&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Freebies&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Prices, discounts and promotional schemes&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;5f4380eb-06ad-4dcf-ab54-69e056eaefb1&quot;,&quot;next&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;config&quot;:{&quot;maxWords&quot;:300,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Open_End&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:true,&quot;showAsReadOnly&quot;:false,&quot;placeHolderText&quot;:&quot;Your feedback will help us improve.&quot;,&quot;questionStatement&quot;:&quot;Do you have any other suggestions for us to improve your experience?&quot;},&quot;previous&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;next&quot;:&quot;3e34b168-e083-4b8a-b565-e56baf18f72f&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;Would you be willing to participate in a call-back?&quot;,&quot;value&quot;:&quot;Yes&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Call-back&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;CHECKBOXES&quot;,&quot;defaultAnswer&quot;:[&quot;Yes&quot;],&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Would you be willing to participate in a call-back?&quot;,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;5f4380eb-06ad-4dcf-ab54-69e056eaefb1&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;3e34b168-e083-4b8a-b565-e56baf18f72f&quot;,&quot;next&quot;:&quot;77d8bff6-9506-4974-bab1-0a42a5043476&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Doc Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Doc Name&quot;},&quot;previous&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;77d8bff6-9506-4974-bab1-0a42a5043476&quot;,&quot;next&quot;:&quot;75e8a0df-6195-4f8c-96b1-83fa0d6b70bb&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Doc ID&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Doc ID&quot;},&quot;previous&quot;:&quot;3e34b168-e083-4b8a-b565-e56baf18f72f&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;75e8a0df-6195-4f8c-96b1-83fa0d6b70bb&quot;,&quot;next&quot;:&quot;7fcc0f6d-eeb8-4f18-83f6-95b68e196240&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Enquiry Creation Date&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Enquiry Creation Date&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Enquiry Creation Date&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;77d8bff6-9506-4974-bab1-0a42a5043476&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;7fcc0f6d-eeb8-4f18-83f6-95b68e196240&quot;,&quot;next&quot;:&quot;dc36b778-3dde-455f-b9c1-9f7c0b089dc1&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Enquiry Type&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Enquiry Type&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Enquiry Type&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;75e8a0df-6195-4f8c-96b1-83fa0d6b70bb&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;dc36b778-3dde-455f-b9c1-9f7c0b089dc1&quot;,&quot;next&quot;:&quot;6c1593c7-8ae4-4b85-a5b4-2e793c18317c&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Sales Advisor&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Sales Advisor&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Sales Advisor&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;7fcc0f6d-eeb8-4f18-83f6-95b68e196240&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;6c1593c7-8ae4-4b85-a5b4-2e793c18317c&quot;,&quot;next&quot;:&quot;34a7f45b-de2c-490d-b730-019989e39ad0&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Customer Mobile number&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Customer Mobile number&quot;},&quot;previous&quot;:&quot;dc36b778-3dde-455f-b9c1-9f7c0b089dc1&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;34a7f45b-de2c-490d-b730-019989e39ad0&quot;,&quot;next&quot;:&quot;6c782dc2-8336-4872-94a1-8d2e49e18845&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Customer ID&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Customer ID&quot;},&quot;previous&quot;:&quot;6c1593c7-8ae4-4b85-a5b4-2e793c18317c&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;6c782dc2-8336-4872-94a1-8d2e49e18845&quot;,&quot;next&quot;:&quot;8a24f8f1-a2ac-4053-904f-8c1e5787aa02&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Preferred language&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Preferred language&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Preferred language&quot;,&quot;isLanguageController&quot;:true,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;34a7f45b-de2c-490d-b730-019989e39ad0&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;8a24f8f1-a2ac-4053-904f-8c1e5787aa02&quot;,&quot;next&quot;:&quot;2beb434c-97d2-4166-863a-c95162b89ce1&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Dealer Code&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Dealer Code&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Dealer Code&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;6c782dc2-8336-4872-94a1-8d2e49e18845&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;2beb434c-97d2-4166-863a-c95162b89ce1&quot;,&quot;next&quot;:&quot;df23f48f-97ae-4972-80e5-f677693b311a&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Branch Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Branch Name&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Branch Name&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;8a24f8f1-a2ac-4053-904f-8c1e5787aa02&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;df23f48f-97ae-4972-80e5-f677693b311a&quot;,&quot;next&quot;:&quot;4c719cc3-be5b-4083-aa0a-d8ff6c8fa84a&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Branch Code&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Branch Code&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Branch Code&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;2beb434c-97d2-4166-863a-c95162b89ce1&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;4c719cc3-be5b-4083-aa0a-d8ff6c8fa84a&quot;,&quot;next&quot;:&quot;4050fca4-d989-41cd-860d-6442936c7868&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Branch Location&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Branch Location&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Branch Location&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;df23f48f-97ae-4972-80e5-f677693b311a&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;4050fca4-d989-41cd-860d-6442936c7868&quot;,&quot;next&quot;:&quot;3f2b9635-4c1e-4e30-8793-071b6a281320&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Episode&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Episode&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Episode&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;4c719cc3-be5b-4083-aa0a-d8ff6c8fa84a&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;3f2b9635-4c1e-4e30-8793-071b6a281320&quot;,&quot;next&quot;:&quot;fe22f26a-95a5-46fe-85c8-5334a48c35cf&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Business Unit&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Business Unit&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Business Unit&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;4050fca4-d989-41cd-860d-6442936c7868&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;fe22f26a-95a5-46fe-85c8-5334a48c35cf&quot;,&quot;next&quot;:&quot;4cf70b6c-e8d8-4085-ad51-8a2a76ea8d2e&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;OTP Verification Trend&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;OTP Verification Trend&quot;,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;3f2b9635-4c1e-4e30-8793-071b6a281320&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;4cf70b6c-e8d8-4085-ad51-8a2a76ea8d2e&quot;,&quot;next&quot;:&quot;670c10e0-280b-451e-ae16-d6fccae52bf7&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Circle&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Circle&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Circle&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;fe22f26a-95a5-46fe-85c8-5334a48c35cf&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;670c10e0-280b-451e-ae16-d6fccae52bf7&quot;,&quot;next&quot;:&quot;dfc430b6-2512-4420-91b6-0dd2e47ff736&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Region&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Region&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Region&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;4cf70b6c-e8d8-4085-ad51-8a2a76ea8d2e&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;dfc430b6-2512-4420-91b6-0dd2e47ff736&quot;,&quot;next&quot;:&quot;f1c5310d-4547-4633-9b80-54fbe9f03183&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;ASM&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;ASM&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;ASM&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;670c10e0-280b-451e-ae16-d6fccae52bf7&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;f1c5310d-4547-4633-9b80-54fbe9f03183&quot;,&quot;next&quot;:&quot;f59f7ca8-5321-4b63-83b9-616dc7f51dee&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;City&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;City&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;City&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;dfc430b6-2512-4420-91b6-0dd2e47ff736&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;f59f7ca8-5321-4b63-83b9-616dc7f51dee&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Terms  | Disclaimer  | Privacy Policy \u0001Copyright © 2021 Bajaj Auto Ltd. All rights reserved&quot;,&quot;isRichTextEditorEnabled&quot;:true,&quot;questionStatementRichText&quot;:{&quot;blocks&quot;:[{&quot;key&quot;:&quot;djaps&quot;,&quot;data&quot;:{&quot;text-align&quot;:&quot;center&quot;},&quot;text&quot;:&quot;Terms  | Disclaimer  | Privacy Policy &quot;,&quot;type&quot;:&quot;unstyled&quot;,&quot;depth&quot;:0,&quot;entityRanges&quot;:[{&quot;key&quot;:0,&quot;length&quot;:5,&quot;offset&quot;:0},{&quot;key&quot;:1,&quot;length&quot;:10,&quot;offset&quot;:9},{&quot;key&quot;:2,&quot;length&quot;:14,&quot;offset&quot;:23}],&quot;inlineStyleRanges&quot;:[]},{&quot;key&quot;:&quot;40mpr&quot;,&quot;data&quot;:{&quot;text-align&quot;:&quot;center&quot;},&quot;text&quot;:&quot;Copyright © 2021 Bajaj Auto Ltd. All rights reserved&quot;,&quot;type&quot;:&quot;unstyled&quot;,&quot;depth&quot;:0,&quot;entityRanges&quot;:[],&quot;inlineStyleRanges&quot;:[]}],&quot;entityMap&quot;:{&quot;0&quot;:{&quot;data&quot;:{&quot;url&quot;:&quot;${scheme}://www.bajajauto.com/onlinebooking-tnc&quot;,&quot;targetOption&quot;:&quot;_blank&quot;},&quot;type&quot;:&quot;LINK&quot;,&quot;mutability&quot;:&quot;MUTABLE&quot;},&quot;1&quot;:{&quot;data&quot;:{&quot;url&quot;:&quot;${scheme}://www.bajajauto.com/disclaimer&quot;,&quot;targetOption&quot;:&quot;_blank&quot;},&quot;type&quot;:&quot;LINK&quot;,&quot;mutability&quot;:&quot;MUTABLE&quot;},&quot;2&quot;:{&quot;data&quot;:{&quot;url&quot;:&quot;${scheme}://www.bajajauto.com/privacy-policy&quot;,&quot;targetOption&quot;:&quot;_blank&quot;},&quot;type&quot;:&quot;LINK&quot;,&quot;mutability&quot;:&quot;MUTABLE&quot;}}}},&quot;previous&quot;:&quot;f1c5310d-4547-4633-9b80-54fbe9f03183&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;}]},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $allowPartialSubmit: Boolean!, $tokenExpiryInHours: Int, $questionnaire: [JSONObject!]!) {\n  updateCampaignSettings(campaignId: $campaignId, allowPartialSubmit: $allowPartialSubmit, tokenExpiryInHours: $tokenExpiryInHours, questionnaire: $questionnaire)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $allowPartialSubmit: Boolean!, $tokenExpiryInHours: Int, $questionnaire: [JSONObject!]!) {
  updateCampaignSettings(campaignId: $campaignId, allowPartialSubmit: $allowPartialSubmit, tokenExpiryInHours: $tokenExpiryInHours, questionnaire: $questionnaire)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;tokenExpiryInHours&quot;:null,&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;allowPartialSubmit&quot;:false,&quot;questionnaire&quot;:[{&quot;id&quot;:&quot;a6e8d6be-b7cd-4a9e-87b3-3ccc15656415&quot;,&quot;next&quot;:&quot;3ec401ca-46ff-4e02-a710-f9eeb81f1358&quot;,&quot;config&quot;:{&quot;conditions&quot;:[]},&quot;componentKind&quot;:&quot;NEW_PAGE&quot;},{&quot;id&quot;:&quot;3ec401ca-46ff-4e02-a710-f9eeb81f1358&quot;,&quot;next&quot;:&quot;b81df426-a535-4ea1-8d55-25f5f714e09b&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Phone&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Phone&quot;},&quot;previous&quot;:&quot;a6e8d6be-b7cd-4a9e-87b3-3ccc15656415&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;b81df426-a535-4ea1-8d55-25f5f714e09b&quot;,&quot;next&quot;:&quot;53338b2e-0abe-41ea-95b4-733db206f666&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;CDMS Response Id&quot;},&quot;previous&quot;:&quot;3ec401ca-46ff-4e02-a710-f9eeb81f1358&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;53338b2e-0abe-41ea-95b4-733db206f666&quot;,&quot;next&quot;:&quot;007eb910-e2fe-4fbd-8832-d00cb4fb6a55&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Customer Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Customer Name&quot;},&quot;previous&quot;:&quot;b81df426-a535-4ea1-8d55-25f5f714e09b&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;007eb910-e2fe-4fbd-8832-d00cb4fb6a55&quot;,&quot;next&quot;:&quot;fad810ea-517a-4d58-b397-f16225a64172&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;1&quot;,&quot;isClient&quot;:false,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ahmed ALnaqbi&quot;,&quot;value&quot;:&quot;ahmed ALnaqbi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ahmed ALnaqbi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Abdel Hamid&quot;,&quot;value&quot;:&quot;Ahmed Abdel Hamid&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Abdel Hamid&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;S BJ&quot;,&quot;value&quot;:&quot;S BJ&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;S BJ&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;???? ???????&quot;,&quot;value&quot;:&quot;???? ???????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;???? ???????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Osama Khairy&quot;,&quot;value&quot;:&quot;Osama Khairy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Osama Khairy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;musthafa dever parambil&quot;,&quot;value&quot;:&quot;musthafa dever parambil&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;musthafa dever parambil&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Tiger Noir&quot;,&quot;value&quot;:&quot;Tiger Noir&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Tiger Noir&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Salah Abu Yassin&quot;,&quot;value&quot;:&quot;Salah Abu Yassin&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Salah Abu Yassin&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rana AA&quot;,&quot;value&quot;:&quot;Rana AA&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rana AA&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Bahig Georgi&quot;,&quot;value&quot;:&quot;Bahig Georgi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Bahig Georgi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;AHMED ABOUELENIN&quot;,&quot;value&quot;:&quot;AHMED ABOUELENIN&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;AHMED ABOUELENIN&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;khalid al-aghbari&quot;,&quot;value&quot;:&quot;khalid al-aghbari&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;khalid al-aghbari&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ijaz Fuadh&quot;,&quot;value&quot;:&quot;Ijaz Fuadh&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ijaz Fuadh&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;vijayakumar Duraisamy&quot;,&quot;value&quot;:&quot;vijayakumar Duraisamy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;vijayakumar Duraisamy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;qw Q&quot;,&quot;value&quot;:&quot;qw Q&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;qw Q&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;????? ???&quot;,&quot;value&quot;:&quot;????? ???&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;????? ???&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ayoub LT&quot;,&quot;value&quot;:&quot;Ayoub LT&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ayoub LT&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;,&quot;value&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ranjith Chemmad CHEMMADAN&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Akuamoah Boateng&quot;,&quot;value&quot;:&quot;Akuamoah Boateng&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Akuamoah Boateng&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sidhik M N&quot;,&quot;value&quot;:&quot;Sidhik M N&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sidhik M N&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nashid Kunookkara&quot;,&quot;value&quot;:&quot;Nashid Kunookkara&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nashid Kunookkara&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sudheesh Karikkad&quot;,&quot;value&quot;:&quot;Sudheesh Karikkad&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sudheesh Karikkad&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Ali&quot;,&quot;value&quot;:&quot;Ahmed Ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ziad Elbermawy&quot;,&quot;value&quot;:&quot;Ziad Elbermawy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ziad Elbermawy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Linda Wong&quot;,&quot;value&quot;:&quot;Linda Wong&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Linda Wong&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ferdous Alam Tohid&quot;,&quot;value&quot;:&quot;Ferdous Alam Tohid&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ferdous Alam Tohid&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Shiney Roberts&quot;,&quot;value&quot;:&quot;Shiney Roberts&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Shiney Roberts&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;kashif kora&quot;,&quot;value&quot;:&quot;kashif kora&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;kashif kora&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mukku Sisindri&quot;,&quot;value&quot;:&quot;Mukku Sisindri&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mukku Sisindri&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Avinash Padmashali&quot;,&quot;value&quot;:&quot;Avinash Padmashali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Avinash Padmashali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rashed Mood&quot;,&quot;value&quot;:&quot;Rashed Mood&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rashed Mood&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nahir Ahmed&quot;,&quot;value&quot;:&quot;Nahir Ahmed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nahir Ahmed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;???? ??????&quot;,&quot;value&quot;:&quot;???? ??????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;???? ??????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mo&apos;men Hussein&quot;,&quot;value&quot;:&quot;Mo&apos;men Hussein&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mo&apos;men Hussein&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Jalel Thebet&quot;,&quot;value&quot;:&quot;Jalel Thebet&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Jalel Thebet&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Abdullah Aldhabyani&quot;,&quot;value&quot;:&quot;Abdullah Aldhabyani&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Abdullah Aldhabyani&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Muhammad Ariyan Khan&quot;,&quot;value&quot;:&quot;Muhammad Ariyan Khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Muhammad Ariyan Khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;mostafa abdu&quot;,&quot;value&quot;:&quot;mostafa abdu&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;mostafa abdu&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Manoj Singh Rawat&quot;,&quot;value&quot;:&quot;Manoj Singh Rawat&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Manoj Singh Rawat&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;NEIL&quot;,&quot;value&quot;:&quot;NEIL&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;NEIL&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Deepak kumar&quot;,&quot;value&quot;:&quot;Deepak kumar&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Deepak kumar&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Roland Claudio&quot;,&quot;value&quot;:&quot;Roland Claudio&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Roland Claudio&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Simpow Gits&quot;,&quot;value&quot;:&quot;Simpow Gits&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Simpow Gits&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Brian Monteiro Takamori&quot;,&quot;value&quot;:&quot;Brian Monteiro Takamori&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Brian Monteiro Takamori&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;eecleonavarro&quot;,&quot;value&quot;:&quot;eecleonavarro&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;eecleonavarro&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Esraa Alshinnawy&quot;,&quot;value&quot;:&quot;Esraa Alshinnawy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Esraa Alshinnawy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;??? ??????&quot;,&quot;value&quot;:&quot;??? ??????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;??? ??????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;elhabbasi yassin&quot;,&quot;value&quot;:&quot;elhabbasi yassin&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;elhabbasi yassin&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ajran Zafar&quot;,&quot;value&quot;:&quot;Ajran Zafar&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ajran Zafar&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Inaleila Rambs&quot;,&quot;value&quot;:&quot;Inaleila Rambs&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Inaleila Rambs&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sean Trevin&quot;,&quot;value&quot;:&quot;Sean Trevin&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sean Trevin&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kutabala Lawrence&quot;,&quot;value&quot;:&quot;Kutabala Lawrence&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kutabala Lawrence&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;mohan patil&quot;,&quot;value&quot;:&quot;mohan patil&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;mohan patil&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;RedNinja Hussy&quot;,&quot;value&quot;:&quot;RedNinja Hussy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;RedNinja Hussy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;fire water&quot;,&quot;value&quot;:&quot;fire water&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;fire water&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Juliano Mitri&quot;,&quot;value&quot;:&quot;Juliano Mitri&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Juliano Mitri&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Yaser Abdalla&quot;,&quot;value&quot;:&quot;Yaser Abdalla&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Yaser Abdalla&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;?????? ??????? alrihab albarihuh&quot;,&quot;value&quot;:&quot;?????? ??????? alrihab albarihuh&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;?????? ??????? alrihab albarihuh&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;???? ????&quot;,&quot;value&quot;:&quot;???? ????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;???? ????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;md kaife&quot;,&quot;value&quot;:&quot;md kaife&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;md kaife&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;YOUSAF ALI&quot;,&quot;value&quot;:&quot;YOUSAF ALI&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;YOUSAF ALI&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sabin Katuwal&quot;,&quot;value&quot;:&quot;Sabin Katuwal&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sabin Katuwal&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mustafa khan&quot;,&quot;value&quot;:&quot;Mustafa khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mustafa khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Abdul Talim&quot;,&quot;value&quot;:&quot;Abdul Talim&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Abdul Talim&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Emad Ali&quot;,&quot;value&quot;:&quot;Emad Ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Emad Ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Hariram Sain&quot;,&quot;value&quot;:&quot;Hariram Sain&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Hariram Sain&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kevin Shyjo&quot;,&quot;value&quot;:&quot;Kevin Shyjo&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kevin Shyjo&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;??? ?????? ??????&quot;,&quot;value&quot;:&quot;??? ?????? ??????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;??? ?????? ??????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rowil Mg&quot;,&quot;value&quot;:&quot;Rowil Mg&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rowil Mg&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rashid ali khan&quot;,&quot;value&quot;:&quot;Rashid ali khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rashid ali khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Samoil Journalist&quot;,&quot;value&quot;:&quot;Samoil Journalist&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Samoil Journalist&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Hussam elshamy&quot;,&quot;value&quot;:&quot;Hussam elshamy&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Hussam elshamy&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Salahuddin Ahmed&quot;,&quot;value&quot;:&quot;Salahuddin Ahmed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Salahuddin Ahmed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;arun das&quot;,&quot;value&quot;:&quot;arun das&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;arun das&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kishan Pandit786&quot;,&quot;value&quot;:&quot;Kishan Pandit786&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kishan Pandit786&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;seif ahmed&quot;,&quot;value&quot;:&quot;seif ahmed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;seif ahmed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Kei Takishima&quot;,&quot;value&quot;:&quot;Kei Takishima&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Kei Takishima&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;awan saab&quot;,&quot;value&quot;:&quot;awan saab&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;awan saab&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;shiya maddy vlog&quot;,&quot;value&quot;:&quot;shiya maddy vlog&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;shiya maddy vlog&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mohammed Rifai&quot;,&quot;value&quot;:&quot;Mohammed Rifai&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mohammed Rifai&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ayesha s&quot;,&quot;value&quot;:&quot;ayesha s&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ayesha s&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Bahaa Q&quot;,&quot;value&quot;:&quot;Bahaa Q&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Bahaa Q&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sanil Stansilaus&quot;,&quot;value&quot;:&quot;Sanil Stansilaus&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sanil Stansilaus&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nishar Ali&quot;,&quot;value&quot;:&quot;Nishar Ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nishar Ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Hamdi&quot;,&quot;value&quot;:&quot;Ahmed Hamdi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Hamdi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Yassine Sarir&quot;,&quot;value&quot;:&quot;Yassine Sarir&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Yassine Sarir&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nikhil cm&quot;,&quot;value&quot;:&quot;Nikhil cm&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nikhil cm&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Khamees&quot;,&quot;value&quot;:&quot;Ahmed Khamees&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Khamees&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;vishnu devarajan&quot;,&quot;value&quot;:&quot;vishnu devarajan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;vishnu devarajan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rafael Jr Manuel&quot;,&quot;value&quot;:&quot;Rafael Jr Manuel&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rafael Jr Manuel&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Hammam&quot;,&quot;value&quot;:&quot;Hammam&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Hammam&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sabu Xaviour&quot;,&quot;value&quot;:&quot;Sabu Xaviour&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Sabu Xaviour&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;arman ali ali&quot;,&quot;value&quot;:&quot;arman ali ali&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;arman ali ali&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;salah abdelraouf&quot;,&quot;value&quot;:&quot;salah abdelraouf&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;salah abdelraouf&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahmed Soliman&quot;,&quot;value&quot;:&quot;Ahmed Soliman&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahmed Soliman&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;??????? ??????? ??? ???????&quot;,&quot;value&quot;:&quot;??????? ??????? ??? ???????&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;??????? ??????? ??? ???????&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ayman Alatrash&quot;,&quot;value&quot;:&quot;Ayman Alatrash&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ayman Alatrash&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;mohamed ramadan&quot;,&quot;value&quot;:&quot;mohamed ramadan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;mohamed ramadan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;karim nada&quot;,&quot;value&quot;:&quot;karim nada&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;karim nada&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ahamad Fadl ala 111&quot;,&quot;value&quot;:&quot;Ahamad Fadl ala 111&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ahamad Fadl ala 111&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rida Elyaakkoubi&quot;,&quot;value&quot;:&quot;Rida Elyaakkoubi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rida Elyaakkoubi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;,&quot;value&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;scymark palmerahyï¿½hjdhffah b b&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Quadeer Khan&quot;,&quot;value&quot;:&quot;Quadeer Khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Quadeer Khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;YASAR ARAFATH M.K&quot;,&quot;value&quot;:&quot;YASAR ARAFATH M.K&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;YASAR ARAFATH M.K&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ahmed zaki&quot;,&quot;value&quot;:&quot;ahmed zaki&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ahmed zaki&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Mohammad Saeed&quot;,&quot;value&quot;:&quot;Mohammad Saeed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Mohammad Saeed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ameer Thaj&quot;,&quot;value&quot;:&quot;Ameer Thaj&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Ameer Thaj&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Jahangir Alam Alam&quot;,&quot;value&quot;:&quot;Jahangir Alam Alam&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Jahangir Alam Alam&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Shajahan hameed&quot;,&quot;value&quot;:&quot;Shajahan hameed&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Shajahan hameed&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Siraj Np&quot;,&quot;value&quot;:&quot;Siraj Np&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Siraj Np&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Nausad Raza&quot;,&quot;value&quot;:&quot;Nausad Raza&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Nausad Raza&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;O A&quot;,&quot;value&quot;:&quot;O A&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;O A&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Al Al&quot;,&quot;value&quot;:&quot;Al Al&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Al Al&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Tasnim Ur Rehman&quot;,&quot;value&quot;:&quot;Tasnim Ur Rehman&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Tasnim Ur Rehman&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;muhammed mujibur rahman&quot;,&quot;value&quot;:&quot;muhammed mujibur rahman&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;muhammed mujibur rahman&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Robin Kenyanya&quot;,&quot;value&quot;:&quot;Robin Kenyanya&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Robin Kenyanya&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user229&quot;,&quot;value&quot;:&quot;Test user229&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user229&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user227&quot;,&quot;value&quot;:&quot;Test user227&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user227&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user228&quot;,&quot;value&quot;:&quot;Test user228&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user228&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user225&quot;,&quot;value&quot;:&quot;Test user225&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user225&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user226&quot;,&quot;value&quot;:&quot;Test user226&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user226&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user230&quot;,&quot;value&quot;:&quot;Test user230&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user230&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user176&quot;,&quot;value&quot;:&quot;Test user176&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user176&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user194&quot;,&quot;value&quot;:&quot;Test user194&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user194&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user212&quot;,&quot;value&quot;:&quot;Test user212&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user212&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user205&quot;,&quot;value&quot;:&quot;Test user205&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user205&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user213&quot;,&quot;value&quot;:&quot;Test user213&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user213&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user207&quot;,&quot;value&quot;:&quot;Test user207&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user207&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user202&quot;,&quot;value&quot;:&quot;Test user202&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user202&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user191&quot;,&quot;value&quot;:&quot;Test user191&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user191&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user224&quot;,&quot;value&quot;:&quot;Test user224&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user224&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user208&quot;,&quot;value&quot;:&quot;Test user208&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user208&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user214&quot;,&quot;value&quot;:&quot;Test user214&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user214&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user198&quot;,&quot;value&quot;:&quot;Test user198&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user198&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user179&quot;,&quot;value&quot;:&quot;Test user179&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user179&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user177&quot;,&quot;value&quot;:&quot;Test user177&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user177&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user206&quot;,&quot;value&quot;:&quot;Test user206&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user206&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user220&quot;,&quot;value&quot;:&quot;Test user220&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user220&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user200&quot;,&quot;value&quot;:&quot;Test user200&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user200&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user216&quot;,&quot;value&quot;:&quot;Test user216&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user216&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user223&quot;,&quot;value&quot;:&quot;Test user223&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user223&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user210&quot;,&quot;value&quot;:&quot;Test user210&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user210&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user222&quot;,&quot;value&quot;:&quot;Test user222&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user222&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user189&quot;,&quot;value&quot;:&quot;Test user189&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user189&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user217&quot;,&quot;value&quot;:&quot;Test user217&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user217&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user193&quot;,&quot;value&quot;:&quot;Test user193&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user193&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user197&quot;,&quot;value&quot;:&quot;Test user197&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user197&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user221&quot;,&quot;value&quot;:&quot;Test user221&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user221&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user219&quot;,&quot;value&quot;:&quot;Test user219&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user219&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user183&quot;,&quot;value&quot;:&quot;Test user183&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user183&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user196&quot;,&quot;value&quot;:&quot;Test user196&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user196&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user195&quot;,&quot;value&quot;:&quot;Test user195&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user195&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user187&quot;,&quot;value&quot;:&quot;Test user187&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user187&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user203&quot;,&quot;value&quot;:&quot;Test user203&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user203&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user218&quot;,&quot;value&quot;:&quot;Test user218&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user218&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user215&quot;,&quot;value&quot;:&quot;Test user215&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user215&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user185&quot;,&quot;value&quot;:&quot;Test user185&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user185&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user192&quot;,&quot;value&quot;:&quot;Test user192&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user192&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user201&quot;,&quot;value&quot;:&quot;Test user201&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user201&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user209&quot;,&quot;value&quot;:&quot;Test user209&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user209&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user190&quot;,&quot;value&quot;:&quot;Test user190&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user190&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user180&quot;,&quot;value&quot;:&quot;Test user180&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user180&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user211&quot;,&quot;value&quot;:&quot;Test user211&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user211&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user199&quot;,&quot;value&quot;:&quot;Test user199&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user199&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user204&quot;,&quot;value&quot;:&quot;Test user204&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user204&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user188&quot;,&quot;value&quot;:&quot;Test user188&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user188&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user181&quot;,&quot;value&quot;:&quot;Test user181&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user181&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user182&quot;,&quot;value&quot;:&quot;Test user182&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user182&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user144&quot;,&quot;value&quot;:&quot;Test user144&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user144&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user145&quot;,&quot;value&quot;:&quot;Test user145&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user145&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user149&quot;,&quot;value&quot;:&quot;Test user149&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user149&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user143&quot;,&quot;value&quot;:&quot;Test user143&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user143&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user174&quot;,&quot;value&quot;:&quot;Test user174&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user174&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user153&quot;,&quot;value&quot;:&quot;Test user153&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user153&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user156&quot;,&quot;value&quot;:&quot;Test user156&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user156&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user162&quot;,&quot;value&quot;:&quot;Test user162&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user162&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user173&quot;,&quot;value&quot;:&quot;Test user173&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user173&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user160&quot;,&quot;value&quot;:&quot;Test user160&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user160&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user170&quot;,&quot;value&quot;:&quot;Test user170&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user170&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user167&quot;,&quot;value&quot;:&quot;Test user167&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user167&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user147&quot;,&quot;value&quot;:&quot;Test user147&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user147&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user175&quot;,&quot;value&quot;:&quot;Test user175&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user175&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user155&quot;,&quot;value&quot;:&quot;Test user155&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user155&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user141&quot;,&quot;value&quot;:&quot;Test user141&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user141&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user139&quot;,&quot;value&quot;:&quot;Test user139&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user139&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user138&quot;,&quot;value&quot;:&quot;Test user138&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user138&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user178&quot;,&quot;value&quot;:&quot;Test user178&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user178&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user171&quot;,&quot;value&quot;:&quot;Test user171&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user171&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user150&quot;,&quot;value&quot;:&quot;Test user150&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user150&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user158&quot;,&quot;value&quot;:&quot;Test user158&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user158&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user154&quot;,&quot;value&quot;:&quot;Test user154&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user154&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user184&quot;,&quot;value&quot;:&quot;Test user184&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user184&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user140&quot;,&quot;value&quot;:&quot;Test user140&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user140&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user146&quot;,&quot;value&quot;:&quot;Test user146&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user146&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user152&quot;,&quot;value&quot;:&quot;Test user152&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user152&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user165&quot;,&quot;value&quot;:&quot;Test user165&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user165&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user164&quot;,&quot;value&quot;:&quot;Test user164&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user164&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user159&quot;,&quot;value&quot;:&quot;Test user159&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user159&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user169&quot;,&quot;value&quot;:&quot;Test user169&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user169&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user161&quot;,&quot;value&quot;:&quot;Test user161&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user161&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user172&quot;,&quot;value&quot;:&quot;Test user172&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user172&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user168&quot;,&quot;value&quot;:&quot;Test user168&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user168&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user166&quot;,&quot;value&quot;:&quot;Test user166&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user166&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user148&quot;,&quot;value&quot;:&quot;Test user148&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user148&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user137&quot;,&quot;value&quot;:&quot;Test user137&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user137&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user157&quot;,&quot;value&quot;:&quot;Test user157&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user157&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user163&quot;,&quot;value&quot;:&quot;Test user163&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user163&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user186&quot;,&quot;value&quot;:&quot;Test user186&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user186&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user151&quot;,&quot;value&quot;:&quot;Test user151&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user151&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user130&quot;,&quot;value&quot;:&quot;Test user130&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user130&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user131&quot;,&quot;value&quot;:&quot;Test user131&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user131&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user134&quot;,&quot;value&quot;:&quot;Test user134&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user134&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user126&quot;,&quot;value&quot;:&quot;Test user126&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user126&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user127&quot;,&quot;value&quot;:&quot;Test user127&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user127&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user136&quot;,&quot;value&quot;:&quot;Test user136&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user136&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test user142&quot;,&quot;value&quot;:&quot;Test user142&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Test user142&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Aayush Sharma&quot;,&quot;value&quot;:&quot;Aayush Sharma&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Aayush Sharma&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Aayush&quot;,&quot;value&quot;:&quot;Aayush&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Aayush&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;garima Sethi&quot;,&quot;value&quot;:&quot;garima Sethi&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;garima Sethi&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;hrushikesh Kulkarni&quot;,&quot;value&quot;:&quot;hrushikesh Kulkarni&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;hrushikesh Kulkarni&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Diwakar Singh Maurya&quot;,&quot;value&quot;:&quot;Diwakar Singh Maurya&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Diwakar Singh Maurya&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;ashish Sharma&quot;,&quot;value&quot;:&quot;ashish Sharma&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;ashish Sharma&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;subhanker Sarker&quot;,&quot;value&quot;:&quot;subhanker Sarker&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;subhanker Sarker&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;samridhi Srivastava&quot;,&quot;value&quot;:&quot;samridhi Srivastava&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;samridhi Srivastava&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Noor Siddiqui&quot;,&quot;value&quot;:&quot;Noor Siddiqui&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Noor Siddiqui&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Deepak Rana&quot;,&quot;value&quot;:&quot;Deepak Rana&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Deepak Rana&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Daryl Fernandes&quot;,&quot;value&quot;:&quot;Daryl Fernandes&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Daryl Fernandes&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Rohit Dubey&quot;,&quot;value&quot;:&quot;Rohit Dubey&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Rohit Dubey&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Faraz Khan&quot;,&quot;value&quot;:&quot;Faraz Khan&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Faraz Khan&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Vijay Ramachandran&quot;,&quot;value&quot;:&quot;Vijay Ramachandran&quot;,&quot;isClient&quot;:false,&quot;isHidden&quot;:false,&quot;shortCode&quot;:&quot;Vijay Ramachandran&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Dealer Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Dealer Name&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Dealer Name&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;isACompetitorQuestion&quot;:false,&quot;multipleSelectionText&quot;:&quot; {{0}} &quot;,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false,&quot;shouldFillParticipantDataInOptions&quot;:false},&quot;previous&quot;:&quot;53338b2e-0abe-41ea-95b4-733db206f666&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;fad810ea-517a-4d58-b397-f16225a64172&quot;,&quot;next&quot;:&quot;a96e0e45-7d10-43c5-bee0-25794784ce00&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Outlet Location&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Outlet Location&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Outlet Location&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;007eb910-e2fe-4fbd-8832-d00cb4fb6a55&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;a96e0e45-7d10-43c5-bee0-25794784ce00&quot;,&quot;next&quot;:&quot;470fe5cc-723a-41d0-837c-b10402b93121&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Hello  ${qID://50a65a07-4cd2-496b-9239-b057b5f10bd9}, based on you recent experience with ${qID://e908a6e2-52a0-4efa-b07f-44d23a33220a/1}  situated at  ${qID://ab8d31bc-6716-41fd-8f63-4b8c5e4eb18d/1}&quot;,&quot;isRichTextEditorEnabled&quot;:false},&quot;previous&quot;:&quot;fad810ea-517a-4d58-b397-f16225a64172&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;},{&quot;id&quot;:&quot;470fe5cc-723a-41d0-837c-b10402b93121&quot;,&quot;next&quot;:&quot;2d610ddc-4c5b-46a0-9624-0b79e997ebba&quot;,&quot;config&quot;:{&quot;shortCode&quot;:&quot;NPS&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:true,&quot;ratingPoints&quot;:[{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;0&quot;,&quot;value&quot;:0,&quot;helpText&quot;:&quot;Not at all likely 👎&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;1&quot;,&quot;value&quot;:1,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;2&quot;,&quot;value&quot;:2,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;3&quot;,&quot;value&quot;:3,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;4&quot;,&quot;value&quot;:4,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;5&quot;,&quot;value&quot;:5,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#dd1946&quot;,&quot;label&quot;:&quot;6&quot;,&quot;value&quot;:6,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#cacfd5&quot;,&quot;label&quot;:&quot;7&quot;,&quot;value&quot;:7,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#cacfd5&quot;,&quot;label&quot;:&quot;8&quot;,&quot;value&quot;:8,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#008000&quot;,&quot;label&quot;:&quot;9&quot;,&quot;value&quot;:9,&quot;helpText&quot;:&quot;&quot;},{&quot;color&quot;:&quot;#008000&quot;,&quot;label&quot;:&quot;10&quot;,&quot;value&quot;:10,&quot;helpText&quot;:&quot;👍 Extremely likely&quot;}],&quot;isNPSQuestion&quot;:true,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Based on your recent showroom visit experience and interaction, how likely are you to recommend Bajaj Motorcycles to a friend or colleague?&quot;,&quot;notApplicableOption&quot;:{&quot;color&quot;:&quot;#6E6E6E&quot;,&quot;label&quot;:&quot;NA&quot;,&quot;value&quot;:&quot;NA&quot;,&quot;helpText&quot;:&quot;&quot;},&quot;enableNotApplicableOption&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;a96e0e45-7d10-43c5-bee0-25794784ce00&quot;,&quot;componentKind&quot;:&quot;RATING&quot;},{&quot;id&quot;:&quot;2d610ddc-4c5b-46a0-9624-0b79e997ebba&quot;,&quot;next&quot;:&quot;36669627-3000-4b75-999b-e0ffc2cc610b&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Based on your showroom visit experience, could you please tell us which of the following would you not recommend? 👎&quot;,&quot;isRichTextEditorEnabled&quot;:false},&quot;previous&quot;:&quot;470fe5cc-723a-41d0-837c-b10402b93121&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;},{&quot;id&quot;:&quot;36669627-3000-4b75-999b-e0ffc2cc610b&quot;,&quot;next&quot;:&quot;a19d7322-d86d-4517-8208-551e4c3f36e4&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Based on your showroom visit experience, could you please tell us which of the following would you recommend?  👍&quot;,&quot;isRichTextEditorEnabled&quot;:false},&quot;previous&quot;:&quot;2d610ddc-4c5b-46a0-9624-0b79e997ebba&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;},{&quot;id&quot;:&quot;a19d7322-d86d-4517-8208-551e4c3f36e4&quot;,&quot;next&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;config&quot;:{&quot;override&quot;:false,&quot;shortCode&quot;:&quot;__MCQ_DrilldownQu__Like/dislike&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:true,&quot;questionId&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;&quot;,&quot;drilldownQuestions&quot;:[{&quot;label&quot;:&quot;Products&quot;,&quot;value&quot;:&quot;1&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Products available on display or purchase&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Availability of different colors&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Range of products under company brand&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Product performance actual v/s promised&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;isRequired&quot;:false,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/bike-black.svg&quot;,&quot;questionId&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:false,&quot;questionShortCode&quot;:&quot;Products&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Accessibility of showrooms&quot;,&quot;value&quot;:&quot;2&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Distance to showroom&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Connectivity to location (Ease of Access)&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of identifying showrooms&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;isRequired&quot;:false,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/maps-black.svg&quot;,&quot;questionId&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:false,&quot;questionShortCode&quot;:&quot;Accessibility of showrooms&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Showroom infrastructure&quot;,&quot;value&quot;:&quot;3&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Quality of product display/demos&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Availability of parking&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Provision of seating area&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Provision for refreshments&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Cleanliness of showroom&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;isRequired&quot;:false,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/showroom-black.svg&quot;,&quot;questionId&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:false,&quot;questionShortCode&quot;:&quot;Showroom infrastructure&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Sales team interactions&quot;,&quot;value&quot;:&quot;4&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Waiting time&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Product knowledge of sales staff&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Accuracy of information provided&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Friendliness and Professionalism of sales team / Behaviour of Sales Team&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Availability of brochures with product information; use of digital media to showcase products&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Product demonstration&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Call backs with offers (in case visit did not lead to purchase)&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Fluency of sales team in the local language&quot;,&quot;value&quot;:&quot;8&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Prior awareness of sales team about customer preferences&quot;,&quot;value&quot;:&quot;9&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/person-black.svg&quot;,&quot;questionId&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Sales team interactions&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Test ride experience&quot;,&quot;value&quot;:&quot;5&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of slots for test ride&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of testride booking.&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Quality of route for test ride / Quaility of Test Ride Route&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Length of test ride&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Quality of bike used for the test ride&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/bike-black.svg&quot;,&quot;questionId&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Test ride experience&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Purchase formalities&quot;,&quot;value&quot;:&quot;6&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Provision for allocation of specific chassis/ Vehicle based on preference&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of payment and billing; time taken to invoice&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of registration procedure; time for RTO approval&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of tracking RTO / HSRP process&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Ease of Insurance procedure (ease of purchase, price etc.)&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Vehicle Delivery promised Vs actual / Time to road actual v/s estimated&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;One time collection of data / document&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/purchase-black.svg&quot;,&quot;questionId&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Purchase formalities&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Exchange experience&quot;,&quot;value&quot;:&quot;7&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of different broker options for exchange&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Number of documents required&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Exchange value&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Experience with exchange related services (pick up of vehicle, document transfer, etc.,)&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/exchange-black.svg&quot;,&quot;questionId&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Exchange experience&quot;,&quot;questionStatement&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;value&quot;:&quot;8&quot;,&quot;options&quot;:[{&quot;label&quot;:&quot;Ex-showroom price / Pricing (Ex Shpowroom &amp; On Road Price)&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Dealer handling charges&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Registration fee&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Charges for additional services&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;On road price&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Attractiveness of discounts and schemes&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;},{&quot;label&quot;:&quot;Freebies&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;}],&quot;shortCode&quot;:&quot;&quot;,&quot;optionIcon&quot;:&quot;${scheme}://email-template-assets-z.s3.ap-south-1.amazonaws.com/bal/survey-icons/price-black.svg&quot;,&quot;questionId&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;description&quot;:&quot;&quot;,&quot;lockPosition&quot;:true,&quot;questionShortCode&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;questionStatement&quot;:&quot;&quot;}],&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;36669627-3000-4b75-999b-e0ffc2cc610b&quot;,&quot;componentKind&quot;:&quot;MCQ_DRILLDOWN&quot;},{&quot;id&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;next&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Products&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Accessibility of showrooms&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Showroom infrastructure&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Sales team interactions&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Test ride experience&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Purchase formalities&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Exchange experience&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;value&quot;:&quot;8&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Like/dislike&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:true,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;a19d7322-d86d-4517-8208-551e4c3f36e4&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;next&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Products available on display or purchase&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Availability of different colors&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Range of products under company brand&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Product performance actual v/s promised&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Products&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Products&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;3f4722ba-bebd-4494-9923-058595a1087e&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;next&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Distance to showroom&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Connectivity to location (Ease of Access)&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of identifying showrooms&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Accessibility of showrooms&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Accessibility of showrooms&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;7f6383e6-c47a-459d-95f3-70c12e4dba38&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;next&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Quality of product display/demos&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Availability of parking&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Provision of seating area&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Provision for refreshments&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Cleanliness of showroom&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Showroom infrastructure&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Showroom infrastructure&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;43cef2d3-63ed-4814-9899-fe31a74885c4&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;next&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Waiting time&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Product knowledge of sales staff&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Accuracy of information provided&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Friendliness and Professionalism of sales team / Behaviour of Sales Team&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Availability of brochures with product information; use of digital media to showcase products&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Product demonstration&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Call backs with offers (in case visit did not lead to purchase)&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Fluency of sales team in the local language&quot;,&quot;value&quot;:&quot;8&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Prior awareness of sales team about customer preferences&quot;,&quot;value&quot;:&quot;9&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Sales team interactions&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Sales team interactions&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;55826113-958e-400f-ab70-7396df8073c3&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;next&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of slots for test ride&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of testride booking.&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Quality of route for test ride / Quaility of Test Ride Route&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Length of test ride&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Quality of bike used for the test ride&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Test ride experience&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Test ride experience&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;c8176153-6595-4f70-a0e0-50425ca1b628&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;next&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Provision for allocation of specific chassis/ Vehicle based on preference&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of payment and billing; time taken to invoice&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of registration procedure; time for RTO approval&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of tracking RTO / HSRP process&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Ease of Insurance procedure (ease of purchase, price etc.)&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Vehicle Delivery promised Vs actual / Time to road actual v/s estimated&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;One time collection of data / document&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Purchase formalities&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Purchase formalities&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;65c7b4ea-ae43-468c-b2bc-2686a4be53d4&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;next&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Availability of different broker options for exchange&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Number of documents required&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Exchange value&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Experience with exchange related services (pick up of vehicle, document transfer, etc.,)&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Exchange experience&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Exchange experience&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;d623736d-71d3-48e3-b8ed-261fd865ee7b&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;next&quot;:&quot;5f4380eb-06ad-4dcf-ab54-69e056eaefb1&quot;,&quot;config&quot;:{&quot;options&quot;:[{&quot;label&quot;:&quot;Ex-showroom price / Pricing (Ex Shpowroom &amp; On Road Price)&quot;,&quot;value&quot;:&quot;1&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Dealer handling charges&quot;,&quot;value&quot;:&quot;2&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Registration fee&quot;,&quot;value&quot;:&quot;3&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Charges for additional services&quot;,&quot;value&quot;:&quot;4&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;On road price&quot;,&quot;value&quot;:&quot;5&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Attractiveness of discounts and schemes&quot;,&quot;value&quot;:&quot;6&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false},{&quot;label&quot;:&quot;Freebies&quot;,&quot;value&quot;:&quot;7&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;isHidden&quot;:true,&quot;shortCode&quot;:&quot;Prices, discounts and promotional schemes&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;TAP&quot;,&quot;showAsReadOnly&quot;:false,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot; : Prices, discounts and promotional schemes&quot;,&quot;allowMultipleSelection&quot;:true,&quot;isDemographicsQuestion&quot;:false,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;3006457d-c13d-4ce5-9124-e5dc96aff5fc&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;5f4380eb-06ad-4dcf-ab54-69e056eaefb1&quot;,&quot;next&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;config&quot;:{&quot;maxWords&quot;:300,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Open_End&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:true,&quot;showAsReadOnly&quot;:false,&quot;placeHolderText&quot;:&quot;Your feedback will help us improve.&quot;,&quot;questionStatement&quot;:&quot;Do you have any other suggestions for us to improve your experience?&quot;},&quot;previous&quot;:&quot;8997efb7-6fd3-4539-aec5-fb864c75453b&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;next&quot;:&quot;3e34b168-e083-4b8a-b565-e56baf18f72f&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;Would you be willing to participate in a call-back?&quot;,&quot;value&quot;:&quot;Yes&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Call-back&quot;,&quot;whenToAsk&quot;:&quot;ALWAYS&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;CHECKBOXES&quot;,&quot;defaultAnswer&quot;:[&quot;Yes&quot;],&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Would you be willing to participate in a call-back?&quot;,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;5f4380eb-06ad-4dcf-ab54-69e056eaefb1&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;3e34b168-e083-4b8a-b565-e56baf18f72f&quot;,&quot;next&quot;:&quot;77d8bff6-9506-4974-bab1-0a42a5043476&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Doc Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Doc Name&quot;},&quot;previous&quot;:&quot;1f758e65-43b5-4d2e-85f1-215ead998b31&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;77d8bff6-9506-4974-bab1-0a42a5043476&quot;,&quot;next&quot;:&quot;75e8a0df-6195-4f8c-96b1-83fa0d6b70bb&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Doc ID&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Doc ID&quot;},&quot;previous&quot;:&quot;3e34b168-e083-4b8a-b565-e56baf18f72f&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;75e8a0df-6195-4f8c-96b1-83fa0d6b70bb&quot;,&quot;next&quot;:&quot;7fcc0f6d-eeb8-4f18-83f6-95b68e196240&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Enquiry Creation Date&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Enquiry Creation Date&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Enquiry Creation Date&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;77d8bff6-9506-4974-bab1-0a42a5043476&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;7fcc0f6d-eeb8-4f18-83f6-95b68e196240&quot;,&quot;next&quot;:&quot;dc36b778-3dde-455f-b9c1-9f7c0b089dc1&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Enquiry Type&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Enquiry Type&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Enquiry Type&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;75e8a0df-6195-4f8c-96b1-83fa0d6b70bb&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;dc36b778-3dde-455f-b9c1-9f7c0b089dc1&quot;,&quot;next&quot;:&quot;6c1593c7-8ae4-4b85-a5b4-2e793c18317c&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Sales Advisor&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Sales Advisor&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Sales Advisor&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;7fcc0f6d-eeb8-4f18-83f6-95b68e196240&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;6c1593c7-8ae4-4b85-a5b4-2e793c18317c&quot;,&quot;next&quot;:&quot;34a7f45b-de2c-490d-b730-019989e39ad0&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Customer Mobile number&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Customer Mobile number&quot;},&quot;previous&quot;:&quot;dc36b778-3dde-455f-b9c1-9f7c0b089dc1&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;34a7f45b-de2c-490d-b730-019989e39ad0&quot;,&quot;next&quot;:&quot;6c782dc2-8336-4872-94a1-8d2e49e18845&quot;,&quot;config&quot;:{&quot;maxWords&quot;:5000,&quot;minWords&quot;:0,&quot;shortCode&quot;:&quot;Customer ID&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isMultiLine&quot;:false,&quot;showAsReadOnly&quot;:false,&quot;questionStatement&quot;:&quot;Customer ID&quot;},&quot;previous&quot;:&quot;6c1593c7-8ae4-4b85-a5b4-2e793c18317c&quot;,&quot;componentKind&quot;:&quot;OPENEND&quot;},{&quot;id&quot;:&quot;6c782dc2-8336-4872-94a1-8d2e49e18845&quot;,&quot;next&quot;:&quot;8a24f8f1-a2ac-4053-904f-8c1e5787aa02&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Preferred language&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Preferred language&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Preferred language&quot;,&quot;isLanguageController&quot;:true,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;34a7f45b-de2c-490d-b730-019989e39ad0&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;8a24f8f1-a2ac-4053-904f-8c1e5787aa02&quot;,&quot;next&quot;:&quot;2beb434c-97d2-4166-863a-c95162b89ce1&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Dealer Code&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Dealer Code&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Dealer Code&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;6c782dc2-8336-4872-94a1-8d2e49e18845&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;2beb434c-97d2-4166-863a-c95162b89ce1&quot;,&quot;next&quot;:&quot;df23f48f-97ae-4972-80e5-f677693b311a&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Branch Name&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Branch Name&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Branch Name&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;8a24f8f1-a2ac-4053-904f-8c1e5787aa02&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;df23f48f-97ae-4972-80e5-f677693b311a&quot;,&quot;next&quot;:&quot;4c719cc3-be5b-4083-aa0a-d8ff6c8fa84a&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Branch Code&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Branch Code&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Branch Code&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;2beb434c-97d2-4166-863a-c95162b89ce1&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;4c719cc3-be5b-4083-aa0a-d8ff6c8fa84a&quot;,&quot;next&quot;:&quot;4050fca4-d989-41cd-860d-6442936c7868&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Branch Location&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Branch Location&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Branch Location&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;df23f48f-97ae-4972-80e5-f677693b311a&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;4050fca4-d989-41cd-860d-6442936c7868&quot;,&quot;next&quot;:&quot;3f2b9635-4c1e-4e30-8793-071b6a281320&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Episode&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Episode&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Episode&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;4c719cc3-be5b-4083-aa0a-d8ff6c8fa84a&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;3f2b9635-4c1e-4e30-8793-071b6a281320&quot;,&quot;next&quot;:&quot;fe22f26a-95a5-46fe-85c8-5334a48c35cf&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Business Unit&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Business Unit&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Business Unit&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;4050fca4-d989-41cd-860d-6442936c7868&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;fe22f26a-95a5-46fe-85c8-5334a48c35cf&quot;,&quot;next&quot;:&quot;4cf70b6c-e8d8-4085-ad51-8a2a76ea8d2e&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;OTP Verification Trend&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:false,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;OTP Verification Trend&quot;,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;3f2b9635-4c1e-4e30-8793-071b6a281320&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;4cf70b6c-e8d8-4085-ad51-8a2a76ea8d2e&quot;,&quot;next&quot;:&quot;670c10e0-280b-451e-ae16-d6fccae52bf7&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Circle&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Circle&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Circle&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;fe22f26a-95a5-46fe-85c8-5334a48c35cf&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;670c10e0-280b-451e-ae16-d6fccae52bf7&quot;,&quot;next&quot;:&quot;dfc430b6-2512-4420-91b6-0dd2e47ff736&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;Region&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;Region&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;Region&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;4cf70b6c-e8d8-4085-ad51-8a2a76ea8d2e&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;dfc430b6-2512-4420-91b6-0dd2e47ff736&quot;,&quot;next&quot;:&quot;f1c5310d-4547-4633-9b80-54fbe9f03183&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;ASM&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;ASM&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;ASM&quot;,&quot;isPrimaryDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0},&quot;previous&quot;:&quot;670c10e0-280b-451e-ae16-d6fccae52bf7&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;f1c5310d-4547-4633-9b80-54fbe9f03183&quot;,&quot;next&quot;:&quot;f59f7ca8-5321-4b63-83b9-616dc7f51dee&quot;,&quot;config&quot;:{&quot;answer&quot;:[],&quot;options&quot;:[{&quot;label&quot;:&quot;TBD&quot;,&quot;value&quot;:&quot;TBD&quot;,&quot;shortCode&quot;:&quot;&quot;,&quot;lockPosition&quot;:false}],&quot;override&quot;:false,&quot;shortCode&quot;:&quot;City&quot;,&quot;whenToAsk&quot;:&quot;NEVER&quot;,&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;isDimension&quot;:true,&quot;displayStyle&quot;:&quot;DROPDOWN&quot;,&quot;attributeName&quot;:&quot;City&quot;,&quot;defaultAnswer&quot;:null,&quot;showAsReadOnly&quot;:false,&quot;bulkOptionsText&quot;:&quot;&quot;,&quot;randomizeOptions&quot;:false,&quot;questionStatement&quot;:&quot;City&quot;,&quot;isLocationQuestion&quot;:false,&quot;isPrimaryDimension&quot;:false,&quot;inTopThreeDimension&quot;:false,&quot;allowMultipleSelection&quot;:false,&quot;isDemographicsQuestion&quot;:false,&quot;satisfactionScoreConfig&quot;:{&quot;endRange&quot;:0,&quot;startRange&quot;:0},&quot;bulkOptionsTextDelimiter&quot;:&quot;&quot;,&quot;limitOfMultipleSelection&quot;:0,&quot;isHiddenInResponseDetails&quot;:false,&quot;isSatisfactionScoreQuestion&quot;:false},&quot;previous&quot;:&quot;dfc430b6-2512-4420-91b6-0dd2e47ff736&quot;,&quot;componentKind&quot;:&quot;MULTIPLE_CHOICE&quot;},{&quot;id&quot;:&quot;f59f7ca8-5321-4b63-83b9-616dc7f51dee&quot;,&quot;config&quot;:{&quot;conditions&quot;:[],&quot;isRequired&quot;:false,&quot;questionStatement&quot;:&quot;Terms  | Disclaimer  | Privacy Policy \u0001Copyright © 2021 Bajaj Auto Ltd. All rights reserved&quot;,&quot;isRichTextEditorEnabled&quot;:true,&quot;questionStatementRichText&quot;:{&quot;blocks&quot;:[{&quot;key&quot;:&quot;djaps&quot;,&quot;data&quot;:{&quot;text-align&quot;:&quot;center&quot;},&quot;text&quot;:&quot;Terms  | Disclaimer  | Privacy Policy &quot;,&quot;type&quot;:&quot;unstyled&quot;,&quot;depth&quot;:0,&quot;entityRanges&quot;:[{&quot;key&quot;:0,&quot;length&quot;:5,&quot;offset&quot;:0},{&quot;key&quot;:1,&quot;length&quot;:10,&quot;offset&quot;:9},{&quot;key&quot;:2,&quot;length&quot;:14,&quot;offset&quot;:23}],&quot;inlineStyleRanges&quot;:[]},{&quot;key&quot;:&quot;40mpr&quot;,&quot;data&quot;:{&quot;text-align&quot;:&quot;center&quot;},&quot;text&quot;:&quot;Copyright © 2021 Bajaj Auto Ltd. All rights reserved&quot;,&quot;type&quot;:&quot;unstyled&quot;,&quot;depth&quot;:0,&quot;entityRanges&quot;:[],&quot;inlineStyleRanges&quot;:[]}],&quot;entityMap&quot;:{&quot;0&quot;:{&quot;data&quot;:{&quot;url&quot;:&quot;${scheme}://www.bajajauto.com/onlinebooking-tnc&quot;,&quot;targetOption&quot;:&quot;_blank&quot;},&quot;type&quot;:&quot;LINK&quot;,&quot;mutability&quot;:&quot;MUTABLE&quot;},&quot;1&quot;:{&quot;data&quot;:{&quot;url&quot;:&quot;${scheme}://www.bajajauto.com/disclaimer&quot;,&quot;targetOption&quot;:&quot;_blank&quot;},&quot;type&quot;:&quot;LINK&quot;,&quot;mutability&quot;:&quot;MUTABLE&quot;},&quot;2&quot;:{&quot;data&quot;:{&quot;url&quot;:&quot;${scheme}://www.bajajauto.com/privacy-policy&quot;,&quot;targetOption&quot;:&quot;_blank&quot;},&quot;type&quot;:&quot;LINK&quot;,&quot;mutability&quot;:&quot;MUTABLE&quot;}}}},&quot;previous&quot;:&quot;f1c5310d-4547-4633-9b80-54fbe9f03183&quot;,&quot;componentKind&quot;:&quot;FIXED_TEXT&quot;}]}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="796 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;shouldEscalatePartialResponse&quot;:false,&quot;escalationMetaDataFieldsToShowInMail&quot;:[],&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $selectedLanguages: [String!], $newLanguage: String, $globalTranslations: JSONObject, $shouldEscalatePartialResponse: Boolean, $escalationMetaDataFieldsToShowInMail: [String!]) {\n  updateCampaignExtension(campaignId: $campaignId, selectedLanguages: $selectedLanguages, newLanguage: $newLanguage, globalTranslations: $globalTranslations, shouldEscalatePartialResponse: $shouldEscalatePartialResponse, escalationMetaDataFieldsToShowInMail: $escalationMetaDataFieldsToShowInMail)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $selectedLanguages: [String!], $newLanguage: String, $globalTranslations: JSONObject, $shouldEscalatePartialResponse: Boolean, $escalationMetaDataFieldsToShowInMail: [String!]) {
  updateCampaignExtension(campaignId: $campaignId, selectedLanguages: $selectedLanguages, newLanguage: $newLanguage, globalTranslations: $globalTranslations, shouldEscalatePartialResponse: $shouldEscalatePartialResponse, escalationMetaDataFieldsToShowInMail: $escalationMetaDataFieldsToShowInMail)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;shouldEscalatePartialResponse&quot;:false,&quot;escalationMetaDataFieldsToShowInMail&quot;:[],&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="797 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    allowPartialSubmit\n    tokenExpiryInHours\n    questionnaire\n    genericTranslationDetails {\n      shouldEscalatePartialResponse\n      escalationMetaDataFieldsToShowInMail\n      __typename\n    }\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    allowPartialSubmit
    tokenExpiryInHours
    questionnaire
    genericTranslationDetails {
      shouldEscalatePartialResponse
      escalationMetaDataFieldsToShowInMail
      __typename
    }
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="799 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;enableBulletPoint&quot;:false},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $enableBulletPoint: Boolean!) {\n  updateBulletPointAndTextAnalysis(campaignId: $campaignId, enableBulletPoint: $enableBulletPoint)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $enableBulletPoint: Boolean!) {
  updateBulletPointAndTextAnalysis(campaignId: $campaignId, enableBulletPoint: $enableBulletPoint)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;enableBulletPoint&quot;:false}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="800 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  getBulletPointStatus(campaignId: $campaignId)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  getBulletPointStatus(campaignId: $campaignId)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="801 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;isScheduleEnable&quot;:false,&quot;isDistributionEnable&quot;:false},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $isScheduleEnable: Boolean!, $isDistributionEnable: Boolean!) {\n  updateDistrubutionAndScheduleEnables(campaignId: $campaignId, isScheduleEnable: $isScheduleEnable, isDistributionEnable: $isDistributionEnable)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $isScheduleEnable: Boolean!, $isDistributionEnable: Boolean!) {
  updateDistrubutionAndScheduleEnables(campaignId: $campaignId, isScheduleEnable: $isScheduleEnable, isDistributionEnable: $isDistributionEnable)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;isScheduleEnable&quot;:false,&quot;isDistributionEnable&quot;:false}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="802 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    isDistributionEnable\n    isScheduleEnable\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    isDistributionEnable
    isScheduleEnable
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="804 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;showNpsDistributionVariationByResponseRate&quot;:true},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $showNpsDistributionVariationByResponseRate: Boolean!) {\n  updateFlagNpsDistributionVariationByResponseRate(campaignId: $campaignId, showNpsDistributionVariationByResponseRate: $showNpsDistributionVariationByResponseRate)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $showNpsDistributionVariationByResponseRate: Boolean!) {
  updateFlagNpsDistributionVariationByResponseRate(campaignId: $campaignId, showNpsDistributionVariationByResponseRate: $showNpsDistributionVariationByResponseRate)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;showNpsDistributionVariationByResponseRate&quot;:true}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="805 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  getFlagshowNpsDistributionVariationByResponseRate(campaignId: $campaignId)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  getFlagshowNpsDistributionVariationByResponseRate(campaignId: $campaignId)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="806 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;enableTextAnalysisFunctions&quot;:false},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $enableTextAnalysisFunctions: Boolean!) {\n  updateTextAnalysisStatus(campaignId: $campaignId, enableTextAnalysisFunctions: $enableTextAnalysisFunctions)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $enableTextAnalysisFunctions: Boolean!) {
  updateTextAnalysisStatus(campaignId: $campaignId, enableTextAnalysisFunctions: $enableTextAnalysisFunctions)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;enableTextAnalysisFunctions&quot;:false}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="807 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  getTextAnalysisStatus(campaignId: $campaignId)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  getTextAnalysisStatus(campaignId: $campaignId)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="808 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;progressBarVisibility&quot;:false},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $progressBarVisibility: Boolean!) {\n  toggleProgressBarVisibility(campaignId: $campaignId, progressBarVisibility: $progressBarVisibility)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $progressBarVisibility: Boolean!) {
  toggleProgressBarVisibility(campaignId: $campaignId, progressBarVisibility: $progressBarVisibility)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;progressBarVisibility&quot;:false}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="809 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  progressBarVisibilityStatus(campaignId: $campaignId)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  progressBarVisibilityStatus(campaignId: $campaignId)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="811 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;predictiveStatus&quot;:false},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $predictiveStatus: Boolean!) {\n  updatePredictiveAnalyticsStatus(campaignId: $campaignId, predictiveStatus: $predictiveStatus)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $predictiveStatus: Boolean!) {
  updatePredictiveAnalyticsStatus(campaignId: $campaignId, predictiveStatus: $predictiveStatus)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;predictiveStatus&quot;:false}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="812 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;regressionStatus&quot;:true},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $regressionStatus: Boolean!) {\n  updateRegressionAnalyticsStatus(campaignId: $campaignId, regressionStatus: $regressionStatus)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $regressionStatus: Boolean!) {
  updateRegressionAnalyticsStatus(campaignId: $campaignId, regressionStatus: $regressionStatus)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;regressionStatus&quot;:true}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="813 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  GetPredictiveAnalyticsStatus(campaignId: $campaignId)\n  GetRegressionAnalyticsStatus(campaignId: $campaignId)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  GetPredictiveAnalyticsStatus(campaignId: $campaignId)
  GetRegressionAnalyticsStatus(campaignId: $campaignId)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="814 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  getUserConfigurableInputDetails(campaignId: $campaignId) {\n    addNewRciVisibility\n    campaignId\n    userConfigurationForIlr\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  getUserConfigurableInputDetails(campaignId: $campaignId) {
    addNewRciVisibility
    campaignId
    userConfigurationForIlr
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="816 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;configData&quot;:{&quot;customFieldForNewRci&quot;:[],&quot;isAddNewRciEnabled&quot;:true}},&quot;query&quot;:&quot;mutation ($campaignId: ID!, $configData: JSONObject!) {\n  updateRciConfigForDiy(campaignId: $campaignId, configData: $configData)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">mutation ($campaignId: ID!, $configData: JSONObject!) {
  updateRciConfigForDiy(campaignId: $campaignId, configData: $configData)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;,&quot;configData&quot;:{&quot;customFieldForNewRci&quot;:[],&quot;isAddNewRciEnabled&quot;:true}}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="817 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  getUserConfigurableInputDetails(campaignId: $campaignId) {\n    addNewRciVisibility\n    campaignId\n    userConfigurationForIlr\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  getUserConfigurableInputDetails(campaignId: $campaignId) {
    addNewRciVisibility
    campaignId
    userConfigurationForIlr
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="821 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  getCampaignQuestions(campaignId: $campaignId)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  getCampaignQuestions(campaignId: $campaignId)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="820 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  campaign(campaignId: $campaignId) {\n    questionnaire\n    __typename\n  }\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  campaign(campaignId: $campaignId) {
    questionnaire
    __typename
  }
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="GraphQLHTTPSamplerGui" testclass="HTTPSamplerProxy" testname="822 - /api/graphql/ ()">
              <stringProp name="HTTPSampler.domain">idfc-api.zykrr.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/graphql/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument" enabled="true">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;operationName&quot;:null,&quot;variables&quot;:{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;},&quot;query&quot;:&quot;query ($campaignId: ID!) {\n  getCampaignRulesConfiguration(campaignId: $campaignId)\n}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="GraphQLHTTPSampler.query">query ($campaignId: ID!) {
  getCampaignRulesConfiguration(campaignId: $campaignId)
}
</stringProp>
              <stringProp name="GraphQLHTTPSampler.variables">{&quot;campaignId&quot;:&quot;e58da119-ccde-40aa-b926-439bb891a5b6&quot;}</stringProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com/</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-name" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-name</stringProp>
                    <stringProp name="Header.value">diy</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://idfc-diy3.zykrr.com</stringProp>
                  </elementProp>
                  <elementProp name="Priority" elementType="Header">
                    <stringProp name="Header.name">Priority</stringProp>
                    <stringProp name="Header.value">u=4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="apollographql-client-version" elementType="Header">
                    <stringProp name="Header.name">apollographql-client-version</stringProp>
                    <stringProp name="Header.value">3.0.0</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:126.0) Gecko/20100101 Firefox/126.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">cookie</stringProp>
                    <stringProp name="Header.value">zykrr=${token}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">4</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">3</intProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
        <stringProp name="ProxyControlGui.domains">idfc-diy3.zykrr.com</stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">recording.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
